(self.webpackChunkreact_big_calendar=self.webpackChunkreact_big_calendar||[]).push([[792],{"./.storybook/preview.js-generated-config-entry.js":function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{__namedExportsOrder:function(){return __namedExportsOrder},parameters:function(){return parameters}});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}},storySort:{order:["About Big Calendar","About Our Examples","props","Examples","Guides","Addons",["Introduction","props"]]},viewMode:"docs"},__namedExportsOrder=["parameters"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return(0,ClientApi.FQ)(value);case"argTypes":return(0,ClientApi.hA)(value);case"decorators":return value.forEach((function(decorator){return(0,ClientApi.dK)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.$K)(loader,!1)}));case"parameters":return(0,ClientApi.Gu)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.T$)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.FW)(enhancer)}));case"render":return(0,ClientApi.kf)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.Gu)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./stories/Calendar.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ComplexDayViewLayout:function(){return ComplexDayViewLayout},CustomDateCellWrapper:function(){return CustomDateCellWrapper},CustomDayColumnWrapper:function(){return CustomDayColumnWrapper},CustomEventWrapper:function(){return CustomEventWrapper},CustomNoAgendaEventsLabel:function(){return CustomNoAgendaEventsLabel},CustomShowMore:function(){return CustomShowMore},CustomTimeGutterHeader:function(){return CustomTimeGutterHeader},CustomTimeGutterWrapper:function(){return CustomTimeGutterWrapper},CustomTimeSlotWrapper:function(){return CustomTimeSlotWrapper},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),_resources_events__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./stories/resources/events.js"),_src__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/index.js"),_helpers__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./stories/helpers/index.js"),_helpers_createEvents__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./stories/helpers/createEvents.js"),_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./stories/resources/customComponents.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Additional Examples",component:_src__WEBPACK_IMPORTED_MODULE_4__.Vv,decorators:[function(Story){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Story,{})})}]};var Template=function Template(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_helpers__WEBPACK_IMPORTED_MODULE_5__.Vv,Object.assign({},args))};Template.displayName="Template";var ComplexDayViewLayout=Template.bind({});ComplexDayViewLayout.storyName="complex day view layout",ComplexDayViewLayout.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.DAY,defaultDate:new Date,events:(0,_helpers_createEvents__WEBPACK_IMPORTED_MODULE_8__.A)(1),step:30};var TimeGutter=function TimeGutter(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("p",{children:"Custom gutter text"})};TimeGutter.displayName="TimeGutter";var CustomTimeGutterHeader=Template.bind({});CustomTimeGutterHeader.storyName="custom TimeGutter header",CustomTimeGutterHeader.args={popup:!0,events:_resources_events__WEBPACK_IMPORTED_MODULE_3__.A,onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event selected"),defaultDate:new Date(2015,3,1),defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.WEEK,views:[_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.WEEK,_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.DAY],components:{timeGutterHeader:TimeGutter}};var CustomTimeGutterWrapper=Template.bind({});CustomTimeGutterWrapper.storyName="custom TimeGutter wrapper",CustomTimeGutterWrapper.args={popup:!0,events:_resources_events__WEBPACK_IMPORTED_MODULE_3__.A,onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event selected"),defaultDate:new Date(2015,3,1),defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.WEEK,views:[_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.WEEK,_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.DAY],components:{timeGutterWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__.A.timeGutterWrapper}};var CustomDateCellWrapper=Template.bind({});CustomDateCellWrapper.storyName="add custom dateCellWrapper",CustomDateCellWrapper.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.MONTH,events:_helpers__WEBPACK_IMPORTED_MODULE_5__.AZ,components:{dateCellWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__.A.dateCellWrapper}};var CustomTimeSlotWrapper=Template.bind({});CustomTimeSlotWrapper.storyName="add custom timeSlotWrapper",CustomTimeSlotWrapper.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.DAY,events:_helpers__WEBPACK_IMPORTED_MODULE_5__.AZ,components:{timeSlotWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__.A.timeSlotWrapper}};var CustomEventWrapper=Template.bind({});CustomEventWrapper.storyName="add custom eventWrapper",CustomEventWrapper.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.DAY,events:_helpers__WEBPACK_IMPORTED_MODULE_5__.AZ,components:{eventWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__.A.eventWrapper}};var CustomNoAgendaEventsLabel=Template.bind({});CustomNoAgendaEventsLabel.storyName="add custom no agenda events label",CustomNoAgendaEventsLabel.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.AGENDA,events:_helpers__WEBPACK_IMPORTED_MODULE_5__.AZ,messages:{noEventsInRange:"There are no special events in this range [test message]"}};var CustomDayColumnWrapper=Template.bind({});CustomDayColumnWrapper.storyName="add custom dayColumnWrapper",CustomDayColumnWrapper.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.DAY,events:_helpers__WEBPACK_IMPORTED_MODULE_5__.GI,resources:_helpers__WEBPACK_IMPORTED_MODULE_5__.ES,resourceAccessor:"resourceId",resourceIdAccessor:"id",resourceTitleAccessor:"name",components:{dayColumnWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__.A.dayColumnWrapper}},CustomDayColumnWrapper.parameters={docs:{description:{story:"The custom DayColumnWrapper allows you to add your own custom logic when rendering a Day Column."}}};var CustomShowMore=Template.bind({});CustomShowMore.storyName="add custom showMore",CustomShowMore.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.MONTH,events:_helpers__WEBPACK_IMPORTED_MODULE_5__.AZ,components:{showMore:_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__.A.showMore}},ComplexDayViewLayout.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},ComplexDayViewLayout.parameters),CustomTimeGutterHeader.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomTimeGutterHeader.parameters),CustomTimeGutterWrapper.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomTimeGutterWrapper.parameters),CustomDateCellWrapper.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomDateCellWrapper.parameters),CustomTimeSlotWrapper.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomTimeSlotWrapper.parameters),CustomEventWrapper.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomEventWrapper.parameters),CustomNoAgendaEventsLabel.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomNoAgendaEventsLabel.parameters),CustomDayColumnWrapper.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomDayColumnWrapper.parameters),CustomShowMore.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomShowMore.parameters);var __namedExportsOrder=["ComplexDayViewLayout","CustomTimeGutterHeader","CustomTimeGutterWrapper","CustomDateCellWrapper","CustomTimeSlotWrapper","CustomEventWrapper","CustomNoAgendaEventsLabel","CustomDayColumnWrapper","CustomShowMore"]},"./stories/DragAndDrop.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomStepsAndTimeslots:function(){return CustomStepsAndTimeslots},DraggableAndResizable:function(){return DraggableAndResizable},DraggableMultipleResources:function(){return DraggableMultipleResources},WithCustomDateCellWrapper:function(){return WithCustomDateCellWrapper},WithCustomEventWrapper:function(){return WithCustomEventWrapper},WithCustomTimeslotWrapper:function(){return WithCustomTimeslotWrapper},WithMultiDayTimes:function(){return WithMultiDayTimes},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./stories/helpers/index.js"),_resources_customComponents__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./stories/resources/customComponents.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Additional Examples/Drag and Drop",component:_helpers__WEBPACK_IMPORTED_MODULE_3__.Vv,decorators:[function(Story){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Story,{})})}]};var Template=function Template(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_helpers__WEBPACK_IMPORTED_MODULE_3__.zm,Object.assign({},args))})};Template.displayName="Template";var DraggableAndResizable=Template.bind({});DraggableAndResizable.storyName="draggable and resizable",DraggableAndResizable.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,events:_helpers__WEBPACK_IMPORTED_MODULE_3__.AZ,resizable:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized")};var CustomStepsAndTimeslots=Template.bind({});CustomStepsAndTimeslots.storyName="draggable and resizable with non-default steps and timeslots",CustomStepsAndTimeslots.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,events:_helpers__WEBPACK_IMPORTED_MODULE_3__.AZ,resizable:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized"),steps:15,timeslots:4};var WithMultiDayTimes=Template.bind({});WithMultiDayTimes.storyName="draggable and resizable with showMultiDayTimes",WithMultiDayTimes.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,events:_helpers__WEBPACK_IMPORTED_MODULE_3__.AZ,resizable:!0,showMultiDayTimes:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized")};var WithCustomDateCellWrapper=Template.bind({});WithCustomDateCellWrapper.storyName="draggable and resizable with custom dateCellWrapper",WithCustomDateCellWrapper.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,events:_helpers__WEBPACK_IMPORTED_MODULE_3__.AZ,resizable:!0,showMultiDayTimes:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized"),components:{dateCellWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_4__.A.dateCellWrapper}};var WithCustomTimeslotWrapper=Template.bind({});WithCustomTimeslotWrapper.storyName="draggable and resizable with custom timeSlotWrapper",WithCustomTimeslotWrapper.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,events:_helpers__WEBPACK_IMPORTED_MODULE_3__.AZ,resizable:!0,showMultiDayTimes:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized"),components:{timeSlotWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_4__.A.timeSlotWrapper}};var WithCustomEventWrapper=Template.bind({});WithCustomEventWrapper.storyName="draggable and resizable with custom eventWrapper",WithCustomEventWrapper.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,events:_helpers__WEBPACK_IMPORTED_MODULE_3__.AZ,resizable:!0,showMultiDayTimes:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized"),components:{eventWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_4__.A.eventWrapper}};var DraggableMultipleResources=Template.bind({});DraggableMultipleResources.storyName="draggable and resizable with multiple resource lanes",DraggableMultipleResources.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.DAY,views:[_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.DAY,_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.AGENDA],events:_helpers__WEBPACK_IMPORTED_MODULE_3__.GI,resources:_helpers__WEBPACK_IMPORTED_MODULE_3__.ES,resourceAccessor:"resourceId",resourceIdAccessor:"id",resourceTitleAccessor:"name",resizable:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized")},DraggableAndResizable.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},DraggableAndResizable.parameters),CustomStepsAndTimeslots.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},CustomStepsAndTimeslots.parameters),WithMultiDayTimes.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},WithMultiDayTimes.parameters),WithCustomDateCellWrapper.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},WithCustomDateCellWrapper.parameters),WithCustomTimeslotWrapper.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},WithCustomTimeslotWrapper.parameters),WithCustomEventWrapper.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},WithCustomEventWrapper.parameters),DraggableMultipleResources.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},DraggableMultipleResources.parameters);var __namedExportsOrder=["DraggableAndResizable","CustomStepsAndTimeslots","WithMultiDayTimes","WithCustomDateCellWrapper","WithCustomTimeslotWrapper","WithCustomEventWrapper","DraggableMultipleResources"]},"./stories/Durations.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DaylightSavingsEnds:function(){return DaylightSavingsEnds},DaylightSavingsEndsAfter2Am:function(){return DaylightSavingsEndsAfter2Am},DaylightSavingsStarts:function(){return DaylightSavingsStarts},DaylightSavingsStartsAfter2Am:function(){return DaylightSavingsStartsAfter2Am},__namedExportsOrder:function(){return __namedExportsOrder}});var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react_big_calendar__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./src/index.js")),_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/addons/dragAndDrop/index.js"),moment__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__),globalize__WEBPACK_IMPORTED_MODULE_6__=(__webpack_require__("./node_modules/moment-timezone/builds/moment-timezone-with-data-1970-2030.js"),__webpack_require__("./node_modules/globalize/lib/globalize.js")),globalize__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(globalize__WEBPACK_IMPORTED_MODULE_6__),luxon__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/luxon/src/luxon.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["localizer"],localizers={globalize:(0,react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.fk)(globalize__WEBPACK_IMPORTED_MODULE_6___default()),moment:(0,react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.ye)(moment__WEBPACK_IMPORTED_MODULE_4___default()),luxon:(0,react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.AW)(luxon__WEBPACK_IMPORTED_MODULE_7__.c9,{firstDayOfWeek:7})},DraggableCalendar=(0,_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_3__.A)(react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.Vv);__webpack_exports__.default={title:"Additional Examples/Event Durations",component:react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.Vv,decorators:[function(Story){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Story,{})})}]};var Template=function Template(_ref){var _ref$localizer=_ref.localizer,loc=void 0===_ref$localizer?"moment":_ref$localizer,args=(0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_9__.A)(_ref,_excluded),localizer=localizers[loc];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(DraggableCalendar,Object.assign({localizer:localizer},args))};Template.displayName="Template";var DaylightSavingsStarts=Template.bind({});DaylightSavingsStarts.argTypes={localizer:{options:["globalize","moment","luxon"],control:{type:"select"}}},DaylightSavingsStarts.args={defaultView:react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.Pp.DAY,localizer:"moment",min:moment__WEBPACK_IMPORTED_MODULE_4___default()("12:00am","h:mma").toDate(),max:moment__WEBPACK_IMPORTED_MODULE_4___default()("11:59pm","h:mma").toDate(),events:[{title:"on DST",start:new Date(2022,2,13,1),end:new Date(2022,2,13,2,30),allDay:!1},{title:"crosses DST",start:new Date(2022,2,13,1),end:new Date(2022,2,13,6,30),allDay:!1},{title:"After DST",start:new Date(2022,2,13,7),end:new Date(2022,2,13,9,30),allDay:!1}],defaultDate:new Date(2022,2,13)};var DaylightSavingsStartsAfter2Am=Template.bind({});DaylightSavingsStartsAfter2Am.argTypes={localizer:{options:["globalize","moment","luxon"],control:{type:"select"}}},DaylightSavingsStartsAfter2Am.args={defaultView:react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.Pp.DAY,localizer:"moment",min:moment__WEBPACK_IMPORTED_MODULE_4___default()("3:00am","h:mma").toDate(),max:moment__WEBPACK_IMPORTED_MODULE_4___default()("11:59pm","h:mma").toDate(),events:[{title:"on DST",start:new Date(2022,2,13,1),end:new Date(2022,2,13,2,30),allDay:!1},{title:"crosses DST",start:new Date(2022,2,13,1),end:new Date(2022,2,13,6,30),allDay:!1},{title:"After DST",start:new Date(2022,2,13,7),end:new Date(2022,2,13,9,30),allDay:!1}],defaultDate:new Date(2022,2,13)};var DaylightSavingsEnds=Template.bind({});DaylightSavingsEnds.argTypes={localizer:{options:["globalize","moment","luxon"],control:{type:"select"}}},DaylightSavingsEnds.args={defaultView:react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.Pp.DAY,localizer:"moment",min:moment__WEBPACK_IMPORTED_MODULE_4___default()("12:00am","h:mma").toDate(),max:moment__WEBPACK_IMPORTED_MODULE_4___default()("11:59pm","h:mma").toDate(),events:[{title:"on DST",start:new Date(2022,10,6,1),end:new Date(2022,10,6,3,30),allDay:!1},{title:"crosses DST",start:new Date(2022,10,6,1),end:new Date(2022,10,6,6,30),allDay:!1},{title:"After DST",start:new Date(2022,10,6,7),end:new Date(2022,10,6,7,45),allDay:!1}],defaultDate:new Date(2022,10,6)};var DaylightSavingsEndsAfter2Am=Template.bind({});DaylightSavingsEndsAfter2Am.argTypes={localizer:{options:["globalize","moment","luxon"],control:{type:"select"}}},DaylightSavingsEndsAfter2Am.args={defaultView:react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.Pp.DAY,localizer:"moment",min:moment__WEBPACK_IMPORTED_MODULE_4___default()("3:00am","h:mma").toDate(),max:moment__WEBPACK_IMPORTED_MODULE_4___default()("11:59pm","h:mma").toDate(),events:[{title:"After DST",start:new Date(2022,10,6,7),end:new Date(2022,10,6,9,30),allDay:!1}],defaultDate:new Date(2022,10,6)},DaylightSavingsStarts.parameters=Object.assign({storySource:{source:"({ localizer: loc = 'moment', ...args }) => {\n  const localizer = localizers[loc]\n  return <DraggableCalendar localizer={localizer} {...args} />\n}"}},DaylightSavingsStarts.parameters),DaylightSavingsStartsAfter2Am.parameters=Object.assign({storySource:{source:"({ localizer: loc = 'moment', ...args }) => {\n  const localizer = localizers[loc]\n  return <DraggableCalendar localizer={localizer} {...args} />\n}"}},DaylightSavingsStartsAfter2Am.parameters),DaylightSavingsEnds.parameters=Object.assign({storySource:{source:"({ localizer: loc = 'moment', ...args }) => {\n  const localizer = localizers[loc]\n  return <DraggableCalendar localizer={localizer} {...args} />\n}"}},DaylightSavingsEnds.parameters),DaylightSavingsEndsAfter2Am.parameters=Object.assign({storySource:{source:"({ localizer: loc = 'moment', ...args }) => {\n  const localizer = localizers[loc]\n  return <DraggableCalendar localizer={localizer} {...args} />\n}"}},DaylightSavingsEndsAfter2Am.parameters);var __namedExportsOrder=["DaylightSavingsStarts","DaylightSavingsStartsAfter2Am","DaylightSavingsEnds","DaylightSavingsEndsAfter2Am"]},"./stories/Layout.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DaySpan:function(){return DaySpan},EndOfWeekAllDay:function(){return EndOfWeekAllDay},EventAtEndOfWeek:function(){return EventAtEndOfWeek},EventAtStartOfWeek:function(){return EventAtStartOfWeek},EventLayout:function(){return EventLayout},EventsOnAConstrainedDayColumn:function(){return EventsOnAConstrainedDayColumn},FirstOfWeekAllDay:function(){return FirstOfWeekAllDay},NoDuration:function(){return NoDuration},OverlappingBackgroundEventsNoOverlap:function(){return OverlappingBackgroundEventsNoOverlap},OverlappingBackgroundEventsOverlap:function(){return OverlappingBackgroundEventsOverlap},ZeroDurationOddities:function(){return ZeroDurationOddities},ZeroDurationOverlap:function(){return ZeroDurationOverlap},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js");var moment__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__),_helpers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./stories/helpers/index.js"),_helpers_createEvents__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./stories/helpers/createEvents.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Additional Examples/Layout",component:_helpers__WEBPACK_IMPORTED_MODULE_4__.Vv,decorators:[function(Story){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Story,{})})}]};var Template=function Template(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_helpers__WEBPACK_IMPORTED_MODULE_4__.Vv,Object.assign({},args))};Template.displayName="Template";var defaultDate=new Date,EventLayout=Template.bind({});EventLayout.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.DAY,defaultDate:defaultDate,timeslots:4,events:(0,_helpers_createEvents__WEBPACK_IMPORTED_MODULE_6__.A)(1)};var FirstOfWeekAllDay=Template.bind({});FirstOfWeekAllDay.storyName="first of the week all-day event",FirstOfWeekAllDay.args={defaultDate:new Date(2016,11,4),events:[{allDay:!0,title:"All Day Event",start:new Date(2016,11,4),end:new Date(2016,11,4)}]};var EndOfWeekAllDay=Template.bind({});EndOfWeekAllDay.storyName="end of the week all-day event",EndOfWeekAllDay.args={defaultDate:new Date(2016,11,3),events:[{allDay:!0,title:"All Day Event",start:new Date(2016,11,3),end:new Date(2016,11,3)}]};var EventAtStartOfWeek=Template.bind({});EventAtStartOfWeek.args={defaultDate:new Date(2016,11,4),events:[{title:"has time",start:moment__WEBPACK_IMPORTED_MODULE_3___default()(new Date(2016,11,4)).add(1,"days").subtract(5,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_3___default()(new Date(2016,11,4)).add(1,"days").subtract(4,"hours").toDate()}]};var EventAtEndOfWeek=Template.bind({});EventAtEndOfWeek.args={defaultDate:new Date(2016,11,3),events:[{title:"has time",start:moment__WEBPACK_IMPORTED_MODULE_3___default()(new Date(2016,11,3)).add(1,"days").subtract(5,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_3___default()(new Date(2016,11,3)).add(1,"days").subtract(4,"hours").toDate()}]};var EventsOnAConstrainedDayColumn=Template.bind({});EventsOnAConstrainedDayColumn.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.DAY,min:moment__WEBPACK_IMPORTED_MODULE_3___default()("8 am","h a").toDate(),max:moment__WEBPACK_IMPORTED_MODULE_3___default()("5 pm","h a").toDate(),events:_helpers__WEBPACK_IMPORTED_MODULE_4__.AZ};var NoDuration=Template.bind({});NoDuration.args={defaultDate:new Date(2016,11,4),events:[{title:"start of the week",start:new Date(2016,11,4),end:new Date(2016,11,4)},{title:"end of the week",start:new Date(2016,11,3),end:new Date(2016,11,3)},{title:"middle",start:new Date(2016,11,6),end:new Date(2016,11,6)}]};var DaySpan=Template.bind({});DaySpan.storyName="Single days should only span one slot, multi-days multiple",DaySpan.args={defaultDate:new Date(2015,3,1),events:[{title:"SingleDay 1",start:new Date(2015,3,10),end:new Date(2015,3,11)},{title:"SingleDay 2",start:new Date(2015,3,11),end:new Date(2015,3,12)},{title:"SingleDay 3",start:new Date(2015,3,12),end:new Date(2015,3,13)},{title:"SingleDay 4",start:new Date(2015,3,13),end:new Date(2015,3,14)},{title:"MultiDay 1",start:new Date(2015,3,24),end:new Date(2015,3,25,1,0,0,0)},{title:"MultiDay 2",start:new Date(2015,3,25),end:new Date(2015,3,26,1,0,0,0)}]};var ZeroDurationOddities=function ZeroDurationOddities(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_helpers__WEBPACK_IMPORTED_MODULE_4__.zm,{defaultDate:new Date(2015,3,1),events:[{id:4,title:"0 day duration",start:new Date(2015,3,8,0,0,0),end:new Date(2015,3,8,0,0,0)},{id:4,title:"1 day duration",start:new Date(2015,3,9,0,0,0),end:new Date(2015,3,10,0,0,0)}]})};ZeroDurationOddities.displayName="ZeroDurationOddities";var ZeroDurationOverlap=function ZeroDurationOverlap(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_helpers__WEBPACK_IMPORTED_MODULE_4__.zm,{defaultDate:defaultDate,events:[{title:"event a",start:defaultDate,end:defaultDate},{title:"event b",start:defaultDate,end:defaultDate}],dayLayoutAlgorithm:"no-overlap",scrollToTime:defaultDate,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK})};ZeroDurationOverlap.displayName="ZeroDurationOverlap";var OverlappingBackgroundEventsOverlap=Template.bind({});OverlappingBackgroundEventsOverlap.storyName="Overlapping Background Events - 'overlap'",OverlappingBackgroundEventsOverlap.args={defaultDate:new Date(2016,11,3),dayLayoutAlgorithm:"overlap",defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK,scrollToTime:new Date(2016,11,1,7,0),backgroundEvents:[{title:"First Event",start:new Date(2016,10,28,10,30),end:new Date(2016,10,28,18,0)},{title:"Second Event",start:new Date(2016,10,28,12,0),end:new Date(2016,10,28,16,30)},{title:"Third Event",start:new Date(2016,10,29,8,0),end:new Date(2016,10,29,21,0)},{title:"Fourth Event",start:new Date(2016,10,29,9,30),end:new Date(2016,10,29,19,30)},{title:"Fifth Event",start:new Date(2016,10,29,11,0),end:new Date(2016,10,29,18,0)},{title:"Sixth Event",start:new Date(2016,11,1,9,0),end:new Date(2016,11,1,14,0)},{title:"Seventh Event",start:new Date(2016,11,1,11,0),end:new Date(2016,11,1,16,0)},{title:"Eighth Event",start:new Date(2016,11,1,13,0),end:new Date(2016,11,1,18,0)}]};var OverlappingBackgroundEventsNoOverlap=Template.bind({});OverlappingBackgroundEventsNoOverlap.storyName="Overlapping Background Events - 'no-overlap'",OverlappingBackgroundEventsNoOverlap.args={defaultDate:new Date(2016,11,3),dayLayoutAlgorithm:"no-overlap",defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK,scrollToTime:new Date(2016,11,1,7,0),backgroundEvents:[{title:"First Event",start:new Date(2016,10,28,10,30),end:new Date(2016,10,28,18,0)},{title:"Second Event",start:new Date(2016,10,28,12,0),end:new Date(2016,10,28,16,30)},{title:"Third Event",start:new Date(2016,10,29,8,0),end:new Date(2016,10,29,21,0)},{title:"Fourth Event",start:new Date(2016,10,29,9,30),end:new Date(2016,10,29,19,30)},{title:"Fifth Event",start:new Date(2016,10,29,11,0),end:new Date(2016,10,29,18,0)},{title:"Sixth Event",start:new Date(2016,11,1,9,0),end:new Date(2016,11,1,14,0)},{title:"Seventh Event",start:new Date(2016,11,1,11,0),end:new Date(2016,11,1,16,0)},{title:"Eighth Event",start:new Date(2016,11,1,13,0),end:new Date(2016,11,1,18,0)}]},EventLayout.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},EventLayout.parameters),FirstOfWeekAllDay.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},FirstOfWeekAllDay.parameters),EndOfWeekAllDay.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},EndOfWeekAllDay.parameters),EventAtStartOfWeek.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},EventAtStartOfWeek.parameters),EventAtEndOfWeek.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},EventAtEndOfWeek.parameters),EventsOnAConstrainedDayColumn.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},EventsOnAConstrainedDayColumn.parameters),NoDuration.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},NoDuration.parameters),DaySpan.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},DaySpan.parameters),ZeroDurationOddities.parameters=Object.assign({storySource:{source:"() => {\n  return (\n    <DragAndDropCalendar\n      defaultDate={new Date(2015, 3, 1)}\n      events={[\n        {\n          id: 4,\n          title: '0 day duration',\n          start: new Date(2015, 3, 8, 0, 0, 0),\n          end: new Date(2015, 3, 8, 0, 0, 0),\n        },\n        {\n          id: 4,\n          title: '1 day duration',\n          start: new Date(2015, 3, 9, 0, 0, 0),\n          end: new Date(2015, 3, 10, 0, 0, 0),\n        },\n      ]}\n    />\n  )\n}"}},ZeroDurationOddities.parameters),ZeroDurationOverlap.parameters=Object.assign({storySource:{source:"() => {\n  return (\n    <DragAndDropCalendar\n      defaultDate={defaultDate}\n      events={[\n        {\n          title: 'event a',\n          start: defaultDate,\n          end: defaultDate,\n        },\n        {\n          title: 'event b',\n          start: defaultDate,\n          end: defaultDate,\n        },\n      ]}\n      dayLayoutAlgorithm={'no-overlap'}\n      scrollToTime={defaultDate}\n      defaultView={Views.WEEK}\n    />\n  )\n}"}},ZeroDurationOverlap.parameters),OverlappingBackgroundEventsOverlap.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},OverlappingBackgroundEventsOverlap.parameters),OverlappingBackgroundEventsNoOverlap.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},OverlappingBackgroundEventsNoOverlap.parameters);var __namedExportsOrder=["EventLayout","FirstOfWeekAllDay","EndOfWeekAllDay","EventAtStartOfWeek","EventAtEndOfWeek","EventsOnAConstrainedDayColumn","NoDuration","DaySpan","ZeroDurationOddities","ZeroDurationOverlap","OverlappingBackgroundEventsOverlap","OverlappingBackgroundEventsNoOverlap"];ZeroDurationOddities.__docgenInfo={description:"",methods:[],displayName:"ZeroDurationOddities"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/Layout.stories.js"]={name:"ZeroDurationOddities",docgenInfo:ZeroDurationOddities.__docgenInfo,path:"stories/Layout.stories.js"}),ZeroDurationOverlap.__docgenInfo={description:"",methods:[],displayName:"ZeroDurationOverlap"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/Layout.stories.js"]={name:"ZeroDurationOverlap",docgenInfo:ZeroDurationOverlap.__docgenInfo,path:"stories/Layout.stories.js"})},"./stories/Timeslots.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Selectable3Slot:function(){return Selectable3Slot},SelectableStep10x6Slot:function(){return SelectableStep10x6Slot},SelectableStep15x4Slot:function(){return SelectableStep15x4Slot},SelectableStep5x6Slot:function(){return SelectableStep5x6Slot},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),_src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/index.js"),_helpers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./stories/helpers/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Additional Examples/Timeslots",component:_src__WEBPACK_IMPORTED_MODULE_3__.Vv,decorators:[function(Story){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Story,{})})}]};var Template=function Template(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_helpers__WEBPACK_IMPORTED_MODULE_4__.Vv,Object.assign({},args))};Template.displayName="Template";var SelectableStep15x4Slot=Template.bind({});SelectableStep15x4Slot.storyName="selectable, step 15, 4 timeslots",SelectableStep15x4Slot.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK,defaultDate:new Date,selectable:!0,timeslots:4,step:15,events:_helpers__WEBPACK_IMPORTED_MODULE_4__.AZ,onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event selected"),onSelectSlot:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("slot selected")};var SelectableStep10x6Slot=Template.bind({});SelectableStep10x6Slot.storyName="selectable, step 10, 6 timeslots",SelectableStep10x6Slot.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK,defaultDate:new Date,selectable:!0,timeslots:6,step:10,events:_helpers__WEBPACK_IMPORTED_MODULE_4__.AZ,onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event selected"),onSelectSlot:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("slot selected")};var SelectableStep5x6Slot=Template.bind({});SelectableStep5x6Slot.storyName="selectable, step 5, 6 timeslots",SelectableStep5x6Slot.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK,defaultDate:new Date,selectable:!0,timeslots:6,step:5,events:_helpers__WEBPACK_IMPORTED_MODULE_4__.AZ,onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event selected"),onSelectSlot:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("slot selected")};var Selectable3Slot=Template.bind({});Selectable3Slot.storyName="selectable, 3 timeslots",Selectable3Slot.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK,defaultDate:new Date,selectable:!0,timeslots:3,events:_helpers__WEBPACK_IMPORTED_MODULE_4__.AZ,onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event selected"),onSelectSlot:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("slot selected")},SelectableStep15x4Slot.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},SelectableStep15x4Slot.parameters),SelectableStep10x6Slot.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},SelectableStep10x6Slot.parameters),SelectableStep5x6Slot.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},SelectableStep5x6Slot.parameters),Selectable3Slot.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},Selectable3Slot.parameters);var __namedExportsOrder=["SelectableStep15x4Slot","SelectableStep10x6Slot","SelectableStep5x6Slot","Selectable3Slot"]},"./stories/addons/dragAndDrop/basic.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example1:function(){return Example1},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return basic_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),events=(__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./stories/resources/events.js")),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),dragAndDrop=__webpack_require__("./src/addons/dragAndDrop/index.js"),jsx_runtime=(__webpack_require__("./src/addons/dragAndDrop/styles.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js")),DragAndDropCalendar=(0,dragAndDrop.A)(src.Vv);function DragAndDrop(_ref){var localizer=_ref.localizer,_useState=(0,react.useState)(events.A),_useState2=(0,slicedToArray.A)(_useState,2),myEvents=_useState2[0],setMyEvents=_useState2[1],moveEvent=(0,react.useCallback)((function(_ref2){var event=_ref2.event,start=_ref2.start,end=_ref2.end,_ref2$isAllDay=_ref2.isAllDay,droppedOnAllDaySlot=void 0!==_ref2$isAllDay&&_ref2$isAllDay,allDay=event.allDay;!allDay&&droppedOnAllDaySlot&&(event.allDay=!0),allDay&&!droppedOnAllDaySlot&&(event.allDay=!1),setMyEvents((function(prev){var _prev$find,existing=null!==(_prev$find=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find?_prev$find:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,toConsumableArray.A)(filtered),[Object.assign({},existing,{start:start,end:end,allDay:event.allDay})])}))}),[setMyEvents]),resizeEvent=(0,react.useCallback)((function(_ref3){var event=_ref3.event,start=_ref3.start,end=_ref3.end;setMyEvents((function(prev){var _prev$find2,existing=null!==(_prev$find2=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find2?_prev$find2:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,toConsumableArray.A)(filtered),[Object.assign({},existing,{start:start,end:end})])}))}),[setMyEvents]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,12)}),[]);return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"dnd",children:(0,jsx_runtime.jsx)("strong",{children:'Drag and Drop an "event" from one slot to another to "move" the event, or drag an event\'s drag handles to "resize" the event.'})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(DragAndDropCalendar,{defaultDate:defaultDate,defaultView:src.Pp.MONTH,events:myEvents,localizer:localizer,onEventDrop:moveEvent,onEventResize:resizeEvent,popup:!0,resizable:!0})})]})}DragAndDrop.displayName="DragAndDrop",DragAndDrop.__docgenInfo={description:"",methods:[],displayName:"DragAndDrop",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/dnd.js"]={name:"DragAndDrop",docgenInfo:DragAndDrop.__docgenInfo,path:"stories/demos/exampleCode/dnd.js"});var basic_stories={title:"Addons/Drag and Drop",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example1=function Example1(){return(0,jsx_runtime.jsx)(DragAndDrop,{localizer:localizer})};Example1.displayName="Example1",Example1.storyName="Basic Drag n Drop",Example1.parameters=Object.assign({storySource:{source:"function Example1() {\n  return <Basic localizer={localizer} />\n}"}},Example1.parameters);var __namedExportsOrder=["Example1"];Example1.__docgenInfo={description:"",methods:[],displayName:"Example1"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/basic.stories.js"]={name:"Example1",docgenInfo:Example1.__docgenInfo,path:"stories/addons/dragAndDrop/basic.stories.js"})},"./stories/addons/dragAndDrop/outside.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example3:function(){return Example3},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__),_src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/index.js"),_demos_exampleCode_dndOutsideSource__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Addons/Drag and Drop",component:_src__WEBPACK_IMPORTED_MODULE_3__.Vv,parameters:{docs:{page:null}}};var localizer=(0,_src__WEBPACK_IMPORTED_MODULE_3__.ye)(moment__WEBPACK_IMPORTED_MODULE_2___default()),Example3=function Example3(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_demos_exampleCode_dndOutsideSource__WEBPACK_IMPORTED_MODULE_4__.A,{localizer:localizer})};Example3.displayName="Example3",Example3.storyName="Drag and Drop (from outside calendar)",Example3.parameters=Object.assign({storySource:{source:"function Example3() {\n  return <Basic localizer={localizer} />\n}"}},Example3.parameters);var __namedExportsOrder=["Example3"];Example3.__docgenInfo={description:"",methods:[],displayName:"Example3"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/outside.stories.js"]={name:"Example3",docgenInfo:Example3.__docgenInfo,path:"stories/addons/dragAndDrop/outside.stories.js"})},"./stories/addons/dragAndDrop/props/dragFromOutsideItem.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DragFromOutsideItem:function(){return DragFromOutsideItem},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return dragFromOutsideItem_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),dndOutsideSource=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"dragfromoutsideitem"},"dragFromOutsideItem"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function () => boolean"))),(0,esm.yg)("p",null,"A callback to get a temporary ",(0,esm.yg)("inlineCode",{parentName:"p"},"event")," to display in a slot in the process of dragging from outside. This is not required for Drag and Drop to function, but provides a nice visual cue to the user when dragging in an item from outside of the Calendar."),(0,esm.yg)("p",null,"Tip: Toggle the checkbox, in the example, and drag an outside item in. Do this from both checkbox states to see the difference in effect."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--drag-from-outside-item",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),dragFromOutsideItem_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),DragFromOutsideItem=function DragFromOutsideItem(){return(0,jsx_runtime.jsx)(dndOutsideSource.A,{localizer:localizer})};DragFromOutsideItem.displayName="DragFromOutsideItem",DragFromOutsideItem.storyName="dragFromOutsideItem",DragFromOutsideItem.parameters=Object.assign({storySource:{source:"function DragFromOutsideItem() {\n  return <Basic localizer={localizer} />\n}"}},DragFromOutsideItem.parameters);var __namedExportsOrder=["DragFromOutsideItem"];DragFromOutsideItem.__docgenInfo={description:"",methods:[],displayName:"DragFromOutsideItem"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/dragFromOutsideItem.stories.js"]={name:"DragFromOutsideItem",docgenInfo:DragFromOutsideItem.__docgenInfo,path:"stories/addons/dragAndDrop/props/dragFromOutsideItem.stories.js"})},"./stories/addons/dragAndDrop/props/draggableAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DraggableAccessor:function(){return DraggableAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return draggableAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),dndOutsideSource=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"draggableaccessor"},"draggableAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string|function (event) => boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"() => true"))),(0,esm.yg)("p",null,"When used, can determine whether an 'event' is draggable"),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--draggable-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),draggableAccessor_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),DraggableAccessor=function DraggableAccessor(){return(0,jsx_runtime.jsx)(dndOutsideSource.A,{localizer:localizer})};DraggableAccessor.displayName="DraggableAccessor",DraggableAccessor.storyName="draggableAccessor",DraggableAccessor.parameters=Object.assign({storySource:{source:"function DraggableAccessor() {\n  return <Basic localizer={localizer} />\n}"}},DraggableAccessor.parameters);var __namedExportsOrder=["DraggableAccessor"];DraggableAccessor.__docgenInfo={description:"",methods:[],displayName:"DraggableAccessor"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/draggableAccessor.stories.js"]={name:"DraggableAccessor",docgenInfo:DraggableAccessor.__docgenInfo,path:"stories/addons/dragAndDrop/props/draggableAccessor.stories.js"})},"./stories/addons/dragAndDrop/props/onDragOver.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnDragOver:function(){return OnDragOver},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onDragOver_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),dndOutsideSource=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"ondragover"},"onDragOver"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (dragEvent: SyntheticEvent) => any"))),(0,esm.yg)("p",null,"If an ",(0,esm.yg)("inlineCode",{parentName:"p"},"onDragOver")," callback ",(0,esm.yg)("em",{parentName:"p"},"is")," passed, then it can discriminate as to whether a draggable item is droppable on the calendar. To designate a draggable item as droppable, call ",(0,esm.yg)("inlineCode",{parentName:"p"},"event.preventDefault")," inside ",(0,esm.yg)("inlineCode",{parentName:"p"},"onDragOver"),". If ",(0,esm.yg)("inlineCode",{parentName:"p"},"event.preventDefault")," is not called in the ",(0,esm.yg)("inlineCode",{parentName:"p"},"onDragOver")," callback, then the draggable item will not be droppable on the calendar."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--on-drag-over",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),onDragOver_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),OnDragOver=function OnDragOver(){return(0,jsx_runtime.jsx)(dndOutsideSource.A,{localizer:localizer})};OnDragOver.displayName="OnDragOver",OnDragOver.storyName="onDragOver",OnDragOver.parameters=Object.assign({storySource:{source:"function OnDragOver() {\n  return <Basic localizer={localizer} />\n}"}},OnDragOver.parameters);var __namedExportsOrder=["OnDragOver"];OnDragOver.__docgenInfo={description:"",methods:[],displayName:"OnDragOver"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/onDragOver.stories.js"]={name:"OnDragOver",docgenInfo:OnDragOver.__docgenInfo,path:"stories/addons/dragAndDrop/props/onDragOver.stories.js"})},"./stories/addons/dragAndDrop/props/onDragStart.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnDragStart:function(){return OnDragStart},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onDragStart_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),dndOutsideSource=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"ondragstart"},"onDragStart"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function ({ event, action, direction }) => any"))),(0,esm.yg)("p",null,"A callback fired when user begins to drag an event."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--on-drag-start",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),onDragStart_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),OnDragStart=function OnDragStart(){return(0,jsx_runtime.jsx)(dndOutsideSource.A,{localizer:localizer})};OnDragStart.displayName="OnDragStart",OnDragStart.storyName="onDragStart",OnDragStart.parameters=Object.assign({storySource:{source:"function OnDragStart() {\n  return <Basic localizer={localizer} />\n}"}},OnDragStart.parameters);var __namedExportsOrder=["OnDragStart"];OnDragStart.__docgenInfo={description:"",methods:[],displayName:"OnDragStart"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/onDragStart.stories.js"]={name:"OnDragStart",docgenInfo:OnDragStart.__docgenInfo,path:"stories/addons/dragAndDrop/props/onDragStart.stories.js"})},"./stories/addons/dragAndDrop/props/onDropFromOutside.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnDropFromOutside:function(){return OnDropFromOutside},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onDropFromOutside_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),dndOutsideSource=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"ondropfromoutside"},"onDropFromOutside"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function ({ start, end, allDay }) => any"))),(0,esm.yg)("p",null,"A callback fired when user drops an item onto the Calendar from outside of the Calendar. Developers will typically use this method to add new items to the Calendar's ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events"),"."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Important:")," The callback does ",(0,esm.yg)("strong",{parentName:"p"},"not")," receive the element being dropped. It only receives the details of the slot an element was dropped on."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--on-drop-from-outside",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),onDropFromOutside_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),OnDropFromOutside=function OnDropFromOutside(){return(0,jsx_runtime.jsx)(dndOutsideSource.A,{localizer:localizer})};OnDropFromOutside.displayName="OnDropFromOutside",OnDropFromOutside.storyName="onDropFromOutside",OnDropFromOutside.parameters=Object.assign({storySource:{source:"function OnDropFromOutside() {\n  return <Basic localizer={localizer} />\n}"}},OnDropFromOutside.parameters);var __namedExportsOrder=["OnDropFromOutside"];OnDropFromOutside.__docgenInfo={description:"",methods:[],displayName:"OnDropFromOutside"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/onDropFromOutside.stories.js"]={name:"OnDropFromOutside",docgenInfo:OnDropFromOutside.__docgenInfo,path:"stories/addons/dragAndDrop/props/onDropFromOutside.stories.js"})},"./stories/addons/dragAndDrop/props/onEventDrop.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnEventDrop:function(){return OnEventDrop},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onEventDrop_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),dndOutsideSource=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"oneventdrop"},"onEventDrop"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function ({ event, start, end, allDay }) => any"))),(0,esm.yg)("p",null,"A callback fired when user drops an item from one slot to another from within the Calendar. Developers will typically use this method to update an item's ",(0,esm.yg)("inlineCode",{parentName:"p"},"start")," and ",(0,esm.yg)("inlineCode",{parentName:"p"},"end")," in ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events"),"."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--on-event-drop",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),onEventDrop_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),OnEventDrop=function OnEventDrop(){return(0,jsx_runtime.jsx)(dndOutsideSource.A,{localizer:localizer})};OnEventDrop.displayName="OnEventDrop",OnEventDrop.storyName="onEventDrop",OnEventDrop.parameters=Object.assign({storySource:{source:"function OnEventDrop() {\n  return <Basic localizer={localizer} />\n}"}},OnEventDrop.parameters);var __namedExportsOrder=["OnEventDrop"];OnEventDrop.__docgenInfo={description:"",methods:[],displayName:"OnEventDrop"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/onEventDrop.stories.js"]={name:"OnEventDrop",docgenInfo:OnEventDrop.__docgenInfo,path:"stories/addons/dragAndDrop/props/onEventDrop.stories.js"})},"./stories/addons/dragAndDrop/props/onEventResize.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnEventResize:function(){return OnEventResize},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onEventResize_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),resizable=__webpack_require__("./stories/demos/exampleCode/resizable.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"oneventresize"},"onEventResize"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function ({ event, start, end }) => any"))),(0,esm.yg)("p",null,"A callback fired when user resizes an event. Developers will typically use this method to update an item's ",(0,esm.yg)("inlineCode",{parentName:"p"},"start")," and ",(0,esm.yg)("inlineCode",{parentName:"p"},"end")," in ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events"),"."),(0,esm.yg)("p",null,"The ",(0,esm.yg)(addon_links_react.A,{kind:"addons-drag-and-drop-props",story:"resizable",mdxType:"LinkTo"},"resizable")," prop must be ",(0,esm.yg)("inlineCode",{parentName:"p"},"true")," (the default) to use the method."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note:")," ",(0,esm.yg)("inlineCode",{parentName:"p"},"resizable")," events must also be draggable. You cannot resize an event with a ",(0,esm.yg)(addon_links_react.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"draggableAccessor")," prop of ",(0,esm.yg)("inlineCode",{parentName:"p"},"false"),"."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--on-event-resize",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),onEventResize_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),OnEventResize=function OnEventResize(){return(0,jsx_runtime.jsx)(resizable.A,{localizer:localizer})};OnEventResize.displayName="OnEventResize",OnEventResize.storyName="onEventResize",OnEventResize.parameters=Object.assign({storySource:{source:"function OnEventResize() {\n  return <Basic localizer={localizer} />\n}"}},OnEventResize.parameters);var __namedExportsOrder=["OnEventResize"];OnEventResize.__docgenInfo={description:"",methods:[],displayName:"OnEventResize"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/onEventResize.stories.js"]={name:"OnEventResize",docgenInfo:OnEventResize.__docgenInfo,path:"stories/addons/dragAndDrop/props/onEventResize.stories.js"})},"./stories/addons/dragAndDrop/props/resizable.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Resizable:function(){return Resizable},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resizable_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),resizable=__webpack_require__("./stories/demos/exampleCode/resizable.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"resizable"},"resizable"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"true"))),(0,esm.yg)("p",null,"Determines if events may be resized on the Calendar. Used in conjunction with ",(0,esm.yg)(addon_links_react.A,{kind:"addons-drag-and-drop-props",story:"on-event-resize",mdxType:"LinkTo"},"onEventResize"),". When used with the ",(0,esm.yg)(addon_links_react.A,{kind:"addons-drag-and-drop-props",story:"resizable-accessor",mdxType:"LinkTo"},"resizableAccessor")," the developer has even greater control."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note:")," ",(0,esm.yg)("inlineCode",{parentName:"p"},"resizable")," events must also be draggable. You cannot resize an event with a ",(0,esm.yg)(addon_links_react.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"draggableAccessor")," prop of ",(0,esm.yg)("inlineCode",{parentName:"p"},"false"),"."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--resizable",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),resizable_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),Resizable=function Resizable(){return(0,jsx_runtime.jsx)(resizable.A,{localizer:localizer})};Resizable.displayName="Resizable",Resizable.storyName="resizable",Resizable.parameters=Object.assign({storySource:{source:"function Resizable() {\n  return <Basic localizer={localizer} />\n}"}},Resizable.parameters);var __namedExportsOrder=["Resizable"];Resizable.__docgenInfo={description:"",methods:[],displayName:"Resizable"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/resizable.stories.js"]={name:"Resizable",docgenInfo:Resizable.__docgenInfo,path:"stories/addons/dragAndDrop/props/resizable.stories.js"})},"./stories/addons/dragAndDrop/props/resizableAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResizableAccessor:function(){return ResizableAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resizableAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),resizable=__webpack_require__("./stories/demos/exampleCode/resizable.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"resizableaccessor"},"resizableAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string|function (event) => boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"() => true"))),(0,esm.yg)("p",null,"Determines if an event is resizable."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note:")," ",(0,esm.yg)("inlineCode",{parentName:"p"},"resizable")," events must also be draggable. You cannot resize an event with a ",(0,esm.yg)(addon_links_react.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"draggableAccessor")," prop of ",(0,esm.yg)("inlineCode",{parentName:"p"},"false"),"."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--resizable",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),resizableAccessor_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),ResizableAccessor=function ResizableAccessor(){return(0,jsx_runtime.jsx)(resizable.A,{localizer:localizer})};ResizableAccessor.displayName="ResizableAccessor",ResizableAccessor.storyName="resizableAccessor",ResizableAccessor.parameters=Object.assign({storySource:{source:"function ResizableAccessor() {\n  return <Basic localizer={localizer} />\n}"}},ResizableAccessor.parameters);var __namedExportsOrder=["ResizableAccessor"];ResizableAccessor.__docgenInfo={description:"",methods:[],displayName:"ResizableAccessor"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/resizableAccessor.stories.js"]={name:"ResizableAccessor",docgenInfo:ResizableAccessor.__docgenInfo,path:"stories/addons/dragAndDrop/props/resizableAccessor.stories.js"})},"./stories/addons/dragAndDrop/resource.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example2:function(){return Example2},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resource_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),DemoLink_component=(__webpack_require__("./node_modules/core-js/modules/es.set.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./stories/DemoLink.component.js")),dragAndDrop=__webpack_require__("./src/addons/dragAndDrop/index.js"),jsx_runtime=(__webpack_require__("./src/addons/dragAndDrop/styles.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js")),DragAndDropCalendar=(0,dragAndDrop.A)(src.Vv),events=[{id:0,title:"Board meeting",start:new Date(2018,0,29,9,0,0),end:new Date(2018,0,29,13,0,0),resourceId:[1,2]},{id:1,title:"MS training",start:new Date(2018,0,29,14,0,0),end:new Date(2018,0,29,16,30,0),resourceId:2},{id:2,title:"Team lead meeting",start:new Date(2018,0,29,8,30,0),end:new Date(2018,0,29,12,30,0),resourceId:3},{id:10,title:"Board meeting",start:new Date(2018,0,30,23,0,0),end:new Date(2018,0,30,23,59,0),resourceId:1},{id:11,title:"Birthday Party",start:new Date(2018,0,30,7,0,0),end:new Date(2018,0,30,10,30,0),resourceId:4},{id:12,title:"Board meeting",start:new Date(2018,0,29,23,59,0),end:new Date(2018,0,30,13,0,0),resourceId:1},{id:13,title:"Board meeting",start:new Date(2018,0,29,23,50,0),end:new Date(2018,0,30,13,0,0),resourceId:2},{id:14,title:"Board meeting",start:new Date(2018,0,29,23,40,0),end:new Date(2018,0,30,13,0,0),resourceId:4}],resourceMap=[{resourceId:1,resourceTitle:"Board room"},{resourceId:2,resourceTitle:"Training room"},{resourceId:3,resourceTitle:"Meeting room 1"},{resourceId:4,resourceTitle:"Meeting room 2"}];function DnDResource(_ref){var localizer=_ref.localizer,_useState=(0,react.useState)(events),_useState2=(0,slicedToArray.A)(_useState,2),myEvents=_useState2[0],setMyEvents=_useState2[1],_useState3=(0,react.useState)(!0),_useState4=(0,slicedToArray.A)(_useState3,2),copyEvent=_useState4[0],setCopyEvent=_useState4[1],toggleCopyEvent=(0,react.useCallback)((function(){return setCopyEvent((function(val){return!val}))}),[]),moveEvent=(0,react.useCallback)((function(_ref2){var event=_ref2.event,start=_ref2.start,end=_ref2.end,resourceId=_ref2.resourceId,_ref2$isAllDay=_ref2.isAllDay,droppedOnAllDaySlot=void 0!==_ref2$isAllDay&&_ref2$isAllDay,allDay=event.allDay;if(!allDay&&droppedOnAllDaySlot&&(event.allDay=!0),Array.isArray(event.resourceId))if(copyEvent)resourceId=(0,toConsumableArray.A)(new Set([].concat((0,toConsumableArray.A)(event.resourceId),[resourceId])));else{var filtered=event.resourceId.filter((function(ev){return ev!==event.sourceResource}));resourceId=(0,toConsumableArray.A)(new Set([].concat((0,toConsumableArray.A)(filtered),[resourceId])))}else copyEvent&&(resourceId=(0,toConsumableArray.A)(new Set([event.resourceId,resourceId])));setMyEvents((function(prev){var _prev$find,existing=null!==(_prev$find=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find?_prev$find:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,toConsumableArray.A)(filtered),[Object.assign({},existing,{start:start,end:end,resourceId:resourceId,allDay:allDay})])}))}),[setMyEvents,copyEvent]),resizeEvent=(0,react.useCallback)((function(_ref3){var event=_ref3.event,start=_ref3.start,end=_ref3.end;setMyEvents((function(prev){var _prev$find2,existing=null!==(_prev$find2=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find2?_prev$find2:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,toConsumableArray.A)(filtered),[Object.assign({},existing,{start:start,end:end})])}))}),[setMyEvents]),_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2018,0,29),scrollToTime:new Date(1972,0,1,8)}}),[]),defaultDate=_useMemo.defaultDate,scrollToTime=_useMemo.scrollToTime;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsxs)(DemoLink_component.A,{fileName:"dndresource",children:[(0,jsx_runtime.jsx)("strong",{children:'Drag and Drop an "event" from one resource slot to another.'}),(0,jsx_runtime.jsx)("div",{style:{margin:"10px 0 20px 0"},children:(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",checked:copyEvent,onChange:toggleCopyEvent}),'Keep copy of dragged "source" event in its original resource slot.']})})]}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(DragAndDropCalendar,{defaultDate:defaultDate,defaultView:src.Pp.DAY,events:myEvents,localizer:localizer,onEventDrop:moveEvent,onEventResize:resizeEvent,resizable:!0,resourceIdAccessor:"resourceId",resources:resourceMap,resourceTitleAccessor:"resourceTitle",scrollToTime:scrollToTime,selectable:!0,showMultiDayTimes:!0,step:15})})]})}DnDResource.displayName="DnDResource",DnDResource.__docgenInfo={description:"",methods:[],displayName:"DnDResource",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/dndresource.js"]={name:"DnDResource",docgenInfo:DnDResource.__docgenInfo,path:"stories/demos/exampleCode/dndresource.js"});var resource_stories={title:"Addons/Drag and Drop",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example2=function Example2(){return(0,jsx_runtime.jsx)(DnDResource,{localizer:localizer})};Example2.displayName="Example2",Example2.storyName="Resource Drag and Drop",Example2.parameters=Object.assign({storySource:{source:"function Example2() {\n  return <DnDResource localizer={localizer} />\n}"}},Example2.parameters);var __namedExportsOrder=["Example2"];Example2.__docgenInfo={description:"",methods:[],displayName:"Example2"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/resource.stories.js"]={name:"Example2",docgenInfo:Example2.__docgenInfo,path:"stories/addons/dragAndDrop/resource.stories.js"})},"./stories/demos/backgroundEvents.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example10:function(){return Example10},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return backgroundEvents_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),DemoLink_component=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./stories/DemoLink.component.js")),events=__webpack_require__("./stories/resources/events.js"),backgroundEvents=[{id:0,title:"Available for Clients",start:new Date(2015,3,13,6),end:new Date(2015,3,13,18)}],dates=__webpack_require__("./src/utils/dates.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),allViews=Object.keys(src.Pp).map((function(k){return src.Pp[k]}));function BackgroundEventsCalendar(_ref){var localizer=_ref.localizer,_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),max:dates.WQ(dates.pJ(new Date(2015,17,1),"day"),-1,"hours")}}),[]),defaultDate=_useMemo.defaultDate,max=_useMemo.max;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"backgroundEvents"}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{backgroundEvents:backgroundEvents,dayLayoutAlgorithm:"no-overlap",defaultDate:defaultDate,defaultView:src.Pp.DAY,events:events.A,localizer:localizer,max:max,showMultiDayTimes:!0,step:60,views:allViews})})]})}BackgroundEventsCalendar.displayName="BackgroundEventsCalendar",BackgroundEventsCalendar.__docgenInfo={description:"",methods:[],displayName:"BackgroundEventsCalendar",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/backgroundEvents.js"]={name:"BackgroundEventsCalendar",docgenInfo:BackgroundEventsCalendar.__docgenInfo,path:"stories/demos/exampleCode/backgroundEvents.js"});var backgroundEvents_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example10=function Example10(){return(0,jsx_runtime.jsx)(BackgroundEventsCalendar,{localizer:localizer})};Example10.displayName="Example10",Example10.storyName="Background Events",Example10.parameters=Object.assign({storySource:{source:"function Example10() {\n  return <BackgroundCalendar localizer={localizer} />\n}"}},Example10.parameters);var __namedExportsOrder=["Example10"];Example10.__docgenInfo={description:"",methods:[],displayName:"Example10"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/backgroundEvents.stories.js"]={name:"Example10",docgenInfo:Example10.__docgenInfo,path:"stories/demos/backgroundEvents.stories.js"})},"./stories/demos/basic.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example1:function(){return Example1},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__),_src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/index.js"),_exampleCode_basic__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./stories/demos/exampleCode/basic.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Examples",component:_src__WEBPACK_IMPORTED_MODULE_3__.Vv,parameters:{docs:{page:null}}};var localizer=(0,_src__WEBPACK_IMPORTED_MODULE_3__.ye)(moment__WEBPACK_IMPORTED_MODULE_2___default()),Example1=function Example1(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_exampleCode_basic__WEBPACK_IMPORTED_MODULE_4__.A,{localizer:localizer})};Example1.displayName="Example1",Example1.storyName="Basic Demo",Example1.parameters=Object.assign({storySource:{source:"function Example1() {\n  return <Basic localizer={localizer} />\n}"}},Example1.parameters);var __namedExportsOrder=["Example1"];Example1.__docgenInfo={description:"",methods:[],displayName:"Example1"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/basic.stories.js"]={name:"Example1",docgenInfo:Example1.__docgenInfo,path:"stories/demos/basic.stories.js"})},"./stories/demos/cultures.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example5:function(){return Example5},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return cultures_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),DemoLink_component=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./stories/DemoLink.component.js")),events=__webpack_require__("./stories/resources/events.js"),Layout=__webpack_require__("./node_modules/react-tackle-box/Layout.js"),Layout_default=__webpack_require__.n(Layout),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_require__("./node_modules/globalize/lib/cultures/globalize.culture.en-GB.js"),__webpack_require__("./node_modules/globalize/lib/cultures/globalize.culture.es.js"),__webpack_require__("./node_modules/globalize/lib/cultures/globalize.culture.fr.js"),__webpack_require__("./node_modules/globalize/lib/cultures/globalize.culture.ar-AE.js");var cultures=["en","en-GB","es","fr","ar-AE"],lang={en:null,"en-GB":null,es:{week:"Semana",work_week:"Semana de trabajo",day:"Día",month:"Mes",previous:"Atrás",next:"Después",today:"Hoy",agenda:"El Diario",showMore:function showMore(total){return"+".concat(total," más")}},fr:{week:"La semaine",work_week:"Semaine de travail",day:"Jour",month:"Mois",previous:"Antérieur",next:"Prochain",today:"Aujourd'hui",agenda:"Ordre du jour",showMore:function showMore(total){return"+".concat(total," plus")}},"ar-AE":{week:"أسبوع",work_week:"أسبوع العمل",day:"يوم",month:"شهر",previous:"سابق",next:"التالي",today:"اليوم",agenda:"جدول أعمال",showMore:function showMore(total){return"+".concat(total," إضافي")}}};function CulturesDemo(_ref){var localizer=_ref.localizer,_useState=(0,react.useState)("fr"),_useState2=(0,slicedToArray.A)(_useState,2),culture=_useState2[0],setCulture=_useState2[1],_useState3=(0,react.useState)(!1),_useState4=(0,slicedToArray.A)(_useState3,2),rightToLeft=_useState4[0],setRightToLeft=_useState4[1],cultureOnClick=(0,react.useCallback)((function(_ref2){var value=_ref2.target.value;setCulture(value),setRightToLeft("ar-AE"===value)}),[setCulture]),_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),messages:lang[culture]}}),[culture]),defaultDate=_useMemo.defaultDate,messages=_useMemo.messages;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"cultures",children:(0,jsx_runtime.jsxs)(Layout_default(),{direction:"column",align:"center",children:[(0,jsx_runtime.jsx)("label",{children:"Select a Culture"})," ",(0,jsx_runtime.jsx)("select",{className:"form-control",style:{width:200,display:"inline-block"},defaultValue:"fr",onChange:cultureOnClick,children:cultures.map((function(c,idx){return(0,jsx_runtime.jsx)("option",{value:c,children:c},idx)}))})]})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{culture:culture,defaultDate:defaultDate,events:events.A,localizer:localizer,messages:messages,rtl:rightToLeft})})]})}CulturesDemo.displayName="CulturesDemo",CulturesDemo.__docgenInfo={description:"",methods:[],displayName:"CulturesDemo",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/cultures.js"]={name:"CulturesDemo",docgenInfo:CulturesDemo.__docgenInfo,path:"stories/demos/exampleCode/cultures.js"});var cultures_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example5=function Example5(){return(0,jsx_runtime.jsx)(CulturesDemo,{localizer:localizer})};Example5.displayName="Example5",Example5.storyName="Localization",Example5.parameters=Object.assign({storySource:{source:"function Example5() {\n  return <CultureDemo localizer={localizer} />\n}"}},Example5.parameters);var __namedExportsOrder=["Example5"];Example5.__docgenInfo={description:"",methods:[],displayName:"Example5"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/cultures.stories.js"]={name:"Example5",docgenInfo:Example5.__docgenInfo,path:"stories/demos/cultures.stories.js"})},"./stories/demos/customView.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example9:function(){return Example9},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return customView_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),date_arithmetic=__webpack_require__("./node_modules/date-arithmetic/index.js"),TimeGrid=__webpack_require__("./src/TimeGrid.js"),events=__webpack_require__("./stories/resources/events.js"),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["date","localizer","max","min","scrollToTime"];function MyWeek(_ref){var date=_ref.date,localizer=_ref.localizer,_ref$max=_ref.max,max=void 0===_ref$max?localizer.endOf(new Date,"day"):_ref$max,_ref$min=_ref.min,min=void 0===_ref$min?localizer.startOf(new Date,"day"):_ref$min,_ref$scrollToTime=_ref.scrollToTime,scrollToTime=void 0===_ref$scrollToTime?localizer.startOf(new Date,"day"):_ref$scrollToTime,props=(0,objectWithoutProperties.A)(_ref,_excluded),currRange=(0,react.useMemo)((function(){return MyWeek.range(date,{localizer:localizer})}),[date,localizer]);return(0,jsx_runtime.jsx)(TimeGrid.A,Object.assign({date:date,eventOffset:15,localizer:localizer,max:max,min:min,range:currRange,scrollToTime:scrollToTime},props))}function CustomView(_ref4){var localizer=_ref4.localizer,_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),views:{month:!0,week:MyWeek}}}),[]),defaultDate=_useMemo.defaultDate,views=_useMemo.views;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"customView",children:(0,jsx_runtime.jsx)("strong",{children:"The Calendar below implements a custom 3-day week view"})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,localizer:localizer,views:views})})]})}MyWeek.displayName="MyWeek",MyWeek.range=function(date,_ref2){for(var localizer=_ref2.localizer,start=date,end=date_arithmetic.add(start,2,"day"),current=start,range=[];localizer.lte(current,end,"day");)range.push(current),current=localizer.add(current,1,"day");return range},MyWeek.navigate=function(date,action,_ref3){var localizer=_ref3.localizer;switch(action){case src.C5.PREVIOUS:return localizer.add(date,-3,"day");case src.C5.NEXT:return localizer.add(date,3,"day");default:return date}},MyWeek.title=function(date){return"My awesome week: ".concat(date.toLocaleDateString())},CustomView.displayName="CustomView",CustomView.__docgenInfo={description:"",methods:[],displayName:"CustomView",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/customView.js"]={name:"CustomView",docgenInfo:CustomView.__docgenInfo,path:"stories/demos/exampleCode/customView.js"});var customView_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example9=function Example9(){return(0,jsx_runtime.jsx)(CustomView,{localizer:localizer})};Example9.displayName="Example9",Example9.storyName="Custom Calendar Views",Example9.parameters=Object.assign({storySource:{source:"function Example9() {\n  return <CustomView localizer={localizer} />\n}"}},Example9.parameters);var __namedExportsOrder=["Example9"];Example9.__docgenInfo={description:"",methods:[],displayName:"Example9"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/customView.stories.js"]={name:"Example9",docgenInfo:Example9.__docgenInfo,path:"stories/demos/customView.stories.js"})},"./stories/demos/dayjs.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DayjsLocalizer:function(){return DayjsLocalizer},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return dayjs_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),dayjs_min=__webpack_require__("./node_modules/dayjs/dayjs.min.js"),dayjs_min_default=__webpack_require__.n(dayjs_min),src=__webpack_require__("./src/index.js"),objectDestructuringEmpty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"),esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),DemoLink_component=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./stories/DemoLink.component.js")),events=__webpack_require__("./stories/resources/events.js"),timezone=__webpack_require__("./node_modules/dayjs/plugin/timezone.js"),timezone_default=__webpack_require__.n(timezone),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");dayjs_min_default().extend(timezone_default());var djLocalizer=(0,src.vH)(dayjs_min_default()),ColoredDateCellWrapper=function ColoredDateCellWrapper(_ref){var children=_ref.children;return react.cloneElement(react.Children.only(children),{style:{backgroundColor:"lightblue"}})};function Dayjs(_ref2){var props=(0,esm_extends.A)({},((0,objectDestructuringEmpty.A)(_ref2),_ref2)),_useMemo=(0,react.useMemo)((function(){return{components:{timeSlotWrapper:ColoredDateCellWrapper},defaultDate:new Date(2015,3,1),max:dayjs_min_default()().endOf("day").subtract(1,"hours").toDate(),views:Object.keys(src.Pp).map((function(k){return src.Pp[k]}))}}),[]),components=_useMemo.components,defaultDate=_useMemo.defaultDate,max=_useMemo.max,views=_useMemo.views;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"dayjs"}),(0,jsx_runtime.jsx)("div",Object.assign({className:"height600"},props,{children:(0,jsx_runtime.jsx)(src.Vv,{components:components,defaultDate:defaultDate,events:events.A,localizer:djLocalizer,max:max,showMultiDayTimes:!0,step:60,views:views})}))]})}Dayjs.displayName="Dayjs",Dayjs.__docgenInfo={description:"",methods:[],displayName:"Dayjs"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/dayjs.js"]={name:"Dayjs",docgenInfo:Dayjs.__docgenInfo,path:"stories/demos/exampleCode/dayjs.js"});var dayjs_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.vH)(dayjs_min_default()),DayjsLocalizer=function DayjsLocalizer(){return(0,jsx_runtime.jsx)(Dayjs,{localizer:localizer})};DayjsLocalizer.displayName="DayjsLocalizer",DayjsLocalizer.parameters=Object.assign({storySource:{source:"function DayjsLocalizer() {\n  return <Dayjs localizer={localizer} />\n}"}},DayjsLocalizer.parameters);var __namedExportsOrder=["DayjsLocalizer"];DayjsLocalizer.__docgenInfo={description:"",methods:[],displayName:"DayjsLocalizer"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/dayjs.stories.js"]={name:"DayjsLocalizer",docgenInfo:DayjsLocalizer.__docgenInfo,path:"stories/demos/dayjs.stories.js"})},"./stories/demos/luxon.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LuxonLocalizer:function(){return LuxonLocalizer},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return luxon_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),luxon=__webpack_require__("./node_modules/luxon/src/luxon.js"),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),events=__webpack_require__("./stories/resources/events.js"),TimezoneSelect=__webpack_require__("./stories/demos/TimezoneSelect.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),defaultTZ=luxon.c9.local().zoneName;function Luxon(){var _useState=(0,react.useState)(defaultTZ),_useState2=(0,slicedToArray.A)(_useState,2),timezone=_useState2[0],setTimezone=_useState2[1],_useMemo=(0,react.useMemo)((function(){return luxon.wB.defaultZone=timezone,{defaultDate:(str="2015-04-13",DateTimeObj=luxon.c9,DateTimeObj.fromISO(str).toJSDate()),getNow:function getNow(){return luxon.c9.local().toJSDate()},localizer:(0,src.AW)(luxon.c9),myEvents:(0,toConsumableArray.A)(events.A),scrollToTime:luxon.c9.local().toJSDate()};var str,DateTimeObj}),[timezone]),defaultDate=_useMemo.defaultDate,getNow=_useMemo.getNow,localizer=_useMemo.localizer,myEvents=_useMemo.myEvents,scrollToTime=_useMemo.scrollToTime;return(0,react.useEffect)((function(){return function(){luxon.wB.defaultZone=defaultTZ}}),[]),(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"luxon",children:(0,jsx_runtime.jsx)(TimezoneSelect.A,{defaultTZ:defaultTZ,setTimezone:setTimezone,timezone:timezone,title:"This calendar uses the 'luxonLocalizer'"})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:myEvents,getNow:getNow,localizer:localizer,scrollToTime:scrollToTime})})]})}Luxon.displayName="Luxon",Luxon.__docgenInfo={description:"",methods:[],displayName:"Luxon"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/luxon.js"]={name:"Luxon",docgenInfo:Luxon.__docgenInfo,path:"stories/demos/exampleCode/luxon.js"});var luxon_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.AW)(luxon.c9),LuxonLocalizer=function LuxonLocalizer(){return(0,jsx_runtime.jsx)(Luxon,{localizer:localizer})};LuxonLocalizer.displayName="LuxonLocalizer",LuxonLocalizer.parameters=Object.assign({storySource:{source:"function LuxonLocalizer() {\n  return <Luxon localizer={localizer} />\n}"}},LuxonLocalizer.parameters);var __namedExportsOrder=["LuxonLocalizer"];LuxonLocalizer.__docgenInfo={description:"",methods:[],displayName:"LuxonLocalizer"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/luxon.stories.js"]={name:"LuxonLocalizer",docgenInfo:LuxonLocalizer.__docgenInfo,path:"stories/demos/luxon.stories.js"})},"./stories/demos/noOverlap.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example3:function(){return Example3},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return noOverlap_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),DemoLink_component=(__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./stories/DemoLink.component.js")),events=__webpack_require__("./stories/resources/events.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function CreateEventWithNoOverlap(_ref){var localizer=_ref.localizer,_ref$dayLayoutAlgorit=_ref.dayLayoutAlgorithm,dayLayoutAlgorithm=void 0===_ref$dayLayoutAlgorit?"no-overlap":_ref$dayLayoutAlgorit,_useState=(0,react.useState)(events.A),_useState2=(0,slicedToArray.A)(_useState,2),myEvents=_useState2[0],setEvents=_useState2[1],handleSelectSlot=(0,react.useCallback)((function(_ref2){var start=_ref2.start,end=_ref2.end,title=window.prompt("New Event Name");title&&setEvents((function(prev){return[].concat((0,toConsumableArray.A)(prev),[{start:start,end:end,title:title}])}))}),[setEvents]),handleSelectEvent=(0,react.useCallback)((function(event){return window.alert(event.title)}),[]),_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,12),scrollToTime:new Date(1970,1,1,6)}}),[]),defaultDate=_useMemo.defaultDate,scrollToTime=_useMemo.scrollToTime;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"createEventWithNoOverlap",children:(0,jsx_runtime.jsxs)("strong",{children:["Click an event to see more info, or drag the mouse over the calendar to select a date/time range.",(0,jsx_runtime.jsx)("br",{}),"The events are being arranged by `no-overlap` algorithm."]})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{dayLayoutAlgorithm:dayLayoutAlgorithm,defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:myEvents,localizer:localizer,onSelectEvent:handleSelectEvent,onSelectSlot:handleSelectSlot,selectable:!0,scrollToTime:scrollToTime})})]})}CreateEventWithNoOverlap.displayName="CreateEventWithNoOverlap",CreateEventWithNoOverlap.__docgenInfo={description:"",methods:[],displayName:"CreateEventWithNoOverlap",props:{dayLayoutAlgorithm:{defaultValue:{value:"'no-overlap'",computed:!1},description:"",type:{name:"string"},required:!1},localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/createEventWithNoOverlap.js"]={name:"CreateEventWithNoOverlap",docgenInfo:CreateEventWithNoOverlap.__docgenInfo,path:"stories/demos/exampleCode/createEventWithNoOverlap.js"});var noOverlap_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example3=function Example3(){return(0,jsx_runtime.jsx)(CreateEventWithNoOverlap,{localizer:localizer})};Example3.displayName="Example3",Example3.storyName="Create events with no-overlap algorithm",Example3.parameters=Object.assign({storySource:{source:"function Example3() {\n  return <CreateEventWithNoOverlap localizer={localizer} />\n}"}},Example3.parameters);var __namedExportsOrder=["Example3"];Example3.__docgenInfo={description:"",methods:[],displayName:"Example3"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/noOverlap.stories.js"]={name:"Example3",docgenInfo:Example3.__docgenInfo,path:"stories/demos/noOverlap.stories.js"})},"./stories/demos/popup.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example6:function(){return Example6},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return popup_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),events=__webpack_require__("./stories/resources/events.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Popup(_ref){var localizer=_ref.localizer,defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"popup",children:(0,jsx_runtime.jsx)("strong",{children:'Click the "+{x} more" link on any calendar day that cannot fit all the days events to see an inline popup of all the events.'})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:localizer,popup:!0})})]})}Popup.displayName="Popup",Popup.__docgenInfo={description:"",methods:[],displayName:"Popup",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/popup.js"]={name:"Popup",docgenInfo:Popup.__docgenInfo,path:"stories/demos/exampleCode/popup.js"});var popup_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example6=function Example6(){return(0,jsx_runtime.jsx)(Popup,{localizer:localizer})};Example6.displayName="Example6",Example6.storyName="Show more via a popup",Example6.parameters=Object.assign({storySource:{source:"function Example6() {\n  return <PopupDemo localizer={localizer} />\n}"}},Example6.parameters);var __namedExportsOrder=["Example6"];Example6.__docgenInfo={description:"",methods:[],displayName:"Example6"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/popup.stories.js"]={name:"Example6",docgenInfo:Example6.__docgenInfo,path:"stories/demos/popup.stories.js"})},"./stories/demos/rendering.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example8:function(){return Example8},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return rendering_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),events=__webpack_require__("./stories/resources/events.js"),rendering_module=__webpack_require__("./stories/demos/exampleCode/rendering.module.scss"),rendering_module_default=__webpack_require__.n(rendering_module),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Event(_ref){var event=_ref.event;return(0,jsx_runtime.jsxs)("span",{children:[(0,jsx_runtime.jsx)("strong",{children:event.title}),event.desc&&":  "+event.desc]})}function EventAgenda(_ref2){var event=_ref2.event;return(0,jsx_runtime.jsxs)("span",{children:[(0,jsx_runtime.jsx)("em",{style:{color:"magenta"},children:event.title}),(0,jsx_runtime.jsx)("p",{children:event.desc})]})}Event.displayName="Event",EventAgenda.displayName="EventAgenda";var customDayPropGetter=function customDayPropGetter(date){return 7===date.getDate()||15===date.getDate()?{className:rendering_module_default().specialDay,style:{border:"solid 3px "+(7===date.getDate()?"#faa":"#afa")}}:{}},customSlotPropGetter=function customSlotPropGetter(date){return 7===date.getDate()||15===date.getDate()?{className:rendering_module_default().specialDay}:{}};function Rendering(_ref3){var localizer=_ref3.localizer,_useMemo=(0,react.useMemo)((function(){return{components:{agenda:{event:EventAgenda},event:Event},defaultDate:new Date(2015,3,7)}}),[]),components=_useMemo.components,defaultDate=_useMemo.defaultDate;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"rendering"}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{components:components,dayPropGetter:customDayPropGetter,defaultDate:defaultDate,defaultView:src.Pp.AGENDA,events:events.A,localizer:localizer,slotPropGetter:customSlotPropGetter})})]})}Rendering.displayName="Rendering",Rendering.__docgenInfo={description:"",methods:[],displayName:"Rendering",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/rendering.js"]={name:"Rendering",docgenInfo:Rendering.__docgenInfo,path:"stories/demos/exampleCode/rendering.js"});var rendering_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example8=function Example8(){return(0,jsx_runtime.jsx)(Rendering,{localizer:localizer})};Example8.displayName="Example8",Example8.storyName="Customized Component Rendering",Example8.parameters=Object.assign({storySource:{source:"function Example8() {\n  return <Rendering localizer={localizer} />\n}"}},Example8.parameters);var __namedExportsOrder=["Example8"];Example8.__docgenInfo={description:"",methods:[],displayName:"Example8"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/rendering.stories.js"]={name:"Example8",docgenInfo:Example8.__docgenInfo,path:"stories/demos/rendering.stories.js"})},"./stories/demos/resource.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example11:function(){return Example11},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resource_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),addon_links_react=(__webpack_require__("./node_modules/core-js/modules/es.array.flat-map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.unscopables.flat-map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/@storybook/addon-links/react.js")),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),dragAndDrop=__webpack_require__("./src/addons/dragAndDrop/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),DragAndDropCalendar=(0,dragAndDrop.A)(src.Vv),resources=[{resourceId:1,resourceTitle:"Board room"},{resourceId:2,resourceTitle:"Training room"},{resourceId:3,resourceTitle:"Meeting room 1"},{resourceId:4,resourceTitle:"Meeting room 2"}],eventId=0,events=Array.from({length:20},(function(_,k){return k})).flatMap((function(i){var currentResource=resources[i%resources.length],dayDiff=i%7;return Array.from({length:5},(function(_,j){return{id:eventId++,title:"Event ".concat(i+j," _ ").concat(currentResource.resourceTitle),start:new Date(2018,0,29+dayDiff,9+j%4,0,0),end:new Date(2018,0,29+dayDiff,11+j%4,0,0),resourceId:currentResource.resourceId}}))}));function Resource(_ref){var localizer=_ref.localizer,_useState=(0,react.useState)(!1),_useState2=(0,slicedToArray.A)(_useState,2),groupResourcesOnWeek=_useState2[0],setGroupResourcesOnWeek=_useState2[1],_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2018,0,29),views:["day","work_week"]}}),[]),defaultDate=_useMemo.defaultDate,views=_useMemo.views,_useState3=(0,react.useState)(events),_useState4=(0,slicedToArray.A)(_useState3,2),myEvents=_useState4[0],setEvents=_useState4[1],handleSelectSlot=(0,react.useCallback)((function(_ref2){var start=_ref2.start,end=_ref2.end,resourceId=_ref2.resourceId,title=window.prompt("New Event Name");title&&setEvents((function(prev){return[].concat((0,toConsumableArray.A)(prev),[{start:start,end:end,title:title,resourceId:resourceId}])}))}),[setEvents]),handleSelectEvent=(0,react.useCallback)((function(event){return window.alert(event.title)}),[]),moveEvent=(0,react.useCallback)((function(_ref3){var event=_ref3.event,start=_ref3.start,end=_ref3.end,resourceId=_ref3.resourceId,_ref3$isAllDay=_ref3.isAllDay,droppedOnAllDaySlot=void 0!==_ref3$isAllDay&&_ref3$isAllDay,allDay=event.allDay;!allDay&&droppedOnAllDaySlot&&(event.allDay=!0),setEvents((function(prev){var _prev$find,existing=null!==(_prev$find=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find?_prev$find:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,toConsumableArray.A)(filtered),[Object.assign({},existing,{start:start,end:end,resourceId:resourceId,allDay:allDay})])}))}),[setEvents]),resizeEvent=(0,react.useCallback)((function(_ref4){var event=_ref4.event,start=_ref4.start,end=_ref4.end;setEvents((function(prev){var _prev$find2,existing=null!==(_prev$find2=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find2?_prev$find2:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,toConsumableArray.A)(filtered),[Object.assign({},existing,{start:start,end:end})])}))}),[setEvents]);return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"resource"}),(0,jsx_runtime.jsxs)("strong",{children:["The calendar below uses the"," ",(0,jsx_runtime.jsx)(addon_links_react.A,{kind:"props",story:"resource-id-accessor",children:"resourceIdAccessor"}),","," ",(0,jsx_runtime.jsx)(addon_links_react.A,{kind:"props",story:"resource-title-accessor",children:"resourceTitleAccessor"})," ","and"," ",(0,jsx_runtime.jsx)(addon_links_react.A,{kind:"props",story:"resources",children:"resources"})," ","props to show events scheduled for different resources.",(0,jsx_runtime.jsx)("br",{}),"Events can be mapped to a single resource, or multiple resources."]}),(0,jsx_runtime.jsx)("div",{style:{margin:"10px 0 20px 0"},children:(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",checked:groupResourcesOnWeek,onChange:function onChange(){return setGroupResourcesOnWeek(!groupResourcesOnWeek)}}),"Group resources on week view."]})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(DragAndDropCalendar,{selectable:!0,defaultDate:defaultDate,defaultView:src.Pp.DAY,events:myEvents,localizer:localizer,resources:resources,resourceIdAccessor:"resourceId",resourceTitleAccessor:"resourceTitle",onSelectSlot:handleSelectSlot,onSelectEvent:handleSelectEvent,onEventDrop:moveEvent,onEventResize:resizeEvent,step:60,views:views,resourceGroupingLayout:groupResourcesOnWeek})})]})}Resource.displayName="Resource",Resource.__docgenInfo={description:"",methods:[],displayName:"Resource",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/resource.js"]={name:"Resource",docgenInfo:Resource.__docgenInfo,path:"stories/demos/exampleCode/resource.js"});var resource_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example11=function Example11(){return(0,jsx_runtime.jsx)(Resource,{localizer:localizer})};Example11.displayName="Example11",Example11.storyName="Resource Scheduling",Example11.parameters=Object.assign({storySource:{source:"function Example11() {\n  return <Resource localizer={localizer} />\n}"}},Example11.parameters);var __namedExportsOrder=["Example11"];Example11.__docgenInfo={description:"",methods:[],displayName:"Example11"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/resource.stories.js"]={name:"Example11",docgenInfo:Example11.__docgenInfo,path:"stories/demos/resource.stories.js"})},"./stories/demos/selectable.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example2:function(){return Example2},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return selectable_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),DemoLink_component=(__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./stories/DemoLink.component.js")),events=__webpack_require__("./stories/resources/events.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Selectable(_ref){var localizer=_ref.localizer,_useState=(0,react.useState)(events.A),_useState2=(0,slicedToArray.A)(_useState,2),myEvents=_useState2[0],setEvents=_useState2[1],handleSelectSlot=(0,react.useCallback)((function(_ref2){var start=_ref2.start,end=_ref2.end,title=window.prompt("New Event name");title&&setEvents((function(prev){return[].concat((0,toConsumableArray.A)(prev),[{start:start,end:end,title:title}])}))}),[setEvents]),handleSelectEvent=(0,react.useCallback)((function(event){return window.alert(event.title)}),[]),_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,12),scrollToTime:new Date(1970,1,1,6)}}),[]),defaultDate=_useMemo.defaultDate,scrollToTime=_useMemo.scrollToTime;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"selectable",children:(0,jsx_runtime.jsx)("strong",{children:"Click an event to see more info, or drag the mouse over the calendar to select a date/time range."})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:myEvents,localizer:localizer,onSelectEvent:handleSelectEvent,onSelectSlot:handleSelectSlot,selectable:!0,scrollToTime:scrollToTime})})]})}Selectable.displayName="Selectable",Selectable.__docgenInfo={description:"",methods:[],displayName:"Selectable",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/selectable.js"]={name:"Selectable",docgenInfo:Selectable.__docgenInfo,path:"stories/demos/exampleCode/selectable.js"});var selectable_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example2=function Example2(){return(0,jsx_runtime.jsx)(Selectable,{localizer:localizer})};Example2.displayName="Example2",Example2.storyName="Create Events",Example2.parameters=Object.assign({storySource:{source:"function Example2() {\n  return <Selectable localizer={localizer} />\n}"}},Example2.parameters);var __namedExportsOrder=["Example2"];Example2.__docgenInfo={description:"",methods:[],displayName:"Example2"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/selectable.stories.js"]={name:"Example2",docgenInfo:Example2.__docgenInfo,path:"stories/demos/selectable.stories.js"})},"./stories/demos/timeslots.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example7:function(){return Example7},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return timeslots_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),events=__webpack_require__("./stories/resources/events.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Timeslots(_ref){var localizer=_ref.localizer,defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,12)}),[]);return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"timeslots"}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,localizer:localizer,step:15,timeslots:8})})]})}Timeslots.displayName="Timeslots",Timeslots.__docgenInfo={description:"",methods:[],displayName:"Timeslots",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/timeslots.js"]={name:"Timeslots",docgenInfo:Timeslots.__docgenInfo,path:"stories/demos/exampleCode/timeslots.js"});var timeslots_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example7=function Example7(){return(0,jsx_runtime.jsx)(Timeslots,{localizer:localizer})};Example7.displayName="Example7",Example7.storyName="Timeslots",Example7.parameters=Object.assign({storySource:{source:"function Example7() {\n  return <Timeslots localizer={localizer} />\n}"}},Example7.parameters);var __namedExportsOrder=["Example7"];Example7.__docgenInfo={description:"",methods:[],displayName:"Example7"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/timeslots.stories.js"]={name:"Example7",docgenInfo:Example7.__docgenInfo,path:"stories/demos/timeslots.stories.js"})},"./stories/demos/timezones.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example4:function(){return Example4},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return timezones_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),DemoLink_component=(__webpack_require__("./node_modules/moment-timezone/index.js"),__webpack_require__("./stories/DemoLink.component.js")),events=__webpack_require__("./stories/resources/events.js"),TimezoneSelect=__webpack_require__("./stories/demos/TimezoneSelect.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),defaultTZ=moment_default().tz.guess();function Timezones(){var _useState=(0,react.useState)(defaultTZ),_useState2=(0,slicedToArray.A)(_useState,2),timezone=_useState2[0],setTimezone=_useState2[1],_useMemo=(0,react.useMemo)((function(){return moment_default().tz.setDefault(timezone),{defaultDate:(str="2015-4-13",momentObj=moment_default(),momentObj(str,"YYYY-MM-DD").toDate()),getNow:function getNow(){return moment_default()().toDate()},localizer:(0,src.ye)(moment_default()),myEvents:(0,toConsumableArray.A)(events.A),scrollToTime:moment_default()().toDate()};var str,momentObj}),[timezone]),defaultDate=_useMemo.defaultDate,getNow=_useMemo.getNow,localizer=_useMemo.localizer,myEvents=_useMemo.myEvents,scrollToTime=_useMemo.scrollToTime;return(0,react.useEffect)((function(){return function(){moment_default().tz.setDefault()}}),[]),(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"timezones",children:(0,jsx_runtime.jsx)(TimezoneSelect.A,{defaultTZ:defaultTZ,setTimezone:setTimezone,timezone:timezone})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:myEvents,getNow:getNow,localizer:localizer,scrollToTime:scrollToTime})})]})}Timezones.displayName="Timezones",Timezones.__docgenInfo={description:"",methods:[],displayName:"Timezones"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/timezones.js"]={name:"Timezones",docgenInfo:Timezones.__docgenInfo,path:"stories/demos/exampleCode/timezones.js"});var timezones_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},Example4=function Example4(){return(0,jsx_runtime.jsx)(Timezones,{})};Example4.displayName="Example4",Example4.storyName="Timezones",Example4.parameters=Object.assign({storySource:{source:"function Example4() {\n  return <TimezoneCalendar />\n}"}},Example4.parameters);var __namedExportsOrder=["Example4"];Example4.__docgenInfo={description:"",methods:[],displayName:"Example4"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/timezones.stories.js"]={name:"Example4",docgenInfo:Example4.__docgenInfo,path:"stories/demos/timezones.stories.js"})},"./stories/props/allDayAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllDayAccessor:function(){return AllDayAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return allDayAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"alldayaccessor"},"allDayAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: 'allDay'")),(0,esm.yg)("p",null,'Determines whether the event should be considered an "all day" event and ignore time. Must resolve to a ',(0,esm.yg)("inlineCode",{parentName:"p"},"boolean")," value."),(0,esm.yg)(dist_esm.gG,{id:"props--all-day-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),allDayAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var AllDayAccessor=Template.bind({});AllDayAccessor.storyName="allDayAccessor",AllDayAccessor.args=storyDefaults.o,AllDayAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},AllDayAccessor.parameters);var __namedExportsOrder=["AllDayAccessor"]},"./stories/props/allDayMaxRows.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllDayMaxRows:function(){return AllDayMaxRows},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return allDayMaxRows_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),allDayEvents=[{id:0,title:"All Day Event very long title",allDay:!0,start:new Date(2015,3,0),end:new Date(2015,3,1)},{id:1,title:"#2 All Day Event very long title",allDay:!0,start:new Date(2015,3,0),end:new Date(2015,3,2)},{id:2,title:"#3 All Day Event very long title",allDay:!0,start:new Date(2015,3,0),end:new Date(2015,3,1)},{id:3,title:"#4 All Day Event",allDay:!0,start:new Date(2015,3,0),end:new Date(2015,3,1)},{id:4,title:"#5 All Day Event",allDay:!0,start:new Date(2015,3,0),end:new Date(2015,3,1)},{id:5,title:"#6 All Day Event",allDay:!0,start:new Date(2015,3,7),end:new Date(2015,3,7)}],esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"alldaymaxrows"},"allDayMaxRows"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"number")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Infinity"))),(0,esm.yg)("p",null,"Determines a maximum amount of rows of events to display in the all day section for Week and Day views, will display ",(0,esm.yg)("inlineCode",{parentName:"p"},"showMore")," button if events excede this number."),(0,esm.yg)(dist_esm.gG,{id:"props--all-day-max-rows",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),allDayMaxRows_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var AllDayMaxRows=Template.bind({});AllDayMaxRows.storyName="allDayMaxRows",AllDayMaxRows.args={defaultDate:new Date(2015,3,1),defaultView:src.Pp.WEEK,events:allDayEvents,localizer:mLocalizer,allDayMaxRows:2,popup:!0},AllDayMaxRows.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},AllDayMaxRows.parameters);var __namedExportsOrder=["AllDayMaxRows"]},"./stories/props/backgroundEvents.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BackGroundEvents:function(){return BackGroundEvents},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return backgroundEvents_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),helpers=__webpack_require__("./stories/helpers/index.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"backgroundevents"},"backgroundEvents"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"arrayOf(BackgroundEvent)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"[]"))),(0,esm.yg)("p",null,"An array of background event objects to display on the calendar. Background\nEvents behave similarly to Events but are not factored into Event overlap logic,\nallowing them to sit behind any Events that may occur during the same period.\nBackground Events objects can be any shape, as long as the Calendar knows how to\nretrieve the following details of the event:"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"start time"),(0,esm.yg)("li",{parentName:"ul"},"end time")),(0,esm.yg)("p",null,'Each of these properties can be customized or generated dynamically by\nsetting the various "accessor" props. Without any configuration the default\nevent should look like:'),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"BackgroundEvent {\n  start: Date,\n  end: Date,\n}\n")),(0,esm.yg)(dist_esm.gG,{id:"props--back-ground-events",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),backgroundEvents_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultView:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var BackGroundEvents=Template.bind({});BackGroundEvents.storyName="backgroundEvents",BackGroundEvents.args={backgroundEvents:helpers.Mf,defaultView:src.Pp.WEEK,events:helpers.AZ,localizer:mLocalizer},BackGroundEvents.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},BackGroundEvents.parameters);var __namedExportsOrder=["BackGroundEvents"]},"./stories/props/components.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Components:function(){return Components},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return components_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"components"},"components"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"object"))),(0,esm.yg)("p",null,"Customize how different sections of the calendar render by providing custom Components. In particular the Event component can be specified for the entire calendar, or you can provide an individual component for each view type."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-jsx"},"const components = useMemo(() => ({\n  event: MyEvent, // used by each view (Month, Day, Week)\n  eventWrapper: MyEventWrapper,\n  eventContainerWrapper: MyEventContainerWrapper,\n  dateCellWrapper: MyDateCellWrapper,\n  dayColumnWrapper: MyDayColumnWrapper,\n  timeSlotWrapper: MyTimeSlotWrapper,\n  timeGutterHeader: MyTimeGutterWrapper,\n  resourceHeader: MyResourceHeader,\n  toolbar: MyToolbar,\n  showMore: MyShowMoreButton,\n  agenda: {\n    event: MyAgendaEvent, // with the agenda view use a different component to render events\n    time: MyAgendaTime,\n    date: MyAgendaDate,\n  },\n  day: {\n    header: MyDayHeader,\n    event: MyDayEvent,\n  },\n  week: {\n    header: MyWeekHeader,\n    event: MyWeekEvent,\n  },\n  month: {\n    header: MyMonthHeader,\n    dateHeader: MyMonthDateHeader,\n    event: MyMonthEvent,\n  }\n}), [])\n<Calendar components={components} />\n")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--components",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;__webpack_require__("./node_modules/core-js/modules/es.array.map.js");var clsx_m=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function ViewNamesGroup(_ref){var viewNames=_ref.views,view=_ref.view,messages=_ref.messages,onView=_ref.onView;return viewNames.map((function(name){return(0,jsx_runtime.jsx)("button",{type:"button",className:(0,clsx_m.A)({"rbc-active":view===name}),onClick:function onClick(){return onView(name)},children:messages[name]},name)}))}function CustomToolbar(_ref2){var label=_ref2.label,messages=_ref2.localizer.messages,onNavigate=_ref2.onNavigate,onView=_ref2.onView,view=_ref2.view,views=_ref2.views;return(0,jsx_runtime.jsxs)("div",{className:"rbc-toolbar",children:[(0,jsx_runtime.jsx)("span",{className:"rbc-btn-group",children:(0,jsx_runtime.jsx)(ViewNamesGroup,{view:view,views:views,messages:messages,onView:onView})}),(0,jsx_runtime.jsx)("span",{className:"rbc-toolbar-label",children:label}),(0,jsx_runtime.jsxs)("span",{className:(0,clsx_m.A)("rbc-btn-group","examples--custom-toolbar"),children:[(0,jsx_runtime.jsx)("button",{type:"button",onClick:function onClick(){return onNavigate(src.C5.PREVIOUS)},"aria-label":messages.previous,children:"<"}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:function onClick(){return onNavigate(src.C5.TODAY)},"aria-label":messages.today,children:"•"}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:function onClick(){return onNavigate(src.C5.NEXT)},"aria-label":messages.next,children:">"})]})]})}CustomToolbar.displayName="CustomToolbar",CustomToolbar.__docgenInfo={description:"",methods:[],displayName:"CustomToolbar",props:{date:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},label:{description:"",type:{name:"string"},required:!1},localizer:{description:"",type:{name:"object"},required:!1},messages:{description:"",type:{name:"object"},required:!1},onNavigate:{description:"",type:{name:"func"},required:!1},onView:{description:"",type:{name:"func"},required:!1},view:{description:"",type:{name:"string"},required:!1},views:{description:"",type:{name:"array"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/customComponents/CustomToolbar.component.js"]={name:"CustomToolbar",docgenInfo:CustomToolbar.__docgenInfo,path:"stories/props/customComponents/CustomToolbar.component.js"});__webpack_require__("./stories/resources/customToolbar.scss");var mLocalizer=(0,src.ye)(moment_default()),components_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},Components=function Components(){var _useMemo=(0,react.useMemo)((function(){return{components:{toolbar:CustomToolbar},defaultDate:new Date(2015,3,13)}}),[]),components=_useMemo.components,defaultDate=_useMemo.defaultDate;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,components:components})})};Components.displayName="Components",Components.storyName="components",Components.parameters=Object.assign({storySource:{source:'function Components() {\n  const { components, defaultDate } = useMemo(\n    () => ({\n      components: {\n        toolbar: CustomToolbar,\n      },\n      defaultDate: new Date(2015, 3, 13),\n    }),\n    []\n  )\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        components={components}\n      />\n    </div>\n  )\n}'}},Components.parameters);var __namedExportsOrder=["Components"];Components.__docgenInfo={description:"",methods:[],displayName:"Components"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/components.stories.js"]={name:"Components",docgenInfo:Components.__docgenInfo,path:"stories/props/components.stories.js"})},"./stories/props/culture.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Culture:function(){return Culture},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return culture_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"culture"},"culture"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"none (browser default)"))),(0,esm.yg)("p",null,"Specify a specific culture code for the Calendar. The ",(0,esm.yg)("inlineCode",{parentName:"p"},"culture")," is used by ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"formats",mdxType:"LinkTo"},"formats")," with your ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"localizer")," to 'format' date/time information on the Calendar. To localize messaging, use the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"messages",mdxType:"LinkTo"},"messages")," prop."),(0,esm.yg)("p",null,"See the ",(0,esm.yg)(addon_links_react.A,{kind:"examples",story:"example-5",mdxType:"LinkTo"},"Localization Example")," for another example of combining ",(0,esm.yg)("inlineCode",{parentName:"p"},"rtl"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"localizer"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"culture")," and ",(0,esm.yg)("inlineCode",{parentName:"p"},"messages"),"."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note: it's generally better to handle this globally via your i18n library.")),(0,esm.yg)(dist_esm.gG,{id:"props--culture",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),culture_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}},events:{control:{type:null}},culture:{options:["es","fr","en-us","en-gb"],control:{type:"select"}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Culture=Template.bind({});Culture.storyName="culture",Culture.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,culture:"es"},Culture.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Culture.parameters);var __namedExportsOrder=["Culture"]},"./stories/props/date.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CalDate:function(){return CalDate},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return date_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"date"},"date"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"new Date()")),(0,esm.yg)("li",{parentName:"ul"},"controlled by: ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-navigate",mdxType:"LinkTo"},"onNavigate"))),(0,esm.yg)("p",null,"The current date value of the calendar. Determines the visible view range.\nIf ",(0,esm.yg)("inlineCode",{parentName:"p"},"date")," is omitted then the result of ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"get-now",mdxType:"LinkTo"},"getNow")," is used; otherwise the\ncurrent date is used."),(0,esm.yg)("p",null,"This is a controllable prop, when using ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-navigate",mdxType:"LinkTo"},"onNavigate")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--cal-date",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),date_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},CalDate=function CalDate(){var _useState=(0,react.useState)(new Date(2015,3,1)),_useState2=(0,slicedToArray.A)(_useState,2),date=_useState2[0],setDate=_useState2[1],onNavigate=(0,react.useCallback)((function(newDate){return setDate(newDate)}),[setDate]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{date:date,events:events.A,localizer:mLocalizer,onNavigate:onNavigate})})};CalDate.displayName="CalDate",CalDate.storyName="date",CalDate.parameters=Object.assign({storySource:{source:'function CalDate() {\n  const [date, setDate] = useState(new Date(2015, 3, 1))\n\n  const onNavigate = useCallback((newDate) => setDate(newDate), [setDate])\n\n  return (\n    <div className="height600">\n      <Calendar\n        date={date}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onNavigate={onNavigate}\n      />\n    </div>\n  )\n}'}},CalDate.parameters);var __namedExportsOrder=["CalDate"];CalDate.__docgenInfo={description:"",methods:[],displayName:"CalDate"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/date.stories.js"]={name:"CalDate",docgenInfo:CalDate.__docgenInfo,path:"stories/props/date.stories.js"})},"./stories/props/dayLayoutAlgorithm.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DayLayoutAlgorithm:function(){return DayLayoutAlgorithm},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return dayLayoutAlgorithm_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"daylayoutalgorithm"},"dayLayoutAlgorithm"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | Function(events, minimumStartDifference, slotMetrics, accessors)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"overlap"))),(0,esm.yg)("p",null,"A day event layout(arrangement) algorithm."),(0,esm.yg)("p",null,(0,esm.yg)("inlineCode",{parentName:"p"},"overlap")," allows events to be overlapped."),(0,esm.yg)("p",null,(0,esm.yg)("inlineCode",{parentName:"p"},"no-overlap")," resizes events to avoid overlap."),(0,esm.yg)("p",null,"or custom ",(0,esm.yg)("inlineCode",{parentName:"p"},"Function(events, minimumStartDifference, slotMetrics, accessors)")),(0,esm.yg)(dist_esm.gG,{id:"props--day-layout-algorithm",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),dayLayoutAlgorithm_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},events:{control:{type:null}},dayLayoutAlgorithm:{options:["overlap","no-overlap"],control:{type:"select"}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var DayLayoutAlgorithm=Template.bind({});DayLayoutAlgorithm.storyName="dayLayoutAlgorithm",DayLayoutAlgorithm.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,dayLayoutAlgorithm:"no-overlap"},DayLayoutAlgorithm.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},DayLayoutAlgorithm.parameters);var __namedExportsOrder=["DayLayoutAlgorithm"]},"./stories/props/dayPropGetter.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DayPropGetter:function(){return DayPropGetter},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return dayPropGetter_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"daypropgetter"},"dayPropGetter"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, resourceId?: Any) => {className?: string, style?: Object}"))),(0,esm.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the the day background."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Caution!")," Styles that change layout or position may break the calendar in unexpected ways."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--day-prop-getter",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;__webpack_require__("./stories/resources/propGetter.scss");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),dayPropGetter_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},DayPropGetter=function DayPropGetter(){var dayPropGetter=(0,react.useCallback)((function(date){return Object.assign({},2===moment_default()(date).day()&&{className:"tuesday"},4===moment_default()(date).day()&&{style:{backgroundColor:"darkgreen",color:"white"}})}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,13)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,dayPropGetter:dayPropGetter,events:events.A,localizer:mLocalizer})})};DayPropGetter.displayName="DayPropGetter",DayPropGetter.storyName="dayPropGetter",DayPropGetter.parameters=Object.assign({storySource:{source:"function DayPropGetter() {\n  const dayPropGetter = useCallback(\n    (date) => ({\n      ...(moment(date).day() === 2 && {\n        className: 'tuesday',\n      }),\n      ...(moment(date).day() === 4 && {\n        style: {\n          backgroundColor: 'darkgreen',\n          color: 'white',\n        },\n      }),\n    }),\n    []\n  )\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 13), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        dayPropGetter={dayPropGetter}\n        events={demoEvents}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},DayPropGetter.parameters);var __namedExportsOrder=["DayPropGetter"];DayPropGetter.__docgenInfo={description:"",methods:[],displayName:"DayPropGetter"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/dayPropGetter.stories.js"]={name:"DayPropGetter",docgenInfo:DayPropGetter.__docgenInfo,path:"stories/props/dayPropGetter.stories.js"})},"./stories/props/defaultDate.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultDate:function(){return DefaultDate},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return defaultDate_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"defaultdate"},"defaultDate"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"new Date()"))),(0,esm.yg)("p",null,"Sets the initial ",(0,esm.yg)("inlineCode",{parentName:"p"},"date")," value in your calendar when you don't want it to be 'today', when not using ",(0,esm.yg)("inlineCode",{parentName:"p"},"getNow"),", or controlling ",(0,esm.yg)("inlineCode",{parentName:"p"},"date"),"."),(0,esm.yg)(dist_esm.gG,{id:"props--default-date",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),defaultDate_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultView:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var DefaultDate=Template.bind({});DefaultDate.storyName="defaultDate",DefaultDate.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.DAY,events:events.A,localizer:mLocalizer},DefaultDate.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},DefaultDate.parameters);var __namedExportsOrder=["DefaultDate"]},"./stories/props/defaultView.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultView:function(){return DefaultView},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return defaultView_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"defaultview"},"defaultView"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Views.MONTH (month|week|work_week|day|agenda)"))),(0,esm.yg)("p",null,"The initial ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")," set for your calendar when you don't want it to be the default ('month')."),(0,esm.yg)(dist_esm.gG,{id:"props--default-view",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),defaultView_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var DefaultView=Template.bind({});DefaultView.storyName="defaultView",DefaultView.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.DAY,events:events.A,localizer:mLocalizer},DefaultView.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},DefaultView.parameters);var __namedExportsOrder=["DefaultView"]},"./stories/props/drilldownView.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DrilldownView:function(){return DrilldownView},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return drilldownView_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"drilldownview"},"drilldownView"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Views.DAY"))),(0,esm.yg)("p",null,"The string name of the destination ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")," for drill-down actions, such as clicking a date header, or the truncated events links. If ",(0,esm.yg)("inlineCode",{parentName:"p"},"getDrilldownView")," is also specified it will be used instead."),(0,esm.yg)("p",null,"Set to ",(0,esm.yg)("inlineCode",{parentName:"p"},"null")," to disable drill-down actions."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},'<Calendar drilldownView="agenda" />\n')),(0,esm.yg)(dist_esm.gG,{id:"props--drilldown-view",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),drilldownView_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},drilldownView:{control:{type:"select",options:["day","agenda"],defaultValue:src.Pp.DAY}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var DrilldownView=Template.bind({});DrilldownView.storyName="drilldownView",DrilldownView.args={defaultDate:new Date(2015,3,1),drilldownView:src.Pp.AGENDA,events:events.A,localizer:mLocalizer},DrilldownView.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},DrilldownView.parameters);var __namedExportsOrder=["DrilldownView"]},"./stories/props/elementProps.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ElementProps:function(){return ElementProps},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return elementProps_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"elementprops"},"elementProps"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"object"))),(0,esm.yg)("p",null,"Props passed to main calendar ",(0,esm.yg)("inlineCode",{parentName:"p"},"<div>"),"."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note:")," Will not pass down ",(0,esm.yg)("inlineCode",{parentName:"p"},"className"),"."),(0,esm.yg)(dist_esm.gG,{id:"props--element-props",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;__webpack_require__("./stories/resources/propGetter.scss");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),elementProps_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var ElementProps=Template.bind({});ElementProps.storyName="elementProps",ElementProps.args={defaultDate:new Date(2015,3,13),elementProps:{id:"my_scheduler"},events:events.A,localizer:mLocalizer},ElementProps.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ElementProps.parameters);var __namedExportsOrder=["ElementProps"]},"./stories/props/endAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EndAccessor:function(){return EndAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return endAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"endaccessor"},"endAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => Date")),(0,esm.yg)("li",{parentName:"ul"},"default: 'end'")),(0,esm.yg)("p",null,"The end date/time of the event. Must resolve to a JavaScript ",(0,esm.yg)("inlineCode",{parentName:"p"},"Date")," object."),(0,esm.yg)(dist_esm.gG,{id:"props--end-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),endAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var EndAccessor=Template.bind({});EndAccessor.storyName="endAccessor",EndAccessor.args=storyDefaults.o,EndAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},EndAccessor.parameters);var __namedExportsOrder=["EndAccessor"]},"./stories/props/eventPropGetter.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EventPropGetter:function(){return EventPropGetter},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return eventPropGetter_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"eventpropgetter"},"eventPropGetter"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (event: Object, start: Date, end: Date, isSelected: boolean) => {className?: string, style?: Object}"))),(0,esm.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the the event node."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--event-prop-getter",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;__webpack_require__("./stories/resources/propGetter.scss");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),eventPropGetter_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},EventPropGetter=function EventPropGetter(){var eventPropGetter=(0,react.useCallback)((function(event,start,end,isSelected){return Object.assign({},isSelected&&{style:{backgroundColor:"#000"}},moment_default()(start).hour()<12&&{className:"powderBlue"},event.title.includes("Meeting")&&{className:"darkGreen"})}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,eventPropGetter:eventPropGetter,events:events.A,localizer:mLocalizer})})};EventPropGetter.displayName="EventPropGetter",EventPropGetter.storyName="eventPropGetter",EventPropGetter.parameters=Object.assign({storySource:{source:"function EventPropGetter() {\n  const eventPropGetter = useCallback(\n    (event, start, end, isSelected) => ({\n      ...(isSelected && {\n        style: {\n          backgroundColor: '#000',\n        },\n      }),\n      ...(moment(start).hour() < 12 && {\n        className: 'powderBlue',\n      }),\n      ...(event.title.includes('Meeting') && {\n        className: 'darkGreen',\n      }),\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={new Date(2015, 3, 13)}\n        defaultView={Views.WEEK}\n        eventPropGetter={eventPropGetter}\n        events={demoEvents}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},EventPropGetter.parameters);var __namedExportsOrder=["EventPropGetter"];EventPropGetter.__docgenInfo={description:"",methods:[],displayName:"EventPropGetter"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/eventPropGetter.stories.js"]={name:"EventPropGetter",docgenInfo:EventPropGetter.__docgenInfo,path:"stories/props/eventPropGetter.stories.js"})},"./stories/props/events.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Events:function(){return Events},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return events_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"events"},"events"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"arrayOf(Event)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"[]"))),(0,esm.yg)("p",null,"An array of event objects to display on the calendar. Events objects\ncan be any shape, as long as the Calendar knows how to retrieve the\nfollowing details of the event:"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"start time"),(0,esm.yg)("li",{parentName:"ul"},"end time"),(0,esm.yg)("li",{parentName:"ul"},"title"),(0,esm.yg)("li",{parentName:"ul"},'whether its an "all day" event or not'),(0,esm.yg)("li",{parentName:"ul"},"any resource the event may be related to")),(0,esm.yg)("p",null,'Each of these properties can be customized or generated dynamically by\nsetting the various "accessor" props. Without any configuration the default\nevent should look like:'),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"Event {\n  title: string,\n  start: Date,\n  end: Date,\n  allDay?: boolean\n  resource?: any,\n}\n")),(0,esm.yg)(dist_esm.gG,{id:"props--events",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),events_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Events=Template.bind({});Events.storyName="events",Events.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer},Events.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Events.parameters);var __namedExportsOrder=["Events"]},"./stories/props/formats.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Formats:function(){return Formats},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formats_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formats"},"formats"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Object"))),(0,esm.yg)(addon_links_react.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"Localizer")," specific formats, tell the Calendar how to format and display dates and times.",(0,esm.yg)("p",null,"The ",(0,esm.yg)("inlineCode",{parentName:"p"},"format")," types are dependent on the configured localizer; both Moment and Globalize accept strings of tokens according to their own specification, such as: ",(0,esm.yg)("inlineCode",{parentName:"p"},"'DD mm yyyy'"),"."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"const formats = useMemo(() => ({\n  dateFormat: 'dd',\n\n  dayFormat: (date, , localizer) =>\n    localizer.format(date, 'DDD', culture),\n\n  dayRangeHeaderFormat: ({ start, end }, culture, localizer) =>\n    localizer.format(start, { date: 'short' }, culture) + ' — ' +\n    localizer.format(end, { date: 'short' }, culture)\n}), [])\n\n<Calendar formats={formats} />\n")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formats_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},Formats=function Formats(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),formats:{dateFormat:"D",weekdayFormat:function weekdayFormat(date,culture,localizer){return localizer.format(date,"dddd",culture)},dayFormat:function dayFormat(date,culture,localizer){return localizer.format(date,"dddd Do",culture)},timeGutterFormat:function timeGutterFormat(date,culture,localizer){return localizer.format(date,"hh:mm a",culture)}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,formats:formats,localizer:mLocalizer})})};Formats.displayName="Formats",Formats.storyName="formats",Formats.parameters=Object.assign({storySource:{source:"function Formats() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 1),\n      formats: {\n        // the 'date' on each day cell of the 'month' view\n        dateFormat: 'D',\n        // the day of the week header in the 'month' view\n        weekdayFormat: (date, culture, localizer) =>\n          localizer.format(date, 'dddd', culture),\n        // the day header in the 'week' and 'day' (Time Grid) views\n        dayFormat: (date, culture, localizer) =>\n          localizer.format(date, 'dddd Do', culture),\n        // the time in the gutter in the Time Grid views\n        timeGutterFormat: (date, culture, localizer) =>\n          localizer.format(date, 'hh:mm a', culture),\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},Formats.parameters);var __namedExportsOrder=["Formats"];Formats.__docgenInfo={description:"",methods:[],displayName:"Formats"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formats.stories.js"]={name:"Formats",docgenInfo:Formats.__docgenInfo,path:"stories/props/formats.stories.js"})},"./stories/props/formatsAgendaDateFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsAgendDateFormat:function(){return FormatsAgendDateFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsAgendaDateFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsagendadateformat"},"formats.agendaDateFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,"Dates displayed in the gutter of the Agenda ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-agenda-date-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsAgendaDateFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsAgendDateFormat=function FormatsAgendDateFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{agendaDateFormat:function agendaDateFormat(date,culture,localizer){return localizer.format(date,"dddd MMMM Do",culture)}},views:[src.Pp.WEEK,src.Pp.DAY,src.Pp.AGENDA]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.AGENDA,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsAgendDateFormat.displayName="FormatsAgendDateFormat",FormatsAgendDateFormat.storyName="formats.agendaDateFormat",FormatsAgendDateFormat.parameters=Object.assign({storySource:{source:"function FormatsAgendDateFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        agendaDateFormat: (date, culture, localizer) =>\n          localizer.format(date, 'dddd MMMM Do', culture),\n      },\n      views: [Views.WEEK, Views.DAY, Views.AGENDA],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.AGENDA}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsAgendDateFormat.parameters);var __namedExportsOrder=["FormatsAgendDateFormat"];FormatsAgendDateFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsAgendDateFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsAgendaDateFormat.stories.js"]={name:"FormatsAgendDateFormat",docgenInfo:FormatsAgendDateFormat.__docgenInfo,path:"stories/props/formatsAgendaDateFormat.stories.js"})},"./stories/props/formatsAgendaHeaderFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsAgendHeaderFormat:function(){return FormatsAgendHeaderFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsAgendaHeaderFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsagendaheaderformat"},"formats.agendaHeaderFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'Toolbar header format for the Agenda view, e.g. "4/1/2015 — 5/1/2015"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-agenda-header-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsAgendaHeaderFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsAgendHeaderFormat=function FormatsAgendHeaderFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{agendaHeaderFormat:function agendaHeaderFormat(_ref,culture,localizer){var start=_ref.start,end=_ref.end;return localizer.format(start,"dddd MMMM Do, YYYY",culture)+" - "+localizer.format(end,"dddd MMMM Do, YYYY",culture)}},views:[src.Pp.WEEK,src.Pp.DAY,src.Pp.AGENDA]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.AGENDA,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsAgendHeaderFormat.displayName="FormatsAgendHeaderFormat",FormatsAgendHeaderFormat.storyName="formats.agendaHeaderFormat",FormatsAgendHeaderFormat.parameters=Object.assign({storySource:{source:"function FormatsAgendHeaderFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        agendaHeaderFormat: ({ start, end }, culture, localizer) =>\n          localizer.format(start, 'dddd MMMM Do, YYYY', culture) +\n          ' - ' +\n          localizer.format(end, 'dddd MMMM Do, YYYY', culture),\n      },\n      views: [Views.WEEK, Views.DAY, Views.AGENDA],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.AGENDA}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsAgendHeaderFormat.parameters);var __namedExportsOrder=["FormatsAgendHeaderFormat"];FormatsAgendHeaderFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsAgendHeaderFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsAgendaHeaderFormat.stories.js"]={name:"FormatsAgendHeaderFormat",docgenInfo:FormatsAgendHeaderFormat.__docgenInfo,path:"stories/props/formatsAgendaHeaderFormat.stories.js"})},"./stories/props/formatsAgendaTimeFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsAgendTimeFormat:function(){return FormatsAgendTimeFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsAgendaTimeFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsagendatimeformat"},"formats.agendaTimeFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,"Time only (not range) displayed in the gutter of the Agenda ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-agenda-time-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsAgendaTimeFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsAgendTimeFormat=function FormatsAgendTimeFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{agendaTimeFormat:function agendaTimeFormat(date,culture,localizer){return localizer.format(date,"hh:mm A",culture)}},views:[src.Pp.WEEK,src.Pp.DAY,src.Pp.AGENDA]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.AGENDA,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsAgendTimeFormat.displayName="FormatsAgendTimeFormat",FormatsAgendTimeFormat.storyName="formats.agendaTimeFormat",FormatsAgendTimeFormat.parameters=Object.assign({storySource:{source:"function FormatsAgendTimeFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        agendaTimeFormat: (date, culture, localizer) =>\n          localizer.format(date, 'hh:mm A', culture),\n      },\n      views: [Views.WEEK, Views.DAY, Views.AGENDA],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.AGENDA}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsAgendTimeFormat.parameters);var __namedExportsOrder=["FormatsAgendTimeFormat"];FormatsAgendTimeFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsAgendTimeFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsAgendaTimeFormat.stories.js"]={name:"FormatsAgendTimeFormat",docgenInfo:FormatsAgendTimeFormat.__docgenInfo,path:"stories/props/formatsAgendaTimeFormat.stories.js"})},"./stories/props/formatsAgendaTimeRangeFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsAgendaTimeRangeFormat:function(){return FormatsAgendaTimeRangeFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsAgendaTimeRangeFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsagendatimerangeformat"},"formats.agendaTimeRangeFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,"Time range displayed in the gutter of the Agenda ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-agenda-time-range-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsAgendaTimeRangeFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsAgendaTimeRangeFormat=function FormatsAgendaTimeRangeFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{agendaTimeRangeFormat:function agendaTimeRangeFormat(_ref,culture,localizer){var start=_ref.start,end=_ref.end;return localizer.format(start,"hh:mm A",culture)+" - "+localizer.format(end,"hh:mm A",culture)}},views:[src.Pp.WEEK,src.Pp.DAY,src.Pp.AGENDA]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.AGENDA,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsAgendaTimeRangeFormat.displayName="FormatsAgendaTimeRangeFormat",FormatsAgendaTimeRangeFormat.storyName="formats.agendaTimeRangeFormat",FormatsAgendaTimeRangeFormat.parameters=Object.assign({storySource:{source:"function FormatsAgendaTimeRangeFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        agendaTimeRangeFormat: ({ start, end }, culture, localizer) =>\n          localizer.format(start, 'hh:mm A', culture) +\n          ' - ' +\n          localizer.format(end, 'hh:mm A', culture),\n      },\n      views: [Views.WEEK, Views.DAY, Views.AGENDA],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.AGENDA}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsAgendaTimeRangeFormat.parameters);var __namedExportsOrder=["FormatsAgendaTimeRangeFormat"];FormatsAgendaTimeRangeFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsAgendaTimeRangeFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsAgendaTimeRangeFormat.stories.js"]={name:"FormatsAgendaTimeRangeFormat",docgenInfo:FormatsAgendaTimeRangeFormat.__docgenInfo,path:"stories/props/formatsAgendaTimeRangeFormat.stories.js"})},"./stories/props/formatsDateFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsDateFormat:function(){return FormatsDateFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsDateFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsdateformat"},"formats.dateFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'Format for the day of the month heading in the Month view. e.g. "01", "02", "03", etc'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-date-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsDateFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsDateFormat=function FormatsDateFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),formats:{dateFormat:function dateFormat(date,culture,localizer){return localizer.format(date,"D",culture)}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,formats:formats,localizer:mLocalizer})})};FormatsDateFormat.displayName="FormatsDateFormat",FormatsDateFormat.storyName="formats.dateFormat",FormatsDateFormat.parameters=Object.assign({storySource:{source:"function FormatsDateFormat() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 1),\n      formats: {\n        dateFormat: (date, culture, localizer) =>\n          localizer.format(date, 'D', culture),\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},FormatsDateFormat.parameters);var __namedExportsOrder=["FormatsDateFormat"];FormatsDateFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsDateFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsDateFormat.stories.js"]={name:"FormatsDateFormat",docgenInfo:FormatsDateFormat.__docgenInfo,path:"stories/props/formatsDateFormat.stories.js"})},"./stories/props/formatsDayFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsDayFormat:function(){return FormatsDayFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsDayFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsdayformat"},"formats.dayFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'A day of the week format for Week and Day headings, e.g. "Wed 01/04"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-day-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsDayFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsDayFormat=function FormatsDayFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{dayFormat:function dayFormat(date,culture,localizer){return localizer.format(date,"ddd MM/DD",culture)}},views:[src.Pp.WEEK,src.Pp.DAY]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsDayFormat.displayName="FormatsDayFormat",FormatsDayFormat.storyName="formats.dayFormat",FormatsDayFormat.parameters=Object.assign({storySource:{source:"function FormatsDayFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        dayFormat: (date, culture, localizer) =>\n          localizer.format(date, 'ddd MM/DD', culture),\n      },\n      views: [Views.WEEK, Views.DAY],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsDayFormat.parameters);var __namedExportsOrder=["FormatsDayFormat"];FormatsDayFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsDayFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsDayFormat.stories.js"]={name:"FormatsDayFormat",docgenInfo:FormatsDayFormat.__docgenInfo,path:"stories/props/formatsDayFormat.stories.js"})},"./stories/props/formatsDayHeaderFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsDayHeaderFormat:function(){return FormatsDayHeaderFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsDayHeaderFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsdayheaderformat"},"formats.dayHeaderFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'Toolbar header format for the Day view, e.g. "Wednesday Apr 01"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-day-header-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsDayHeaderFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsDayHeaderFormat=function FormatsDayHeaderFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{dayHeaderFormat:function dayHeaderFormat(date,culture,localizer){return localizer.format(date,"dddd MMMM Do",culture)}},views:[src.Pp.WEEK,src.Pp.DAY]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.DAY,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsDayHeaderFormat.displayName="FormatsDayHeaderFormat",FormatsDayHeaderFormat.storyName="formats.dayHeaderFormat",FormatsDayHeaderFormat.parameters=Object.assign({storySource:{source:"function FormatsDayHeaderFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        dayHeaderFormat: (date, culture, localizer) =>\n          localizer.format(date, 'dddd MMMM Do', culture),\n      },\n      views: [Views.WEEK, Views.DAY],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.DAY}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsDayHeaderFormat.parameters);var __namedExportsOrder=["FormatsDayHeaderFormat"];FormatsDayHeaderFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsDayHeaderFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsDayHeaderFormat.stories.js"]={name:"FormatsDayHeaderFormat",docgenInfo:FormatsDayHeaderFormat.__docgenInfo,path:"stories/props/formatsDayHeaderFormat.stories.js"})},"./stories/props/formatsDayRangeHeaderFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsDayRangeHeaderFormat:function(){return FormatsDayRangeHeaderFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsDayRangeHeaderFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsdayrangeheaderformat"},"formats.dayRangeHeaderFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'Toolbar header format for the Week views, e.g. "Mar 29 - Apr 04"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-day-range-header-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsDayRangeHeaderFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsDayRangeHeaderFormat=function FormatsDayRangeHeaderFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{dayRangeHeaderFormat:function dayRangeHeaderFormat(_ref,culture,localizer){var start=_ref.start,end=_ref.end;return localizer.format(start,"ddd D",culture)+" - "+localizer.format(end,"ddd D",culture)}},views:[src.Pp.WEEK,src.Pp.DAY]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsDayRangeHeaderFormat.displayName="FormatsDayRangeHeaderFormat",FormatsDayRangeHeaderFormat.storyName="formats.dayRangeHeaderFormat",FormatsDayRangeHeaderFormat.parameters=Object.assign({storySource:{source:"function FormatsDayRangeHeaderFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        dayRangeHeaderFormat: ({ start, end }, culture, localizer) =>\n          localizer.format(start, 'ddd D', culture) +\n          ' - ' +\n          localizer.format(end, 'ddd D', culture),\n      },\n      views: [Views.WEEK, Views.DAY],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsDayRangeHeaderFormat.parameters);var __namedExportsOrder=["FormatsDayRangeHeaderFormat"];FormatsDayRangeHeaderFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsDayRangeHeaderFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsDayRangeHeaderFormat.stories.js"]={name:"FormatsDayRangeHeaderFormat",docgenInfo:FormatsDayRangeHeaderFormat.__docgenInfo,path:"stories/props/formatsDayRangeHeaderFormat.stories.js"})},"./stories/props/formatsEventTimeRangeEndFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsEventTimeRangeEndFormat:function(){return FormatsEventTimeRangeEndFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsEventTimeRangeEndFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatseventtimerangeendformat"},"formats.eventTimeRangeEndFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,"An optional event time range for events that continue onto another day. Used with ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"show-multi-day-times",mdxType:"LinkTo"},"showMultiDayTimes"),"."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-event-time-range-end-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsEventTimeRangeEndFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsEventTimeRangeEndFormat=function FormatsEventTimeRangeEndFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{eventTimeRangeEndFormat:function eventTimeRangeEndFormat(date,culture,localizer){return" << "+localizer.format(date,"hh:mm A",culture)}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer,showMultiDayTimes:!0})})};FormatsEventTimeRangeEndFormat.displayName="FormatsEventTimeRangeEndFormat",FormatsEventTimeRangeEndFormat.storyName="formats.eventTimeRangeEndFormat",FormatsEventTimeRangeEndFormat.parameters=Object.assign({storySource:{source:"function FormatsEventTimeRangeEndFormat() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        eventTimeRangeEndFormat: (date, culture, localizer) =>\n          ' << ' + localizer.format(date, 'hh:mm A', culture),\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        showMultiDayTimes\n      />\n    </div>\n  )\n}"}},FormatsEventTimeRangeEndFormat.parameters);var __namedExportsOrder=["FormatsEventTimeRangeEndFormat"];FormatsEventTimeRangeEndFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsEventTimeRangeEndFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsEventTimeRangeEndFormat.stories.js"]={name:"FormatsEventTimeRangeEndFormat",docgenInfo:FormatsEventTimeRangeEndFormat.__docgenInfo,path:"stories/props/formatsEventTimeRangeEndFormat.stories.js"})},"./stories/props/formatsEventTimeRangeFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsEventTimeRangeFormat:function(){return FormatsEventTimeRangeFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsEventTimeRangeFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatseventtimerangeformat"},"formats.eventTimeRangeFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,"Time range displayed on events in Time Grid views."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-event-time-range-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsEventTimeRangeFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsEventTimeRangeFormat=function FormatsEventTimeRangeFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{eventTimeRangeFormat:function eventTimeRangeFormat(_ref,culture,localizer){var start=_ref.start,end=_ref.end;return localizer.format(start,"hh:mm a",culture)+" - "+localizer.format(end,"hh:mm a",culture)}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer})})};FormatsEventTimeRangeFormat.displayName="FormatsEventTimeRangeFormat",FormatsEventTimeRangeFormat.storyName="formats.eventTimeRangeFormat",FormatsEventTimeRangeFormat.parameters=Object.assign({storySource:{source:"function FormatsEventTimeRangeFormat() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        eventTimeRangeFormat: ({ start, end }, culture, localizer) =>\n          localizer.format(start, 'hh:mm a', culture) +\n          ' - ' +\n          localizer.format(end, 'hh:mm a', culture),\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},FormatsEventTimeRangeFormat.parameters);var __namedExportsOrder=["FormatsEventTimeRangeFormat"];FormatsEventTimeRangeFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsEventTimeRangeFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsEventTimeRangeFormat.stories.js"]={name:"FormatsEventTimeRangeFormat",docgenInfo:FormatsEventTimeRangeFormat.__docgenInfo,path:"stories/props/formatsEventTimeRangeFormat.stories.js"})},"./stories/props/formatsEventTimeRangeStartFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsEventTimeRangeStartFormat:function(){return FormatsEventTimeRangeStartFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsEventTimeRangeStartFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatseventtimerangestartformat"},"formats.eventTimeRangeStartFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,"An optional event time range for events that continue onto another day. Used with ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"show-multi-day-times",mdxType:"LinkTo"},"showMultiDayTimes"),"."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-event-time-range-start-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsEventTimeRangeStartFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsEventTimeRangeStartFormat=function FormatsEventTimeRangeStartFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{eventTimeRangeStartFormat:function eventTimeRangeStartFormat(date,culture,localizer){return localizer.format(date,"hh:mm A",culture)+" >> "}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer,showMultiDayTimes:!0})})};FormatsEventTimeRangeStartFormat.displayName="FormatsEventTimeRangeStartFormat",FormatsEventTimeRangeStartFormat.storyName="formats.eventTimeRangeStartFormat",FormatsEventTimeRangeStartFormat.parameters=Object.assign({storySource:{source:"function FormatsEventTimeRangeStartFormat() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        eventTimeRangeStartFormat: (date, culture, localizer) =>\n          localizer.format(date, 'hh:mm A', culture) + ' >> ',\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        showMultiDayTimes\n      />\n    </div>\n  )\n}"}},FormatsEventTimeRangeStartFormat.parameters);var __namedExportsOrder=["FormatsEventTimeRangeStartFormat"];FormatsEventTimeRangeStartFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsEventTimeRangeStartFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsEventTimeRangeStartFormat.stories.js"]={name:"FormatsEventTimeRangeStartFormat",docgenInfo:FormatsEventTimeRangeStartFormat.__docgenInfo,path:"stories/props/formatsEventTimeRangeStartFormat.stories.js"})},"./stories/props/formatsMonthHeaderFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsMonthHeaderFormat:function(){return FormatsMonthHeaderFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsMonthHeaderFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsmonthheaderformat"},"formats.monthHeaderFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'Toolbar header format for the Month view, e.g "2015 April"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-month-header-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsMonthHeaderFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsMonthHeaderFormat=function FormatsMonthHeaderFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),formats:{monthHeaderFormat:function monthHeaderFormat(date,culture,localizer){return localizer.format(date,"MMMM [']YY",culture)}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,formats:formats,localizer:mLocalizer})})};FormatsMonthHeaderFormat.displayName="FormatsMonthHeaderFormat",FormatsMonthHeaderFormat.storyName="formats.monthHeaderFormat",FormatsMonthHeaderFormat.parameters=Object.assign({storySource:{source:'function FormatsMonthHeaderFormat() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 1),\n      formats: {\n        monthHeaderFormat: (date, culture, localizer) =>\n          localizer.format(date, `MMMM [\']YY`, culture),\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}'}},FormatsMonthHeaderFormat.parameters);var __namedExportsOrder=["FormatsMonthHeaderFormat"];FormatsMonthHeaderFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsMonthHeaderFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsMonthHeaderFormat.stories.js"]={name:"FormatsMonthHeaderFormat",docgenInfo:FormatsMonthHeaderFormat.__docgenInfo,path:"stories/props/formatsMonthHeaderFormat.stories.js"})},"./stories/props/formatsSelectRangeFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsSelectRangeFormat:function(){return FormatsSelectRangeFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsSelectRangeFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsselectrangeformat"},"formats.selectRangeFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'A time range format shown in the highlighted area when selecting time slots, e.g "08:00 am — 12:00 pm"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-select-range-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsSelectRangeFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsSelectRangeFormat=function FormatsSelectRangeFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{selectRangeFormat:function selectRangeFormat(_ref,culture,localizer){var start=_ref.start,end=_ref.end;return localizer.format(start,"hh:mm a",culture)+" - "+localizer.format(end,"hh:mm a",culture)}},views:[src.Pp.WEEK,src.Pp.DAY]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer,selectable:!0,views:views})})};FormatsSelectRangeFormat.displayName="FormatsSelectRangeFormat",FormatsSelectRangeFormat.storyName="formats.selectRangeFormat",FormatsSelectRangeFormat.parameters=Object.assign({storySource:{source:"function FormatsSelectRangeFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        selectRangeFormat: ({ start, end }, culture, localizer) =>\n          localizer.format(start, 'hh:mm a', culture) +\n          ' - ' +\n          localizer.format(end, 'hh:mm a', culture),\n      },\n      views: [Views.WEEK, Views.DAY],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        selectable\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsSelectRangeFormat.parameters);var __namedExportsOrder=["FormatsSelectRangeFormat"];FormatsSelectRangeFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsSelectRangeFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsSelectRangeFormat.stories.js"]={name:"FormatsSelectRangeFormat",docgenInfo:FormatsSelectRangeFormat.__docgenInfo,path:"stories/props/formatsSelectRangeFormat.stories.js"})},"./stories/props/formatsTimeGutterFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsTimeGutterFormat:function(){return FormatsTimeGutterFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsTimeGutterFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatstimegutterformat"},"formats.timeGutterFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'The timestamp cell formats in Week and Time views, e.g. "4:00 AM"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-time-gutter-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsTimeGutterFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsTimeGutterFormat=function FormatsTimeGutterFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{timeGutterFormat:function timeGutterFormat(date,culture,localizer){return localizer.format(date,"hh:mm a",culture)}},views:[src.Pp.WEEK,src.Pp.DAY]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsTimeGutterFormat.displayName="FormatsTimeGutterFormat",FormatsTimeGutterFormat.storyName="formats.timeGutterFormat",FormatsTimeGutterFormat.parameters=Object.assign({storySource:{source:"function FormatsTimeGutterFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        timeGutterFormat: (date, culture, localizer) =>\n          localizer.format(date, 'hh:mm a', culture),\n      },\n      views: [Views.WEEK, Views.DAY],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsTimeGutterFormat.parameters);var __namedExportsOrder=["FormatsTimeGutterFormat"];FormatsTimeGutterFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsTimeGutterFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsTimeGutterFormat.stories.js"]={name:"FormatsTimeGutterFormat",docgenInfo:FormatsTimeGutterFormat.__docgenInfo,path:"stories/props/formatsTimeGutterFormat.stories.js"})},"./stories/props/formatsWeekdayFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsWeekdayFormat:function(){return FormatsWeekdayFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsWeekdayFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsweekdayformat"},"formats.weekdayFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'Week day name format for the Month week day headings, e.g: "Sun", "Mon", "Tue", etc'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-weekday-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsWeekdayFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsWeekdayFormat=function FormatsWeekdayFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),formats:{weekdayFormat:function weekdayFormat(date,culture,localizer){return localizer.format(date,"dddd",culture)}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,formats:formats,localizer:mLocalizer})})};FormatsWeekdayFormat.displayName="FormatsWeekdayFormat",FormatsWeekdayFormat.storyName="formats.weekdayFormat",FormatsWeekdayFormat.parameters=Object.assign({storySource:{source:"function FormatsWeekdayFormat() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 1),\n      formats: {\n        weekdayFormat: (date, culture, localizer) =>\n          localizer.format(date, 'dddd', culture),\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},FormatsWeekdayFormat.parameters);var __namedExportsOrder=["FormatsWeekdayFormat"];FormatsWeekdayFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsWeekdayFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsWeekdayFormat.stories.js"]={name:"FormatsWeekdayFormat",docgenInfo:FormatsWeekdayFormat.__docgenInfo,path:"stories/props/formatsWeekdayFormat.stories.js"})},"./stories/props/getDrilldownView.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{GetDrilldownView:function(){return GetDrilldownView},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return getDrilldownView_stories}});__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"getdrilldownview"},"getDrilldownView"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (targetDate: Date, currentViewName: string, configuredViewNames: Views[]) => string|null"))),(0,esm.yg)("p",null,"Functionally equivalent to drilldownView, but accepts a function that can return a view name. It's useful for customizing the drill-down actions depending on the target date and triggering view."),(0,esm.yg)("p",null,"Return null to disable drill-down actions."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--get-drilldown-view",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),getDrilldownView_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},GetDrilldownView=function GetDrilldownView(){var getDrilldownView=(0,react.useCallback)((function(targetDate,currentViewName,configuredViewNames){return"month"===currentViewName&&configuredViewNames.includes("week")?"week":null}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,getDrilldownView:getDrilldownView,localizer:mLocalizer})})};GetDrilldownView.displayName="GetDrilldownView",GetDrilldownView.storyName="getDrilldownView",GetDrilldownView.parameters=Object.assign({storySource:{source:"function GetDrilldownView() {\n  const getDrilldownView = useCallback(\n    (targetDate, currentViewName, configuredViewNames) => {\n      if (currentViewName === 'month' && configuredViewNames.includes('week'))\n        return 'week'\n\n      return null\n    },\n    []\n  )\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        getDrilldownView={getDrilldownView}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},GetDrilldownView.parameters);var __namedExportsOrder=["GetDrilldownView"];GetDrilldownView.__docgenInfo={description:"",methods:[],displayName:"GetDrilldownView"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/getDrilldownView.stories.js"]={name:"GetDrilldownView",docgenInfo:GetDrilldownView.__docgenInfo,path:"stories/props/getDrilldownView.stories.js"})},"./stories/props/getNow.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{GetNow:function(){return GetNow},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return getNow_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"getnow"},"getNow"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function () => Date")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"() => new Date()"))),(0,esm.yg)("p",null,"Determines the current date/time which is highlighted in the views."),(0,esm.yg)("p",null,"The value affects which day is shaded and which time is shown as the current time. It also affects the date used by the Today button in the toolbar."),(0,esm.yg)("p",null,"Providing a value here can be useful when you are implementing time zones using the ",(0,esm.yg)("inlineCode",{parentName:"p"},"startAccessor")," and ",(0,esm.yg)("inlineCode",{parentName:"p"},"endAccessor")," properties."),(0,esm.yg)(dist_esm.gG,{id:"props--get-now",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),getNow_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var GetNow=Template.bind({});GetNow.storyName="getNow",GetNow.args={events:events.A,getNow:function getNow(){return new Date(2015,3,13)},localizer:mLocalizer},GetNow.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},GetNow.parameters);var __namedExportsOrder=["GetNow"]},"./stories/props/length.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Length:function(){return Length},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return length_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"length"},"length"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"number")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"30"))),(0,esm.yg)("p",null,"Determines the end date from date prop in the agenda view date prop + length (in number of days) = end date."),(0,esm.yg)(dist_esm.gG,{id:"props--length",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),length_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},length:"number"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Length=Template.bind({});Length.storyName="length",Length.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.AGENDA,events:events.A,length:14,localizer:mLocalizer},Length.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Length.parameters);var __namedExportsOrder=["Length"]},"./stories/props/localizer.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Localizer:function(){return Localizer},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return localizer_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"localizer"},"localizer"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"instanceOf(DateLocalizer)")," ",(0,esm.yg)("strong",{parentName:"li"},"required"))),(0,esm.yg)("p",null,"The localizer used for ",(0,esm.yg)("strong",{parentName:"p"},"formatting dates")," and times according to the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"formats",mdxType:"LinkTo"},"formats")," and ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"culture",mdxType:"LinkTo"},"culture"),". To format buttons and messaging use the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"messages",mdxType:"LinkTo"},"messages")," prop."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"// When using `Day.js`\nimport { dayjsLocalizer } from 'react-big-calendar'\nimport dayjs from 'dayjs'\n// and, for optional time zone support\nimport timezone from 'dayjs/plugin/timezone'\n\ndayjs.extend(timezone)\n// end optional time zone support\n\n// Note that the dayjsLocalizer extends Day.js with the following plugins:\n// - IsBetween\n// - IsSameOrAfter\n// - IsSameOrBefore\n// - LocaleData\n// - LocalizedFormat\n// - MinMax\n// - UTC\n\nconst localizer = dayjsLocalizer(dayjs)\n")),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"// When using `Globalize`\nimport { globalizeLocalizer } from 'react-big-calendar'\nimport globalize from 'globalize'\n\nconst localizer = globalizeLocalizer(globalize)\n")),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"// When using `Luxon`\nimport { luxonLocalizer } from 'react-big-calendar'\nimport { DateTime, Settings } from 'luxon'\n// only use `Settings` if you require optional time zone support\nSettings.defaultZone = 'America/Los_Angeles'\n// end optional time zone support\n\n// Luxon uses the Intl API, which currently does not contain `weekInfo`\n// to determine which weekday is the start of the week by `culture`.\n// The `luxonLocalizer` defaults this to Sunday, which differs from\n// the Luxon default of Monday. The localizer requires this option\n// to change the display, and the date math for determining the\n// start of a week. Luxon uses non-zero based values for `weekday`.\nconst localizer = luxonLocalizer(DateTime, { firstDayOfWeek: 7 })\n")),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"// When using `moment`\nimport { momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n// and, for optional time zone support\nimport 'moment-timezone'\n\nmoment.tz.setDefault('America/Los_Angeles')\n// end optional time zone support\n\nconst localizer = momentLocalizer(moment)\n")),(0,esm.yg)("p",null,"See the ",(0,esm.yg)(addon_links_react.A,{kind:"examples",story:"example-5",mdxType:"LinkTo"},"Localization Example")," for another example of combining ",(0,esm.yg)("inlineCode",{parentName:"p"},"rtl"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"localizer"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"culture")," and ",(0,esm.yg)("inlineCode",{parentName:"p"},"messages"),"."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--localizer",mdxType:"Story"})),(0,esm.yg)("h2",{id:"more-information"},"More Information"),(0,esm.yg)("p",null,"The ",(0,esm.yg)("inlineCode",{parentName:"p"},"localizer")," can be used for date math in a number of ways. Look at the ",(0,esm.yg)(addon_links_react.A,{kind:"guides-localizers",mdxType:"LinkTo"},"Localizer Guide")," for more information."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),localizer_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}},decorators:[function(Story){return(0,jsx_runtime.jsx)("div",{style:{height:800},children:(0,jsx_runtime.jsx)(Story,{})})}]},Localizer=function Localizer(){var localizer=(0,react.useMemo)((function(){return(0,src.ye)(moment_default())}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:new Date(2015,3,13),events:events.A,localizer:localizer})})};Localizer.displayName="Localizer",Localizer.storyName="localizer *",Localizer.parameters=Object.assign({storySource:{source:'function Localizer() {\n  const localizer = useMemo(() => momentLocalizer(moment), [])\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={new Date(2015, 3, 13)}\n        events={demoEvents}\n        localizer={localizer}\n      />\n    </div>\n  )\n}'}},Localizer.parameters);var __namedExportsOrder=["Localizer"];Localizer.__docgenInfo={description:"",methods:[],displayName:"Localizer"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/localizer.stories.js"]={name:"Localizer",docgenInfo:Localizer.__docgenInfo,path:"stories/props/localizer.stories.js"})},"./stories/props/longPressThreshold.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LongPressThreshold:function(){return LongPressThreshold},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return longPressThreshold_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"longpressthreshold"},"longPressThreshold"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"number")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"250"))),(0,esm.yg)("p",null,'Specifies the number of miliseconds the user must press and hold on the screen for a touch to be considered a "long press." Long presses are used for time slot selection on touch devices.'),(0,esm.yg)(dist_esm.gG,{id:"props--long-press-threshold",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),longPressThreshold_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},longPressThreshold:"number"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var LongPressThreshold=Template.bind({});LongPressThreshold.storyName="longPressThreshold",LongPressThreshold.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,longPressThreshold:250},LongPressThreshold.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},LongPressThreshold.parameters);var __namedExportsOrder=["LongPressThreshold"]},"./stories/props/max.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Max:function(){return Max},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return max_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"max"},"max"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"new Date(1972, 0, 1, 23, 59, 59)"))),(0,esm.yg)("p",null,"Constrains the maximum time of the Day and Week views."),(0,esm.yg)(dist_esm.gG,{id:"props--max",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),max_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},events:{control:{type:null}},max:{control:{type:"date"}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Max=Template.bind({});Max.storyName="max",Max.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,max:new Date(1972,0,1,20,59,59)},Max.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Max.parameters);var __namedExportsOrder=["Max"]},"./stories/props/messages.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Messages:function(){return Messages},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return messages_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"messages"},"messages"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Object"))),(0,esm.yg)("p",null,"String messages used throughout the component, override to provide localizations for button text, ",(0,esm.yg)("inlineCode",{parentName:"p"},"title")," attributes and more."),(0,esm.yg)("p",null,"defaults"),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"{\n  date: 'Date',\n  time: 'Time',\n  event: 'Event',\n  allDay: 'All Day',\n  week: 'Week',\n  work_week: 'Work Week',\n  day: 'Day',\n  month: 'Month',\n  previous: 'Back',\n  next: 'Next',\n  yesterday: 'Yesterday',\n  tomorrow: 'Tomorrow',\n  today: 'Today',\n  agenda: 'Agenda',\n\n  noEventsInRange: 'There are no events in this range.',\n  /**\n   * params {total} count of remaining events \n   * params {remainingEvents} remaining events \n   * params {events} all events in day\n   */\n  showMore: (total, remainingEvents, events) => `+${total} más`,\n}\n")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--messages",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),messages_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},Messages=function Messages(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),messages:{week:"Semana",work_week:"Semana de trabajo",day:"Día",month:"Mes",previous:"Atrás",next:"Después",today:"Hoy",agenda:"El Diario",showMore:function showMore(total){return"+".concat(total," más")}}}}),[]),defaultDate=_useMemo.defaultDate,messages=_useMemo.messages;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,messages:messages})})};Messages.displayName="Messages",Messages.storyName="messages",Messages.parameters=Object.assign({storySource:{source:"function Messages() {\n  const { defaultDate, messages } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      messages: {\n        week: 'Semana',\n        work_week: 'Semana de trabajo',\n        day: 'Día',\n        month: 'Mes',\n        previous: 'Atrás',\n        next: 'Después',\n        today: 'Hoy',\n        agenda: 'El Diario',\n\n        showMore: (total) => `+${total} más`,\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        messages={messages}\n      />\n    </div>\n  )\n}"}},Messages.parameters);var __namedExportsOrder=["Messages"];Messages.__docgenInfo={description:"",methods:[],displayName:"Messages"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/messages.stories.js"]={name:"Messages",docgenInfo:Messages.__docgenInfo,path:"stories/props/messages.stories.js"})},"./stories/props/min.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Min:function(){return Min},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return min_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"min"},"min"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"new Date(1972, 0, 1, 0, 0, 0, 0)"))),(0,esm.yg)("p",null,"Constrains the minimum time of the Day and Week views."),(0,esm.yg)(dist_esm.gG,{id:"props--min",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),min_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},events:{control:{type:null}},min:{control:{type:"date"}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Min=Template.bind({});Min.storyName="min",Min.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,min:new Date(1972,0,1,8)},Min.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Min.parameters);var __namedExportsOrder=["Min"]},"./stories/props/onDoubleClickEvent.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnDoubleClickEvent:function(){return OnDoubleClickEvent},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onDoubleClickEvent_stories}});__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"ondoubleclickevent"},"onDoubleClickEvent"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (event: Object) => any"))),(0,esm.yg)("p",null,"Callback fired when a calendar event is clicked twice. (i.e.: an ",(0,esm.yg)("inlineCode",{parentName:"p"},"onDoubleClick")," handler)."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note:")," The ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," prop is ",(0,esm.yg)("em",{parentName:"p"},"not")," required for this prop to function."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Important:")," The event passed into the function is the Calendar Event, not the SyntheticEvent expected by most click handlers."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-double-click-event",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onDoubleClickEvent_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};function buildMessage(calEvent,eventName){return"[".concat(eventName,"] an 'event' selection was made with:\n  ").concat(JSON.stringify(calEvent,null,2))}var OnDoubleClickEvent=function OnDoubleClickEvent(){var clickRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==clickRef?void 0:clickRef.current)}}),[]);var onSelectEvent=(0,react.useCallback)((function(calEvent){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(buildMessage(calEvent,"onSelectEvent"))}),250)}),[]),onDoubleClickEvent=(0,react.useCallback)((function(calEvent){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(buildMessage(calEvent,"onDoubleClickEvent"))}),250)}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onDoubleClickEvent:onDoubleClickEvent,onSelectEvent:onSelectEvent})})};OnDoubleClickEvent.displayName="OnDoubleClickEvent",OnDoubleClickEvent.storyName="onDoubleClickEvent",OnDoubleClickEvent.parameters=Object.assign({storySource:{source:"function OnDoubleClickEvent() {\n  const clickRef = useRef(null)\n\n  useEffect(() => {\n    /**\n     * What Is This?\n     * This is to prevent a memory leak, in the off chance that you\n     * teardown your interface prior to the timed method being called.\n     */\n    return () => {\n      window.clearTimeout(clickRef?.current)\n    }\n  }, [])\n\n  const onSelectEvent = useCallback((calEvent) => {\n    /**\n     * Here we are waiting 250 milliseconds (use what you want) prior to firing\n     * our method. Why? Because both 'click' and 'doubleClick'\n     * would fire, in the event of a 'doubleClick'. By doing\n     * this, the 'click' handler is overridden by the 'doubleClick'\n     * action.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(calEvent, 'onSelectEvent'))\n    }, 250)\n  }, [])\n\n  const onDoubleClickEvent = useCallback((calEvent) => {\n    /**\n     * Notice our use of the same ref as above.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(calEvent, 'onDoubleClickEvent'))\n    }, 250)\n  }, [])\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onDoubleClickEvent={onDoubleClickEvent}\n        onSelectEvent={onSelectEvent}\n      />\n    </div>\n  )\n}"}},OnDoubleClickEvent.parameters);var __namedExportsOrder=["OnDoubleClickEvent"];OnDoubleClickEvent.__docgenInfo={description:"",methods:[],displayName:"OnDoubleClickEvent"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onDoubleClickEvent.stories.js"]={name:"OnDoubleClickEvent",docgenInfo:OnDoubleClickEvent.__docgenInfo,path:"stories/props/onDoubleClickEvent.stories.js"})},"./stories/props/onDrillDown.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnDrillDown:function(){return OnDrillDown},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onDrillDown_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"ondrilldown"},"onDrillDown"),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-drill-down",mdxType:"Story"})),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date) => // do something"))),(0,esm.yg)("p",null,"Callback fired when date header, or the truncated event links are clicked. When included, it will override the default drilldown behavior."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onDrillDown_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},OnDrillDown=function OnDrillDown(){var _useState=(0,react.useState)(src.Pp.MONTH),_useState2=(0,slicedToArray.A)(_useState,2),view=_useState2[0],setView=_useState2[1],_useState3=(0,react.useState)(new Date(2015,3,13)),_useState4=(0,slicedToArray.A)(_useState3,2),date=_useState4[0],setDate=_useState4[1],onNavigate=(0,react.useCallback)((function(newDate){return setDate(newDate)}),[setDate]),onView=(0,react.useCallback)((function(newView){return setView(newView)}),[setView]),onDrillDown=(0,react.useCallback)((function(newDate){setDate(newDate),setView(src.Pp.AGENDA)}),[setDate,setView]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{date:date,events:events.A,localizer:mLocalizer,onDrillDown:onDrillDown,onNavigate:onNavigate,onView:onView,view:view})})};OnDrillDown.displayName="OnDrillDown",OnDrillDown.storyName="onDrillDown",OnDrillDown.parameters=Object.assign({storySource:{source:'function OnDrillDown() {\n  const [view, setView] = useState(Views.MONTH)\n  const [date, setDate] = useState(new Date(2015, 3, 13))\n  const onNavigate = useCallback((newDate) => setDate(newDate), [setDate])\n  const onView = useCallback((newView) => setView(newView), [setView])\n  const onDrillDown = useCallback(\n    (newDate) => {\n      setDate(newDate)\n      setView(Views.AGENDA)\n    },\n    [setDate, setView]\n  )\n  return (\n    <div className="height600">\n      <Calendar\n        date={date}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onDrillDown={onDrillDown}\n        onNavigate={onNavigate}\n        onView={onView}\n        view={view}\n      />\n    </div>\n  )\n}'}},OnDrillDown.parameters);var __namedExportsOrder=["OnDrillDown"];OnDrillDown.__docgenInfo={description:"",methods:[],displayName:"OnDrillDown"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onDrillDown.stories.js"]={name:"OnDrillDown",docgenInfo:OnDrillDown.__docgenInfo,path:"stories/props/onDrillDown.stories.js"})},"./stories/props/onKeyPressEvent.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnKeyPressEvent:function(){return OnKeyPressEvent},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onKeyPressEvent_stories}});__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onkeypressevent"},"onKeyPressEvent"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (event: Object, e: SyntheticEvent) => void"))),(0,esm.yg)("p",null,"Callback fired when a focused calendar event receives a key press."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-key-press-event",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onKeyPressEvent_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};var OnKeyPressEvent=function OnKeyPressEvent(){var pressRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==pressRef?void 0:pressRef.current)}}),[]);var onKeyPressEvent=(0,react.useCallback)((function(event,keypressEvent){pressRef.current=window.setTimeout((function(){window.alert(function buildMessage(event,_ref){var altKey=_ref.altKey,ctrlKey=_ref.ctrlKey,shiftKey=_ref.shiftKey,metaKey=_ref.metaKey,key=_ref.key,prefix="";return altKey?prefix="ALT + ":ctrlKey?prefix="CTRL + ":shiftKey?prefix="SHIFT + ":metaKey&&(prefix="CMD + "),'You pressed on the "'.concat(prefix).concat(key,'" on "event":\nJSON.stringify(event, null, 2)')}(0,keypressEvent))}),250)}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,13)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onKeyPressEvent:onKeyPressEvent})})};OnKeyPressEvent.displayName="OnKeyPressEvent",OnKeyPressEvent.storyName="onKeypressEvent",OnKeyPressEvent.parameters=Object.assign({storySource:{source:'function OnKeyPressEvent() {\n  const pressRef = useRef(null)\n\n  useEffect(() => {\n    return () => {\n      // To prevent possible memory leak on unmount\n      window.clearTimeout(pressRef?.current)\n    }\n  }, [])\n\n  const onKeyPressEvent = useCallback((event, keypressEvent) => {\n    /**\n     * We delay our response to capture ctrl/shift/alt + key\n     * *Storybook will swallow some presses from it\'s own built-ins\n     */\n    pressRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(event, keypressEvent))\n    }, 250)\n  }, [])\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 13), [])\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onKeyPressEvent={onKeyPressEvent}\n      />\n    </div>\n  )\n}'}},OnKeyPressEvent.parameters);var __namedExportsOrder=["OnKeyPressEvent"];OnKeyPressEvent.__docgenInfo={description:"",methods:[],displayName:"OnKeyPressEvent"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onKeyPressEvent.stories.js"]={name:"OnKeyPressEvent",docgenInfo:OnKeyPressEvent.__docgenInfo,path:"stories/props/onKeyPressEvent.stories.js"})},"./stories/props/onNavigate.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnNavigate:function(){return OnNavigate},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onNavigate_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onnavigate"},"onNavigate"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function")),(0,esm.yg)("li",{parentName:"ul"},"controls: ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"date",mdxType:"LinkTo"},"date")),(0,esm.yg)("li",{parentName:"ul"},"example: ",(0,esm.yg)("inlineCode",{parentName:"li"},"(newDate) => setDate(newDate)"))),(0,esm.yg)("p",null,"Callback fired when the ",(0,esm.yg)("inlineCode",{parentName:"p"},"date")," value changes. When included it is used to 'control' the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"date",mdxType:"LinkTo"},"date")," prop value."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-navigate",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onNavigate_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},OnNavigate=function OnNavigate(){var _useState=(0,react.useState)(new Date(2015,3,1)),_useState2=(0,slicedToArray.A)(_useState,2),date=_useState2[0],setDate=_useState2[1],onNavigate=(0,react.useCallback)((function(newDate){return setDate(newDate)}),[setDate]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{date:date,events:events.A,localizer:mLocalizer,onNavigate:onNavigate})})};OnNavigate.displayName="OnNavigate",OnNavigate.storyName="onNavigate",OnNavigate.parameters=Object.assign({storySource:{source:'function OnNavigate() {\n  const [date, setDate] = useState(new Date(2015, 3, 1))\n\n  const onNavigate = useCallback((newDate) => setDate(newDate), [setDate])\n\n  return (\n    <div className="height600">\n      <Calendar\n        date={date}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onNavigate={onNavigate}\n      />\n    </div>\n  )\n}'}},OnNavigate.parameters);var __namedExportsOrder=["OnNavigate"];OnNavigate.__docgenInfo={description:"",methods:[],displayName:"OnNavigate"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onNavigate.stories.js"]={name:"OnNavigate",docgenInfo:OnNavigate.__docgenInfo,path:"stories/props/onNavigate.stories.js"})},"./stories/props/onRangeChange.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnRangeChange:function(){return OnRangeChange},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onRangeChange_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onrangechange"},"onRangeChange"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (range: Array [1|7] | Object {start: Date, end: Date}) => // do something"))),(0,esm.yg)("p",null,"Callback fired when the visible date range changes. Returns an Array of dates or an object with start and end dates for BUILTIN views."),(0,esm.yg)("p",null,"Custom views may return something different."),(0,esm.yg)("p",null,(0,esm.yg)("em",{parentName:"p"},"Note:")," This method is not fired on initial render. Only as the user navigates through Big Calendar."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-range-change",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onRangeChange_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};var OnRangeChange=function OnRangeChange(){var _useState=(0,react.useState)(new Date(2015,3,1)),_useState2=(0,slicedToArray.A)(_useState,2),date=_useState2[0],setDate=_useState2[1],onNavigate=(0,react.useCallback)((function(newDate){return setDate(newDate)}),[setDate]),onRangeChange=(0,react.useCallback)((function(range){window.alert(function buildMessage(range){return range?Array.isArray(range)?1===range.length?"[onRangeChange] was given an array with\n    a single item of ".concat(range[0].toLocaleString(),",\n    which only occurs within the 'day' view."):"[onRangeChange] was given an array of seven dates,\n  starting with ".concat(range[0].toLocaleString(),"\n  and ending with ").concat(range[6].toLocaleString(),".\n  This occurs when within the 'week' or 'work week' views."):"[onRangeChange] was given an object with\n    a start of ".concat(range.start.toLocaleString(),"\n    and an end of ").concat(range.end.toLocaleString(),".\n    An object with 'start' and 'end' is passed\n    when in the 'month' or 'agenda' views."):"no range"}(range))}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{date:date,events:events.A,localizer:mLocalizer,onNavigate:onNavigate,onRangeChange:onRangeChange})})};OnRangeChange.displayName="OnRangeChange",OnRangeChange.storyName="onRangeChange",OnRangeChange.parameters=Object.assign({storySource:{source:'function OnRangeChange() {\n  const [date, setDate] = useState(new Date(2015, 3, 1))\n\n  const onNavigate = useCallback((newDate) => setDate(newDate), [setDate])\n\n  const onRangeChange = useCallback((range) => {\n    window.alert(buildMessage(range))\n  }, [])\n\n  return (\n    <div className="height600">\n      <Calendar\n        date={date}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onNavigate={onNavigate}\n        onRangeChange={onRangeChange}\n      />\n    </div>\n  )\n}'}},OnRangeChange.parameters);var __namedExportsOrder=["OnRangeChange"];OnRangeChange.__docgenInfo={description:"",methods:[],displayName:"OnRangeChange"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onRangeChange.stories.js"]={name:"OnRangeChange",docgenInfo:OnRangeChange.__docgenInfo,path:"stories/props/onRangeChange.stories.js"})},"./stories/props/onSelectEvent.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnSelectEvent:function(){return OnSelectEvent},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onSelectEvent_stories}});__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onselectevent"},"onSelectEvent"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (event: Object) => any"))),(0,esm.yg)("p",null,"Callback fired when a calendar event is selected (i.e.: an ",(0,esm.yg)("inlineCode",{parentName:"p"},"onClick")," handler)."),(0,esm.yg)("p",null,"The method receives the selected event as a parameter. If using ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"resources",mdxType:"LinkTo"},"resources"),", and are in a TimeGrid view ('day' or 'week'), the ",(0,esm.yg)("inlineCode",{parentName:"p"},"event")," will have an additional ",(0,esm.yg)("inlineCode",{parentName:"p"},"sourceResource")," property containing the resource object that the event is associated with."),(0,esm.yg)("p",null,"Clicking on a ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"backgroundEvents",mdxType:"LinkTo"},"backgroundEvent")," will also fire the ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelectEvent")," callback. It will also receive the ",(0,esm.yg)("inlineCode",{parentName:"p"},"backgroundEvent")," as the ",(0,esm.yg)("inlineCode",{parentName:"p"},"event")," object, but contain a ",(0,esm.yg)("inlineCode",{parentName:"p"},"isBackgroundEvent")," property set to ",(0,esm.yg)("inlineCode",{parentName:"p"},"true"),". This will allow you to distinguish between a background event and a regular event within your ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelectEvent")," handler."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note:")," The ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," prop is ",(0,esm.yg)("em",{parentName:"p"},"not")," required for this prop to function."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Important:")," The event passed into the function is the Calendar Event, not the SyntheticEvent expected by most click handlers."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-select-event",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onSelectEvent_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};function buildMessage(calEvent,eventName){return"[".concat(eventName,"] an 'event' selection was made with:\n  ").concat(JSON.stringify(calEvent,null,2))}var OnSelectEvent=function OnSelectEvent(){var clickRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==clickRef?void 0:clickRef.current)}}),[]);var onSelectEvent=(0,react.useCallback)((function(calEvent){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(buildMessage(calEvent,"onSelectEvent"))}),250)}),[]),onDoubleClickEvent=(0,react.useCallback)((function(calEvent){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(buildMessage(calEvent,"onDoubleClickEvent"))}),250)}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onDoubleClickEvent:onDoubleClickEvent,onSelectEvent:onSelectEvent})})};OnSelectEvent.displayName="OnSelectEvent",OnSelectEvent.storyName="onSelectEvent",OnSelectEvent.parameters=Object.assign({storySource:{source:"function OnSelectEvent() {\n  const clickRef = useRef(null)\n\n  useEffect(() => {\n    /**\n     * What Is This?\n     * This is to prevent a memory leak, in the off chance that you\n     * teardown your interface prior to the timed method being called.\n     */\n    return () => {\n      window.clearTimeout(clickRef?.current)\n    }\n  }, [])\n\n  const onSelectEvent = useCallback((calEvent) => {\n    /**\n     * Here we are waiting 250 milliseconds (use what you want) prior to firing\n     * our method. Why? Because both 'click' and 'doubleClick'\n     * would fire, in the event of a 'doubleClick'. By doing\n     * this, the 'click' handler is overridden by the 'doubleClick'\n     * action.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(calEvent, 'onSelectEvent'))\n    }, 250)\n  }, [])\n\n  const onDoubleClickEvent = useCallback((calEvent) => {\n    /**\n     * Notice our use of the same ref as above.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(calEvent, 'onDoubleClickEvent'))\n    }, 250)\n  }, [])\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onDoubleClickEvent={onDoubleClickEvent}\n        onSelectEvent={onSelectEvent}\n      />\n    </div>\n  )\n}"}},OnSelectEvent.parameters);var __namedExportsOrder=["OnSelectEvent"];OnSelectEvent.__docgenInfo={description:"",methods:[],displayName:"OnSelectEvent"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onSelectEvent.stories.js"]={name:"OnSelectEvent",docgenInfo:OnSelectEvent.__docgenInfo,path:"stories/props/onSelectEvent.stories.js"})},"./stories/props/onSelectSlot.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnSelectSlot:function(){return OnSelectSlot},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onSelectSlot_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onselectslot"},"onSelectSlot"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (Object: slotInfo) => any")),(0,esm.yg)("li",{parentName:"ul"},"requires: ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable"))),(0,esm.yg)("p",null,"A callback fired when a date selection is made. Only fires when ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," is true."),(0,esm.yg)("p",null,(0,esm.yg)("em",{parentName:"p"},"Things To Know:")," When you 'doubleClick', both 'click' and 'doubleClick' will fire. Click on the 'showCode' button, at the bottom of the example below, to see how you can get around this issue."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},";(slotInfo: {\n  start: Date,\n  end: Date,\n  slots: Array<Date>,\n  action: 'select' | 'click' | 'doubleClick',\n  resourceId: ?number, // only if the calendar is resource view\n  bounds: ?{\n    // For \"select\" action\n    x: number,\n    y: number,\n    top: number,\n    right: number,\n    left: number,\n    bottom: number,\n  },\n  box: ?{\n    // For \"click\" or \"doubleClick\" actions\n    clientX: number,\n    clientY: number,\n    x: number,\n    y: number,\n  },\n}) => any\n")),(0,esm.yg)("h2",{id:"whats-the-difference"},"What's The Difference?"),(0,esm.yg)("p",null,"How is this different from ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-selecting",mdxType:"LinkTo"},"onSelecting"),"? That is a very good question. The ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelecting")," method is only available in the Time views (",(0,esm.yg)("inlineCode",{parentName:"p"},"week"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"work week"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"day"),"), whereas ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," is also available in the ",(0,esm.yg)("inlineCode",{parentName:"p"},"month")," view. The ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelecting")," method allows you to 'cancel' your selection by returning ",(0,esm.yg)("inlineCode",{parentName:"p"},"false"),". The ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," method returns a ",(0,esm.yg)("inlineCode",{parentName:"p"},"slotInfo")," object, containing a lot of additional information about your selection."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-select-slot",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onSelectSlot_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};var OnSelectSlot=function OnSelectSlot(){var clickRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==clickRef?void 0:clickRef.current)}}),[]);var onSelectSlot=(0,react.useCallback)((function(slotInfo){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(function buildMessage(slotInfo){return"[onSelectSlot] a date selection was made, passing 'slotInfo'\n  ".concat(JSON.stringify(slotInfo,null,2))}(slotInfo))}),250)}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onSelectSlot:onSelectSlot,selectable:!0})})};OnSelectSlot.displayName="OnSelectSlot",OnSelectSlot.storyName="onSelectSlot",OnSelectSlot.parameters=Object.assign({storySource:{source:"function OnSelectSlot() {\n  const clickRef = useRef(null)\n\n  useEffect(() => {\n    /**\n     * What Is This?\n     * This is to prevent a memory leak, in the off chance that you\n     * teardown your interface prior to the timed method being called.\n     */\n    return () => {\n      window.clearTimeout(clickRef?.current)\n    }\n  }, [])\n\n  const onSelectSlot = useCallback((slotInfo) => {\n    /**\n     * Here we are waiting 250 milliseconds (use what you want) prior to firing\n     * our method. Why? Because both 'click' and 'doubleClick'\n     * would fire, in the event of a 'doubleClick'. By doing\n     * this, the 'click' handler is overridden by the 'doubleClick'\n     * action.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(slotInfo))\n    }, 250)\n  }, [])\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onSelectSlot={onSelectSlot}\n        selectable\n      />\n    </div>\n  )\n}"}},OnSelectSlot.parameters);var __namedExportsOrder=["OnSelectSlot"];OnSelectSlot.__docgenInfo={description:"",methods:[],displayName:"OnSelectSlot"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onSelectSlot.stories.js"]={name:"OnSelectSlot",docgenInfo:OnSelectSlot.__docgenInfo,path:"stories/props/onSelectSlot.stories.js"})},"./stories/props/onSelecting.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnSelecting:function(){return OnSelecting},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onSelecting_stories}});__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onselecting"},"onSelecting"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"(range: Object { start: Date, end: Date, resourceId: null|string|number }) => ?boolean")),(0,esm.yg)("li",{parentName:"ul"},"requires: ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable"))),(0,esm.yg)("p",null,"Callback fired when dragging a selection in the Time views. Only fires when ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," is true."),(0,esm.yg)("p",null,"Returning ",(0,esm.yg)("inlineCode",{parentName:"p"},"false")," from the handler will prevent a selection."),(0,esm.yg)("h2",{id:"whats-the-difference"},"What's The Difference?"),(0,esm.yg)("p",null,"How is this different from ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-select-slot",mdxType:"LinkTo"},"onSelectSlot"),"? That is a very good question. The ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelecting")," method is only available in the Time views (",(0,esm.yg)("inlineCode",{parentName:"p"},"week"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"work week"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"day"),"), whereas ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," is also available in the ",(0,esm.yg)("inlineCode",{parentName:"p"},"month")," view. The ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelecting")," method allows you to 'cancel' your selection by returning ",(0,esm.yg)("inlineCode",{parentName:"p"},"false"),". The ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," method returns a ",(0,esm.yg)("inlineCode",{parentName:"p"},"slotInfo")," object, containing a lot of additional information about your selection."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-selecting",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onSelecting_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};function buildMessage(range,eventName){return"[".concat(eventName,"] a date range selection was made, passing:\n  ").concat(JSON.stringify(range,null,2))}var OnSelecting=function OnSelecting(){var clickRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==clickRef?void 0:clickRef.current)}}),[]);var onSelectSlot=(0,react.useCallback)((function(slotInfo){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(buildMessage(slotInfo,"onSelectSlot"))}),250)}),[]),onSelecting=(0,react.useCallback)((function(range){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(buildMessage(range,"onSelecting"))}),250)}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,onSelecting:onSelecting,onSelectSlot:onSelectSlot,selectable:!0})})};OnSelecting.displayName="OnSelecting",OnSelecting.storyName="onSelecting",OnSelecting.parameters=Object.assign({storySource:{source:"function OnSelecting() {\n  const clickRef = useRef(null)\n\n  useEffect(() => {\n    /**\n     * What Is This?\n     * This is to prevent a memory leak, in the off chance that you\n     * teardown your interface prior to the timed method being called.\n     */\n    return () => {\n      window.clearTimeout(clickRef?.current)\n    }\n  }, [])\n\n  const onSelectSlot = useCallback((slotInfo) => {\n    /**\n     * Here we are waiting 250 milliseconds (use what you want) prior to firing\n     * our method. Why? Because both 'click' and 'doubleClick'\n     * would fire, in the event of a 'doubleClick'. By doing\n     * this, the 'click' handler is overridden by the 'doubleClick'\n     * action.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(slotInfo, 'onSelectSlot'))\n    }, 250)\n  }, [])\n\n  const onSelecting = useCallback((range) => {\n    /**\n     * Here we are waiting 250 milliseconds (use what you want) prior to firing\n     * our method. Why? Because both 'click' and 'doubleClick'\n     * would fire, in the event of a 'doubleClick'. By doing\n     * this, the 'click' handler is overridden by the 'doubleClick'\n     * action.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(range, 'onSelecting'))\n    }, 250)\n  }, [])\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onSelecting={onSelecting}\n        onSelectSlot={onSelectSlot}\n        selectable\n      />\n    </div>\n  )\n}"}},OnSelecting.parameters);var __namedExportsOrder=["OnSelecting"];OnSelecting.__docgenInfo={description:"",methods:[],displayName:"OnSelecting"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onSelecting.stories.js"]={name:"OnSelecting",docgenInfo:OnSelecting.__docgenInfo,path:"stories/props/onSelecting.stories.js"})},"./stories/props/onShowMore.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnShowMore:function(){return OnShowMore},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onShowMore_stories}});__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onshowmore"},"onShowMore"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (events: Array[event: Object], date: Date) => any"))),(0,esm.yg)("p",null,"Callback fired when a +{count} more is clicked. Receives ",(0,esm.yg)("strong",{parentName:"p"},"all")," of the ",(0,esm.yg)("inlineCode",{parentName:"p"},"events")," for the ",(0,esm.yg)("inlineCode",{parentName:"p"},"date")," on which it was selected."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-show-more",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onShowMore_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};var OnShowMore=function OnShowMore(){var onShowMore=(0,react.useCallback)((function(events,date){return window.alert(function buildMessage(calEvents,date){return"[onShowMore] received ".concat(calEvents.length," for ").concat(date.toLocaleDateString())}(events,date))}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onShowMore:onShowMore})})};OnShowMore.displayName="OnShowMore",OnShowMore.storyName="onShowMore",OnShowMore.parameters=Object.assign({storySource:{source:'function OnShowMore() {\n  const onShowMore = useCallback(\n    (events, date) => window.alert(buildMessage(events, date)),\n    []\n  )\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onShowMore={onShowMore}\n      />\n    </div>\n  )\n}'}},OnShowMore.parameters);var __namedExportsOrder=["OnShowMore"];OnShowMore.__docgenInfo={description:"",methods:[],displayName:"OnShowMore"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onShowMore.stories.js"]={name:"OnShowMore",docgenInfo:OnShowMore.__docgenInfo,path:"stories/props/onShowMore.stories.js"})},"./stories/props/onView.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnView:function(){return OnView},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onView_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onview"},"onView"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: 'function'"),(0,esm.yg)("li",{parentName:"ul"},"controls: ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"view",mdxType:"LinkTo"},"view")),(0,esm.yg)("li",{parentName:"ul"},"example: ",(0,esm.yg)("inlineCode",{parentName:"li"},"(newView) => setView(newView)"))),(0,esm.yg)("p",null,"Callback fired when the ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")," value changes. When included it is used to 'control' the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"view",mdxType:"LinkTo"},"view")," prop value."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-view",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onView_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},OnView=function OnView(){var _useState=(0,react.useState)(new Date(2015,3,1)),_useState2=(0,slicedToArray.A)(_useState,2),date=_useState2[0],setDate=_useState2[1],_useState3=(0,react.useState)(src.Pp.WEEK),_useState4=(0,slicedToArray.A)(_useState3,2),view=_useState4[0],setView=_useState4[1],onNavigate=(0,react.useCallback)((function(newDate){return setDate(newDate)}),[setDate]),onView=(0,react.useCallback)((function(newView){return setView(newView)}),[setView]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{date:date,events:events.A,localizer:mLocalizer,onNavigate:onNavigate,onView:onView,view:view})})};OnView.displayName="OnView",OnView.storyName="onView",OnView.parameters=Object.assign({storySource:{source:'function OnView() {\n  const [date, setDate] = useState(new Date(2015, 3, 1))\n  const [view, setView] = useState(Views.WEEK)\n\n  const onNavigate = useCallback((newDate) => setDate(newDate), [setDate])\n  const onView = useCallback((newView) => setView(newView), [setView])\n\n  return (\n    <div className="height600">\n      <Calendar\n        date={date}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onNavigate={onNavigate}\n        onView={onView}\n        view={view}\n      />\n    </div>\n  )\n}'}},OnView.parameters);var __namedExportsOrder=["OnView"];OnView.__docgenInfo={description:"",methods:[],displayName:"OnView"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onView.stories.js"]={name:"OnView",docgenInfo:OnView.__docgenInfo,path:"stories/props/onView.stories.js"})},"./stories/props/popup.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Popup:function(){return Popup},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return popup_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"popup"},"popup"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"true"))),(0,esm.yg)("p",null,'Show truncated events in an overlay when you click the "+',(0,esm.yg)("em",{parentName:"p"},"x"),' more" link.'),(0,esm.yg)(dist_esm.gG,{id:"props--popup",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),popup_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},popup:"boolean"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Popup=Template.bind({});Popup.storyName="popup",Popup.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,popup:!0},Popup.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Popup.parameters);var __namedExportsOrder=["Popup"]},"./stories/props/popupOffset.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{PopupOffset:function(){return PopupOffset},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return popupOffset_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"popupoffset"},"popupOffset"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"number|shape {x: number, y: number}"))),(0,esm.yg)("p",null,'Distance in pixels, from the edges of the viewport, the "show more" overlay should be positioned.'),(0,esm.yg)(dist_esm.gG,{id:"props--popup-offset",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),popupOffset_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},popup:"boolean"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var PopupOffset=Template.bind({});PopupOffset.storyName="popupOffset",PopupOffset.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,popup:!0,popupOffset:{x:30,y:20}},PopupOffset.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},PopupOffset.parameters);var __namedExportsOrder=["PopupOffset"]},"./stories/props/resourceGroupingLayout.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResourceGroupingLayout:function(){return ResourceGroupingLayout},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resourceGroupingLayout_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.flat-map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.unscopables.flat-map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"resourcegroupinglayout"},"resourceGroupingLayout"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: 'false'")),(0,esm.yg)("p",null,"Determines whether grouped resources should be displayed in a layout that organizes them from Resource > Day to Day > Resource."),(0,esm.yg)("p",null,"For example"),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-md"},"resourceGroupingLayout={false}\nResource 1\n  Day 1\n    Event 1\n    Event 2\n  Day 2\n    Event 3\n    Event 4\nResource 2\n  Day 3\n    Event 5\n    Event 6\n  Day 4\n    Event 7\n    Event 8\n\nresourceGroupingLayout={true}\nDay 1\n  Resource 1\n    Event 1\n    Event 2\n  Resource 2\n    Event 3\n    Event 4\nDay 2\n  Resource 1\n    Event 5\n    Event 6\n  Resource 2\n    Event 7\n    Event 8\n")),(0,esm.yg)(dist_esm.gG,{id:"props--resource-grouping-layout",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),resourceGroupingLayout_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var resources=[{resourceId:1,resourceTitle:"Board room"},{resourceId:2,resourceTitle:"Training room"},{resourceId:3,resourceTitle:"Meeting room 1"},{resourceId:4,resourceTitle:"Meeting room 2"}],eventId=0,events=Array.from({length:20},(function(_,k){return k})).flatMap((function(i){var currentResource=resources[i%resources.length],dayDiff=i%7;return Array.from({length:5},(function(_,j){return{id:eventId++,title:"Event ".concat(i+j," _ ").concat(currentResource.resourceTitle),start:new Date(2018,0,29+dayDiff,9+j%4,0,0),end:new Date(2018,0,29+dayDiff,11+j%4,0,0),resourceId:currentResource.resourceId}}))})),ResourceGroupingLayout=Template.bind({});ResourceGroupingLayout.storyName="resourceGroupingLayout",ResourceGroupingLayout.args=Object.assign({},storyDefaults._,{defaultDate:new Date(2018,0,29),resourceGroupingLayout:!0,resourceIdAccessor:"resourceId",resourceTitleAccessor:"resourceTitle",resources:resources,events:events}),ResourceGroupingLayout.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ResourceGroupingLayout.parameters);var __namedExportsOrder=["ResourceGroupingLayout"]},"./stories/props/resourceIdAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResourceIdAccessor:function(){return ResourceIdAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resourceIdAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"resourceidaccessor"},"resourceIdAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (resource: Object) => string | number // must be unique"))),(0,esm.yg)("p",null,"Provides a unique identifier, or an array of unique identifiers, for each resource in the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"resources",mdxType:"LinkTo"},"resources")," array"),(0,esm.yg)(dist_esm.gG,{id:"props--resource-id-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),resourceIdAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var ResourceIdAccessor=Template.bind({});ResourceIdAccessor.storyName="resourceIdAccessor",ResourceIdAccessor.args=storyDefaults._,ResourceIdAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ResourceIdAccessor.parameters);var __namedExportsOrder=["ResourceIdAccessor"]},"./stories/props/resourceTitleAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResourceTitleAccessor:function(){return ResourceTitleAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resourceTitleAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"resourcetitleaccessor"},"resourceTitleAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (resource: Object) => string"))),(0,esm.yg)("p",null,"Provides a human readable name for the resource object, used in headers."),(0,esm.yg)(dist_esm.gG,{id:"props--resource-title-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),resourceTitleAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var ResourceTitleAccessor=Template.bind({});ResourceTitleAccessor.storyName="resourceTitleAccessor",ResourceTitleAccessor.args=storyDefaults._,ResourceTitleAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ResourceTitleAccessor.parameters);var __namedExportsOrder=["ResourceTitleAccessor"]},"./stories/props/resources.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Resources:function(){return Resources},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resources_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),resourceEvents=__webpack_require__("./stories/resources/resourceEvents.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"resources"},"resources"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"arrayOf(Resource)"))),(0,esm.yg)("p",null,"An array of resource objects that map events to a specific resource. Resource objects, like events, can be any shape or have any properties, but should be uniquly identifiable via the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"resource-id-accessor",mdxType:"LinkTo"},"resourceIdAccessor"),', as well as a "title" or name as provided by the ',(0,esm.yg)(addon_links_react.A,{kind:"props",story:"resource-title-accessor",mdxType:"LinkTo"},"resourceTitleAccessor")," prop."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"Resource {\n  id: string | number, // must be unique\n  title: string\n}\n")),(0,esm.yg)(dist_esm.gG,{id:"props--resources",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),resources_stories_resourceEvents=resourceEvents.A.events,resources=resourceEvents.A.list,mLocalizer=(0,src.ye)(moment_default()),resources_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Resources=Template.bind({});Resources.storyName="resources",Resources.args={defaultDate:new Date(2015,3,4),defaultView:src.Pp.DAY,events:resources_stories_resourceEvents,localizer:mLocalizer,resources:resources},Resources.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Resources.parameters);var __namedExportsOrder=["Resources"]},"./stories/props/rtl.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{RightToLeft:function(){return RightToLeft},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return rtl_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"rtl"},"rtl"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"false"))),(0,esm.yg)("p",null,"Switch the calendar to a right-to-left read direction. Best if used in conjunction with your ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"localizer")," and ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"messages",mdxType:"LinkTo"},"messages")," props."),(0,esm.yg)("p",null,"See the ",(0,esm.yg)(addon_links_react.A,{kind:"examples",story:"example-5",mdxType:"LinkTo"},"Localization Example")," for another example of combining ",(0,esm.yg)("inlineCode",{parentName:"p"},"rtl"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"localizer"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"culture")," and ",(0,esm.yg)("inlineCode",{parentName:"p"},"messages"),"."),(0,esm.yg)(dist_esm.gG,{id:"props--right-to-left",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),rtl_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},rtl:"boolean"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var RightToLeft=Template.bind({});RightToLeft.storyName="rtl",RightToLeft.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,rtl:!0,messages:{week:"أسبوع",work_week:"أسبوع العمل",day:"يوم",month:"شهر",previous:"سابق",next:"التالي",today:"اليوم",agenda:"جدول أعمال",showMore:function showMore(total){return"+".concat(total," إضافي")}}},RightToLeft.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},RightToLeft.parameters);var __namedExportsOrder=["RightToLeft"]},"./stories/props/scrollToTime.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ScrollToTime:function(){return ScrollToTime},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return scrollToTime_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"scrolltotime"},"scrollToTime"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"new Date()"))),(0,esm.yg)("p",null,"Determines how far down the scroll pane is initially scrolled down."),(0,esm.yg)(dist_esm.gG,{id:"props--scroll-to-time",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),scrollToTime_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},events:{control:{type:null}},scrollToTime:{control:{type:"date"}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var ScrollToTime=Template.bind({});ScrollToTime.storyName="scrollToTime",ScrollToTime.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,scrollToTime:new Date(1972,0,1,22)},ScrollToTime.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ScrollToTime.parameters);var __namedExportsOrder=["ScrollToTime"]},"./stories/props/selectable.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Selectable:function(){return Selectable},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return selectable_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"selectable"},"selectable"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean | 'ignoreEvents'"))),(0,esm.yg)("p",null,"Allows mouse selection of ranges of dates/times."),(0,esm.yg)("p",null,"The 'ignoreEvents' option prevents selection code from running when a drag begins over an event. Useful when you want custom event click or drag logic"),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--selectable",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),selectable_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};var Selectable=function Selectable(){var clickRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==clickRef?void 0:clickRef.current)}}),[]);var onSelectSlot=(0,react.useCallback)((function(slotInfo){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(function buildMessage(slotInfo){return"[onSelectSlot] a date selection was made, passing 'slotInfo'\n  ".concat(JSON.stringify(slotInfo,null,2))}(slotInfo))}),250)}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onSelectSlot:onSelectSlot,selectable:!0})})};Selectable.displayName="Selectable",Selectable.storyName="selectable",Selectable.parameters=Object.assign({storySource:{source:"function Selectable() {\n  const clickRef = useRef(null)\n\n  useEffect(() => {\n    /**\n     * What Is This?\n     * This is to prevent a memory leak, in the off chance that you\n     * teardown your interface prior to the timed method being called.\n     */\n    return () => {\n      window.clearTimeout(clickRef?.current)\n    }\n  }, [])\n\n  const onSelectSlot = useCallback((slotInfo) => {\n    /**\n     * Here we are waiting 250 milliseconds prior to firing\n     * our method. Why? Because both 'click' and 'doubleClick'\n     * would fire, in the event of a 'doubleClick'. By doing\n     * this, the 'click' handler is overridden by the 'doubleClick'\n     * action.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(slotInfo))\n    }, 250)\n  }, [])\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onSelectSlot={onSelectSlot}\n        selectable\n      />\n    </div>\n  )\n}"}},Selectable.parameters);var __namedExportsOrder=["Selectable"];Selectable.__docgenInfo={description:"",methods:[],displayName:"Selectable"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/selectable.stories.js"]={name:"Selectable",docgenInfo:Selectable.__docgenInfo,path:"stories/props/selectable.stories.js"})},"./stories/props/selected.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Selected:function(){return Selected},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return selected_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"selected"},"selected"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Event: Object"))),(0,esm.yg)("p",null,"The selected event, if any. By default, Big Calendar 'controls' the ",(0,esm.yg)("inlineCode",{parentName:"p"},"selected")," (highlighted) event in the display. You can use this prop to control which event is highlighted. The ",(0,esm.yg)("inlineCode",{parentName:"p"},"selected")," event must be a object reference to the event within the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events")," array."),(0,esm.yg)("p",null,"Often used in conjunction with ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-select-event",mdxType:"LinkTo"},"OnSelectEvent")," and/or ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-double-click-event",mdxType:"LinkTo"},"onDoubleClickEvent"),"."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--selected",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),selected_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},Selected=function Selected(){var _useState=(0,react.useState)((function(){return events.A.find((function(event){return"Itaewon Halloween Meeting"===event.title}))})),_useState2=(0,slicedToArray.A)(_useState,2),selected=_useState2[0],setSelected=_useState2[1],clickRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==clickRef?void 0:clickRef.current)}}),[]);var onSelectEvent=(0,react.useCallback)((function(calEvent){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){setSelected(calEvent)}),250)}),[setSelected]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onSelectEvent:onSelectEvent,selected:selected})})};Selected.displayName="Selected",Selected.storyName="selected",Selected.parameters=Object.assign({storySource:{source:"function Selected() {\n  const [selected, setSelected] = useState(() => {\n    // let's make an initial selection\n    return demoEvents.find(\n      (event) => event.title === 'Itaewon Halloween Meeting'\n    )\n  })\n  const clickRef = useRef(null)\n\n  useEffect(() => {\n    /**\n     * What Is This?\n     * This is to prevent a memory leak, in the off chance that you\n     * teardown your interface prior to the timed method being called.\n     */\n    return () => {\n      window.clearTimeout(clickRef?.current)\n    }\n  }, [])\n\n  const onSelectEvent = useCallback(\n    (calEvent) => {\n      /**\n       * Here we are waiting 250 milliseconds (use what you want) prior to firing\n       * our method. Why? Because both 'click' and 'doubleClick'\n       * would fire, in the event of a 'doubleClick'. By doing\n       * this, the 'click' handler is overridden by the 'doubleClick'\n       * action.\n       */\n      window.clearTimeout(clickRef?.current)\n      clickRef.current = window.setTimeout(() => {\n        setSelected(calEvent)\n      }, 250)\n    },\n    [setSelected]\n  )\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onSelectEvent={onSelectEvent}\n        selected={selected}\n      />\n    </div>\n  )\n}"}},Selected.parameters);var __namedExportsOrder=["Selected"];Selected.__docgenInfo={description:"",methods:[],displayName:"Selected"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/selected.stories.js"]={name:"Selected",docgenInfo:Selected.__docgenInfo,path:"stories/props/selected.stories.js"})},"./stories/props/showAllEvents.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ShowAllEvents:function(){return ShowAllEvents},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return showAllEvents_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"showallevents"},"showAllEvents"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"false"))),(0,esm.yg)("p",null,"Displays all events on the month view instead of having some hidden behind +{count} more. This will cause the rows in the month view to be scrollable if the number of events exceed the height of the row."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--show-all-events",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),showAllEvents_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},showAllEvents:"boolean"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var ShowAllEvents=Template.bind({});ShowAllEvents.storyName="showAllEvents",ShowAllEvents.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,showAllEvents:!0},ShowAllEvents.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ShowAllEvents.parameters);var __namedExportsOrder=["ShowAllEvents"]},"./stories/props/showMultiDayTimes.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ShowMultiDayTimes:function(){return ShowMultiDayTimes},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return showMultiDayTimes_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"showmultidaytimes"},"showMultiDayTimes"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"false"))),(0,esm.yg)("p",null,"Support to show multi-day events with specific start and end times in the main time grid (rather than in the all day header)."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note: This may cause calendars with several events to look very busy in the week and day views.")),(0,esm.yg)(dist_esm.gG,{id:"props--show-multi-day-times",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),showMultiDayTimes_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},max:{control:{type:null}},showMultiDayTimes:"boolean"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var ShowMultiDayTimes=Template.bind({});ShowMultiDayTimes.storyName="showMultiDayTimes",ShowMultiDayTimes.args={defaultDate:new Date(2016,11,4),defaultView:src.Pp.WEEK,events:[{title:"start of the week",start:new Date(2016,11,4,15),end:new Date(2016,11,5,3)},{title:"single day longer than max",start:new Date(2016,11,4,15),end:new Date(2016,11,4,23,30)},{title:"end of the week",start:new Date(2016,11,3),end:new Date(2016,11,3)},{title:"middle",start:new Date(2016,11,6),end:new Date(2016,11,6)}],localizer:mLocalizer,max:moment_default()().endOf("day").add(-1,"hours").toDate(),showMultiDayTimes:!0},ShowMultiDayTimes.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ShowMultiDayTimes.parameters);var __namedExportsOrder=["ShowMultiDayTimes"]},"./stories/props/slotGroupPropGetter.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{SlotGroupPropGetter:function(){return SlotGroupPropGetter},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return slotGroupPropGetter_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"slotgrouppropgetter"},"slotGroupPropGetter"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (group: Date[]) => { style?: Object }"))),(0,esm.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the time-slot node."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Caution! Styles that change layout or position may break the calendar in unexpected ways.")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--slot-group-prop-getter",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;__webpack_require__("./stories/resources/propGetter.scss");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),slotGroupPropGetter_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},SlotGroupPropGetter=function SlotGroupPropGetter(){var slotGroupPropGetter=(0,react.useCallback)((function(){return{style:{minHeight:60}}}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,13)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,slotGroupPropGetter:slotGroupPropGetter,events:events.A,localizer:mLocalizer})})};SlotGroupPropGetter.displayName="SlotGroupPropGetter",SlotGroupPropGetter.storyName="slotGroupPropGetter",SlotGroupPropGetter.parameters=Object.assign({storySource:{source:'function SlotGroupPropGetter() {\n  const slotGroupPropGetter = useCallback(\n    () => ({\n      style: {\n        minHeight: 60,\n      },\n    }),\n    []\n  )\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 13), [])\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        slotGroupPropGetter={slotGroupPropGetter}\n        events={demoEvents}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}'}},SlotGroupPropGetter.parameters);var __namedExportsOrder=["SlotGroupPropGetter"];SlotGroupPropGetter.__docgenInfo={description:"",methods:[],displayName:"SlotGroupPropGetter"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/slotGroupPropGetter.stories.js"]={name:"SlotGroupPropGetter",docgenInfo:SlotGroupPropGetter.__docgenInfo,path:"stories/props/slotGroupPropGetter.stories.js"})},"./stories/props/slotPropGetter.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{SlotPropGetter:function(){return SlotPropGetter},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return slotPropGetter_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"slotpropgetter"},"slotPropGetter"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date) => {className?: string, style?: Object}"))),(0,esm.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the the time-slot node."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Caution!")," Styles that change layout or position may break the calendar in unexpected ways."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--slot-prop-getter",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;__webpack_require__("./stories/resources/propGetter.scss");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),slotPropGetter_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},SlotPropGetter=function SlotPropGetter(){var slotPropGetter=(0,react.useCallback)((function(date){return Object.assign({className:"slotDefault"},moment_default()(date).hour()<8&&{style:{backgroundColor:"powderblue",color:"black"}},moment_default()(date).hour()>12&&{style:{backgroundColor:"darkgreen",color:"white"}})}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,13)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,slotPropGetter:slotPropGetter,events:events.A,localizer:mLocalizer})})};SlotPropGetter.displayName="SlotPropGetter",SlotPropGetter.storyName="slotPropGetter",SlotPropGetter.parameters=Object.assign({storySource:{source:"function SlotPropGetter() {\n  const slotPropGetter = useCallback(\n    (date) => ({\n      className: 'slotDefault',\n      ...(moment(date).hour() < 8 && {\n        style: {\n          backgroundColor: 'powderblue',\n          color: 'black',\n        },\n      }),\n      ...(moment(date).hour() > 12 && {\n        style: {\n          backgroundColor: 'darkgreen',\n          color: 'white',\n        },\n      }),\n    }),\n    []\n  )\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 13), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        slotPropGetter={slotPropGetter}\n        events={demoEvents}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},SlotPropGetter.parameters);var __namedExportsOrder=["SlotPropGetter"];SlotPropGetter.__docgenInfo={description:"",methods:[],displayName:"SlotPropGetter"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/slotPropGetter.stories.js"]={name:"SlotPropGetter",docgenInfo:SlotPropGetter.__docgenInfo,path:"stories/props/slotPropGetter.stories.js"})},"./stories/props/startAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{StartAccessor:function(){return StartAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return startAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"startaccessor"},"startAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => Date")),(0,esm.yg)("li",{parentName:"ul"},"default: 'start'")),(0,esm.yg)("p",null,"The start date/time of the event. Must resolve to a JavaScript ",(0,esm.yg)("inlineCode",{parentName:"p"},"Date")," object."),(0,esm.yg)(dist_esm.gG,{id:"props--start-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),startAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var StartAccessor=Template.bind({});StartAccessor.storyName="startAccessor",StartAccessor.args=storyDefaults.o,StartAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},StartAccessor.parameters);var __namedExportsOrder=["StartAccessor"]},"./stories/props/step.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Step:function(){return Step},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return step_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"step"},"step"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"number")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"30"))),(0,esm.yg)("p",null,"Determines the selectable time increments in week and day views"),(0,esm.yg)(dist_esm.gG,{id:"props--step",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),step_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},step:"number"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Step=Template.bind({});Step.storyName="step",Step.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,step:15},Step.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Step.parameters);var __namedExportsOrder=["Step"]},"./stories/props/timeslots.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Timeslots:function(){return Timeslots},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return timeslots_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"timeslots"},"timeslots"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"number"))),(0,esm.yg)("p",null,'The number of slots per "section" in the time grid views. Adjust with ',(0,esm.yg)(addon_links_react.A,{kind:"props",story:"step",mdxType:"LinkTo"},"step")," to change the default of 1 hour long groups, with 30 minute slots."),(0,esm.yg)(dist_esm.gG,{id:"props--timeslots",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),timeslots_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},step:"number",timeslots:"number"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Timeslots=Template.bind({});Timeslots.storyName="timeslots",Timeslots.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,step:15,timeslots:4},Timeslots.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Timeslots.parameters);var __namedExportsOrder=["Timeslots"]},"./stories/props/titleAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TitleAccessor:function(){return TitleAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return titleAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"titleaccessor"},"titleAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => string")),(0,esm.yg)("li",{parentName:"ul"},"default: 'title'")),(0,esm.yg)("p",null,"Accessor for the event title, used to display event information. Should resolve to a ",(0,esm.yg)("inlineCode",{parentName:"p"},"renderable")," value."),(0,esm.yg)(dist_esm.gG,{id:"props--title-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),titleAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var TitleAccessor=Template.bind({});TitleAccessor.storyName="titleAccessor",TitleAccessor.args=storyDefaults.o,TitleAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},TitleAccessor.parameters);var __namedExportsOrder=["TitleAccessor"]},"./stories/props/toolbar.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Toolbar:function(){return Toolbar},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return toolbar_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"toolbar"},"toolbar"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"true"))),(0,esm.yg)("p",null,"Determines whether the toolbar is displayed"),(0,esm.yg)(dist_esm.gG,{id:"props--toolbar",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),toolbar_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},toolbar:"boolean"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Toolbar=Template.bind({});Toolbar.storyName="toolbar",Toolbar.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,toolbar:!0},Toolbar.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Toolbar.parameters);var __namedExportsOrder=["Toolbar"]},"./stories/props/tooltipAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TooltipAccessor:function(){return TooltipAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return tooltipAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"tooltipaccessor"},"tooltipAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => string")),(0,esm.yg)("li",{parentName:"ul"},"default: 'title'")),(0,esm.yg)("p",null,"Accessor for the event tooltip, used to display event information. Should resolve to a ",(0,esm.yg)("inlineCode",{parentName:"p"},"renderable")," value. Removes the tooltip if null."),(0,esm.yg)(dist_esm.gG,{id:"props--tooltip-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),tooltipAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var TooltipAccessor=Template.bind({});TooltipAccessor.storyName="tooltipAccessor",TooltipAccessor.args=storyDefaults.o,TooltipAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},TooltipAccessor.parameters);var __namedExportsOrder=["TooltipAccessor"]},"./stories/props/view.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{View:function(){return View},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return view_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"view"},"view"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Views.MONTH (month|week|work_week|day|agenda)")),(0,esm.yg)("li",{parentName:"ul"},"controlled by: ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-view",mdxType:"LinkTo"},"onView"))),(0,esm.yg)("p",null,"The current view value of the calendar. Determines the visible 'view'.\nIf ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")," is omitted then it is defaulted to 'month'."),(0,esm.yg)("p",null,"This is a controllable prop, when using ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-view",mdxType:"LinkTo"},"onView")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--view",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),view_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},View=function View(){var _useState=(0,react.useState)(new Date(2015,3,1)),_useState2=(0,slicedToArray.A)(_useState,2),date=_useState2[0],setDate=_useState2[1],_useState3=(0,react.useState)(src.Pp.WEEK),_useState4=(0,slicedToArray.A)(_useState3,2),view=_useState4[0],setView=_useState4[1],onNavigate=(0,react.useCallback)((function(newDate){return setDate(newDate)}),[setDate]),onView=(0,react.useCallback)((function(newView){return setView(newView)}),[setView]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{date:date,events:events.A,localizer:mLocalizer,onNavigate:onNavigate,onView:onView,view:view})})};View.displayName="View",View.storyName="view",View.parameters=Object.assign({storySource:{source:'function View() {\n  const [date, setDate] = useState(new Date(2015, 3, 1))\n  const [view, setView] = useState(Views.WEEK)\n\n  const onNavigate = useCallback((newDate) => setDate(newDate), [setDate])\n  const onView = useCallback((newView) => setView(newView), [setView])\n\n  return (\n    <div className="height600">\n      <Calendar\n        date={date}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onNavigate={onNavigate}\n        onView={onView}\n        view={view}\n      />\n    </div>\n  )\n}'}},View.parameters);var __namedExportsOrder=["View"];View.__docgenInfo={description:"",methods:[],displayName:"View"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/view.stories.js"]={name:"View",docgenInfo:View.__docgenInfo,path:"stories/props/view.stories.js"})},"./stories/props/views.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CalViews:function(){return CalViews},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return views_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"views"},"views"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Views ('month'|'week'|'work_week'|'day'|'agenda')")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"[views.MONTH, views.WEEK, views.DAY, views.AGENDA]"))),(0,esm.yg)("p",null,"An array of built-in view names to allow the calendar to display. accepts either an array of builtin view names,"),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"views={['month', 'day', 'agenda']}\n")),(0,esm.yg)("p",null,"or an object hash of the view name and the component (or boolean for builtin)."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"views={{\n  month: true,\n  week: false,\n  myweek: WorkWeekViewComponent,\n}}\n")),(0,esm.yg)("p",null,"Custom views can be any React component, that implements the following interface:"),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"interface View {\n  static title(date: Date, { formats: DateFormat[], culture: string?, ...props }): string\n  static navigate(date: Date, action: 'PREV' | 'NEXT' | 'DATE'): Date\n}\n")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--cal-views",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),views_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},CalViews=function CalViews(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),views:[src.Pp.MONTH,src.Pp.DAY,src.Pp.AGENDA]}}),[]),defaultDate=_useMemo.defaultDate,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,views:views})})};CalViews.displayName="CalViews",CalViews.storyName="views",CalViews.parameters=Object.assign({storySource:{source:'function CalViews() {\n  const { defaultDate, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 1),\n      views: [Views.MONTH, Views.DAY, Views.AGENDA],\n    }),\n    []\n  )\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}'}},CalViews.parameters);var __namedExportsOrder=["CalViews"];CalViews.__docgenInfo={description:"",methods:[],displayName:"CalViews"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/views.stories.js"]={name:"CalViews",docgenInfo:CalViews.__docgenInfo,path:"stories/props/views.stories.js"})},"./src/BackgroundWrapper.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var _NoopWrapper__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/NoopWrapper.js");__webpack_exports__.A=_NoopWrapper__WEBPACK_IMPORTED_MODULE_0__.A},"./src/DateContentRow.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return src_DateContentRow}});var classCallCheck=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),createClass=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),callSuper=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/callSuper.js"),inherits=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),clsx_m=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),height=__webpack_require__("./node_modules/dom-helpers/esm/height.js"),querySelectorAll=__webpack_require__("./node_modules/dom-helpers/esm/querySelectorAll.js"),helpers=__webpack_require__("./src/utils/helpers.js"),selection=__webpack_require__("./src/utils/selection.js"),Selection=__webpack_require__("./src/Selection.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),BackgroundCells=function(_React$Component){function BackgroundCells(props,context){var _this;return(0,classCallCheck.default)(this,BackgroundCells),(_this=(0,callSuper.default)(this,BackgroundCells,[props,context])).state={selecting:!1},_this.containerRef=(0,react.createRef)(),_this}return(0,inherits.default)(BackgroundCells,_React$Component),(0,createClass.default)(BackgroundCells,[{key:"componentDidMount",value:function componentDidMount(){this.props.selectable&&this._selectable()}},{key:"componentWillUnmount",value:function componentWillUnmount(){this._teardownSelectable()}},{key:"componentDidUpdate",value:function componentDidUpdate(prevProps){!prevProps.selectable&&this.props.selectable&&this._selectable(),prevProps.selectable&&!this.props.selectable&&this._teardownSelectable()}},{key:"render",value:function render(){var _this$props=this.props,range=_this$props.range,getNow=_this$props.getNow,getters=_this$props.getters,currentDate=_this$props.date,Wrapper=_this$props.components.dateCellWrapper,localizer=_this$props.localizer,_this$state=this.state,selecting=_this$state.selecting,startIdx=_this$state.startIdx,endIdx=_this$state.endIdx,current=getNow();return(0,jsx_runtime.jsx)("div",{className:"rbc-row-bg",ref:this.containerRef,children:range.map((function(date,index){var selected=selecting&&index>=startIdx&&index<=endIdx,_getters$dayProp=getters.dayProp(date),className=_getters$dayProp.className,style=_getters$dayProp.style;return(0,jsx_runtime.jsx)(Wrapper,{value:date,range:range,children:(0,jsx_runtime.jsx)("div",{style:style,className:(0,clsx_m.A)("rbc-day-bg",className,selected&&"rbc-selected-cell",localizer.isSameDate(date,current)&&"rbc-today",currentDate&&localizer.neq(currentDate,date,"month")&&"rbc-off-range-bg")})},index)}))})}},{key:"_selectable",value:function _selectable(){var _this2=this,node=this.containerRef.current,selector=this._selector=new Selection.Ay(this.props.container,{longPressThreshold:this.props.longPressThreshold}),selectorClicksHandler=function selectorClicksHandler(point,actionType){if(!(0,Selection.xH)(node,point)&&!(0,Selection.fN)(node,point)){var rowBox=(0,Selection.rF)(node),_this2$props=_this2.props,range=_this2$props.range,rtl=_this2$props.rtl;if((0,selection.bY)(rowBox,point)){var currentCell=(0,selection.sU)(rowBox,point.x,rtl,range.length);_this2._selectSlot({startIdx:currentCell,endIdx:currentCell,action:actionType,box:point})}}_this2._initial={},_this2.setState({selecting:!1})};selector.on("selecting",(function(box){var _this2$props2=_this2.props,range=_this2$props2.range,rtl=_this2$props2.rtl,startIdx=-1,endIdx=-1;if(_this2.state.selecting||((0,helpers.me)(_this2.props.onSelectStart,[box]),_this2._initial={x:box.x,y:box.y}),selector.isSelected(node)){var nodeBox=(0,Selection.rF)(node),_dateCellSelection=(0,selection.bx)(_this2._initial,nodeBox,box,range.length,rtl);startIdx=_dateCellSelection.startIdx,endIdx=_dateCellSelection.endIdx}_this2.setState({selecting:!0,startIdx:startIdx,endIdx:endIdx})})),selector.on("beforeSelect",(function(box){if("ignoreEvents"===_this2.props.selectable)return!(0,Selection.xH)(_this2.containerRef.current,box)})),selector.on("click",(function(point){return selectorClicksHandler(point,"click")})),selector.on("doubleClick",(function(point){return selectorClicksHandler(point,"doubleClick")})),selector.on("select",(function(bounds){_this2._selectSlot(Object.assign({},_this2.state,{action:"select",bounds:bounds})),_this2._initial={},_this2.setState({selecting:!1}),(0,helpers.me)(_this2.props.onSelectEnd,[_this2.state])}))}},{key:"_teardownSelectable",value:function _teardownSelectable(){this._selector&&(this._selector.teardown(),this._selector=null)}},{key:"_selectSlot",value:function _selectSlot(_ref){var endIdx=_ref.endIdx,startIdx=_ref.startIdx,action=_ref.action,bounds=_ref.bounds,box=_ref.box;-1!==endIdx&&-1!==startIdx&&this.props.onSelectSlot&&this.props.onSelectSlot({start:startIdx,end:endIdx,action:action,bounds:bounds,box:box,resourceId:this.props.resourceId})}}])}(react.Component);BackgroundCells.__docgenInfo={description:"",methods:[{name:"_selectable",docblock:null,modifiers:[],params:[],returns:null},{name:"_teardownSelectable",docblock:null,modifiers:[],params:[],returns:null},{name:"_selectSlot",docblock:null,modifiers:[],params:[{name:"{ endIdx, startIdx, action, bounds, box }",type:null}],returns:null}],displayName:"BackgroundCells",props:{date:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},getters:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},container:{description:"",type:{name:"func"},required:!1},dayPropGetter:{description:"",type:{name:"func"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!0},onSelectEnd:{description:"",type:{name:"func"},required:!1},onSelectStart:{description:"",type:{name:"func"},required:!1},range:{description:"",type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},type:{description:"",type:{name:"string"},required:!1},resourceId:{description:"",type:{name:"any"},required:!1},localizer:{description:"",type:{name:"any"},required:!1}}};var src_BackgroundCells=BackgroundCells;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/BackgroundCells.js"]={name:"BackgroundCells",docgenInfo:BackgroundCells.__docgenInfo,path:"src/BackgroundCells.js"});var EventRow=__webpack_require__("./src/EventRow.js"),EventRowMixin=(__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./src/EventRowMixin.js")),eventLevels=__webpack_require__("./src/utils/eventLevels.js"),range=__webpack_require__("./node_modules/lodash/range.js"),range_default=__webpack_require__.n(range),isSegmentInSlot=function isSegmentInSlot(seg,slot){return seg.left<=slot&&seg.right>=slot},eventsInSlot=function eventsInSlot(segments,slot){return segments.filter((function(seg){return isSegmentInSlot(seg,slot)})).map((function(seg){return seg.event}))},EventEndingRow=function(_React$Component){function EventEndingRow(){return(0,classCallCheck.default)(this,EventEndingRow),(0,callSuper.default)(this,EventEndingRow,arguments)}return(0,inherits.default)(EventEndingRow,_React$Component),(0,createClass.default)(EventEndingRow,[{key:"render",value:function render(){for(var _this$props=this.props,segments=_this$props.segments,slots=_this$props.slotMetrics.slots,rowSegments=(0,eventLevels.O_)(segments).levels[0],current=1,lastEnd=1,row=[];current<=slots;){var key="_lvl_"+current,_ref=rowSegments.filter((function(seg){return isSegmentInSlot(seg,current)}))[0]||{},event=_ref.event,left=_ref.left,right=_ref.right,span=_ref.span;if(event){var gap=Math.max(0,left-lastEnd);if(this.canRenderSlotEvent(left,span)){var content=EventRowMixin.A.renderEvent(this.props,event);gap&&row.push(EventRowMixin.A.renderSpan(slots,gap,key+"_gap")),row.push(EventRowMixin.A.renderSpan(slots,span,key,content)),lastEnd=current=right+1}else gap&&row.push(EventRowMixin.A.renderSpan(slots,gap,key+"_gap")),row.push(EventRowMixin.A.renderSpan(slots,1,key,this.renderShowMore(segments,current))),lastEnd=current+=1}else current++}return(0,jsx_runtime.jsx)("div",{className:"rbc-row",children:row})}},{key:"canRenderSlotEvent",value:function canRenderSlotEvent(slot,span){var segments=this.props.segments;return range_default()(slot,slot+span).every((function(s){return 1===eventsInSlot(segments,s).length}))}},{key:"renderShowMore",value:function renderShowMore(segments,slot){var _this=this,_this$props2=this.props,localizer=_this$props2.localizer,slotMetrics=_this$props2.slotMetrics,components=_this$props2.components,events=slotMetrics.getEventsForSlot(slot),remainingEvents=eventsInSlot(segments,slot),count=remainingEvents.length;if(null!=components&&components.showMore){var ShowMore=components.showMore,slotDate=slotMetrics.getDateForSlot(slot-1);return!!count&&(0,jsx_runtime.jsx)(ShowMore,{localizer:localizer,slotDate:slotDate,slot:slot,count:count,events:events,remainingEvents:remainingEvents})}return!!count&&(0,jsx_runtime.jsx)("button",{type:"button",className:(0,clsx_m.A)("rbc-button-link","rbc-show-more"),onClick:function onClick(e){return _this.showMore(slot,e)},children:localizer.messages.showMore(count,remainingEvents,events)},"sm_"+slot)}},{key:"showMore",value:function showMore(slot,e){e.preventDefault(),e.stopPropagation(),this.props.onShowMore(slot,e.target)}}])}(react.Component);EventEndingRow.defaultProps=Object.assign({},EventRowMixin.A.defaultProps),EventEndingRow.__docgenInfo={description:"",methods:[{name:"canRenderSlotEvent",docblock:null,modifiers:[],params:[{name:"slot",type:null},{name:"span",type:null}],returns:null},{name:"renderShowMore",docblock:null,modifiers:[],params:[{name:"segments",type:null},{name:"slot",type:null}],returns:null},{name:"showMore",docblock:null,modifiers:[],params:[{name:"slot",type:null},{name:"e",type:null}],returns:null}],displayName:"EventEndingRow",props:{segments:{description:"",type:{name:"array"},required:!1},slots:{description:"",type:{name:"number"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1}},composes:["./EventRowMixin"]};var src_EventEndingRow=EventEndingRow;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/EventEndingRow.js"]={name:"EventEndingRow",docgenInfo:EventEndingRow.__docgenInfo,path:"src/EventEndingRow.js"});var NoopWrapper=__webpack_require__("./src/NoopWrapper.js"),ScrollableWeekWrapper=function ScrollableWeekWrapper(_ref){var children=_ref.children;return(0,jsx_runtime.jsx)("div",{className:"rbc-row-content-scroll-container",children:children})};ScrollableWeekWrapper.displayName="ScrollableWeekWrapper",ScrollableWeekWrapper.__docgenInfo={description:"",methods:[],displayName:"ScrollableWeekWrapper"};var src_ScrollableWeekWrapper=ScrollableWeekWrapper;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ScrollableWeekWrapper.js"]={name:"ScrollableWeekWrapper",docgenInfo:ScrollableWeekWrapper.__docgenInfo,path:"src/ScrollableWeekWrapper.js"});__webpack_require__("./node_modules/core-js/modules/es.array.find.js");var memoize_one_esm=__webpack_require__("./node_modules/memoize-one/dist/memoize-one.esm.js"),isEqual=function isEqual(a,b){return a[0].range===b[0].range&&a[0].events===b[0].events};function getSlotMetrics(){return(0,memoize_one_esm.A)((function(options){for(var range=options.range,events=options.events,maxRows=options.maxRows,minRows=options.minRows,accessors=options.accessors,localizer=options.localizer,_endOfRange=(0,eventLevels.qO)({dateRange:range,localizer:localizer}),first=_endOfRange.first,last=_endOfRange.last,segments=events.map((function(evt){return(0,eventLevels.FA)(evt,range,accessors,localizer)})),_eventLevels=(0,eventLevels.O_)(segments,Math.max(maxRows-1,1)),levels=_eventLevels.levels,extra=_eventLevels.extra,minEventRows=extra.length>0?minRows-1:minRows;levels.length<minEventRows;)levels.push([]);return{first:first,last:last,levels:levels,extra:extra,range:range,slots:range.length,clone:function clone(args){return getSlotMetrics()(Object.assign({},options,args))},getDateForSlot:function getDateForSlot(slotNumber){return range[slotNumber]},getSlotForDate:function getSlotForDate(date){return range.find((function(r){return localizer.isSameDate(r,date)}))},getEventsForSlot:function getEventsForSlot(slot){return segments.filter((function(seg){return function isSegmentInSlot(seg,slot){return seg.left<=slot&&seg.right>=slot}(seg,slot)})).map((function(seg){return seg.event}))},continuesPrior:function continuesPrior(event){return localizer.continuesPrior(accessors.start(event),first)},continuesAfter:function continuesAfter(event){var start=accessors.start(event),end=accessors.end(event);return localizer.continuesAfter(start,end,last)}}}),isEqual)}var DateContentRow=function(_React$Component){function DateContentRow(){var _this;(0,classCallCheck.default)(this,DateContentRow);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,DateContentRow,[].concat(args))).handleSelectSlot=function(slot){var _this$props=_this.props,range=_this$props.range;(0,_this$props.onSelectSlot)(range.slice(slot.start,slot.end+1),slot)},_this.handleShowMore=function(slot,target){var cell,_this$props2=_this.props,range=_this$props2.range,onShowMore=_this$props2.onShowMore,metrics=_this.slotMetrics(_this.props),row=(0,querySelectorAll.A)(_this.containerRef.current,".rbc-row-bg")[0];row&&(cell=row.children[slot-1]),onShowMore(metrics.getEventsForSlot(slot),range[slot-1],cell,slot,target)},_this.getContainer=function(){var container=_this.props.container;return container?container():_this.containerRef.current},_this.renderHeadingCell=function(date,index){var _this$props3=_this.props,renderHeader=_this$props3.renderHeader,getNow=_this$props3.getNow,localizer=_this$props3.localizer;return renderHeader({date:date,key:"header_".concat(index),className:(0,clsx_m.A)("rbc-date-cell",localizer.isSameDate(date,getNow())&&"rbc-now")})},_this.renderDummy=function(){var _this$props4=_this.props,className=_this$props4.className,range=_this$props4.range,renderHeader=_this$props4.renderHeader,showAllEvents=_this$props4.showAllEvents;return(0,jsx_runtime.jsx)("div",{className:className,ref:_this.containerRef,children:(0,jsx_runtime.jsxs)("div",{className:(0,clsx_m.A)("rbc-row-content",showAllEvents&&"rbc-row-content-scrollable"),children:[renderHeader&&(0,jsx_runtime.jsx)("div",{className:"rbc-row",ref:_this.headingRowRef,children:range.map(_this.renderHeadingCell)}),(0,jsx_runtime.jsx)("div",{className:"rbc-row",ref:_this.eventRowRef,children:(0,jsx_runtime.jsx)("div",{className:"rbc-row-segment",children:(0,jsx_runtime.jsx)("div",{className:"rbc-event",children:(0,jsx_runtime.jsx)("div",{className:"rbc-event-content",children:" "})})})})]})})},_this.containerRef=(0,react.createRef)(),_this.headingRowRef=(0,react.createRef)(),_this.eventRowRef=(0,react.createRef)(),_this.slotMetrics=getSlotMetrics(),_this}return(0,inherits.default)(DateContentRow,_React$Component),(0,createClass.default)(DateContentRow,[{key:"getRowLimit",value:function getRowLimit(){var _this$headingRowRef,eventHeight=(0,height.A)(this.eventRowRef.current),headingHeight=null!==(_this$headingRowRef=this.headingRowRef)&&void 0!==_this$headingRowRef&&_this$headingRowRef.current?(0,height.A)(this.headingRowRef.current):0,eventSpace=(0,height.A)(this.containerRef.current)-headingHeight;return Math.max(Math.floor(eventSpace/eventHeight),1)}},{key:"render",value:function render(){var _this$props5=this.props,date=_this$props5.date,rtl=_this$props5.rtl,range=_this$props5.range,className=_this$props5.className,selected=_this$props5.selected,selectable=_this$props5.selectable,renderForMeasure=_this$props5.renderForMeasure,accessors=_this$props5.accessors,getters=_this$props5.getters,components=_this$props5.components,getNow=_this$props5.getNow,renderHeader=_this$props5.renderHeader,onSelect=_this$props5.onSelect,localizer=_this$props5.localizer,onSelectStart=_this$props5.onSelectStart,onSelectEnd=_this$props5.onSelectEnd,onDoubleClick=_this$props5.onDoubleClick,onKeyPress=_this$props5.onKeyPress,resourceId=_this$props5.resourceId,longPressThreshold=_this$props5.longPressThreshold,isAllDay=_this$props5.isAllDay,resizable=_this$props5.resizable,showAllEvents=_this$props5.showAllEvents;if(renderForMeasure)return this.renderDummy();var metrics=this.slotMetrics(this.props),levels=metrics.levels,extra=metrics.extra,ScrollableWeekComponent=showAllEvents?src_ScrollableWeekWrapper:NoopWrapper.A,WeekWrapper=components.weekWrapper,eventRowProps={selected:selected,accessors:accessors,getters:getters,localizer:localizer,components:components,onSelect:onSelect,onDoubleClick:onDoubleClick,onKeyPress:onKeyPress,resourceId:resourceId,slotMetrics:metrics,resizable:resizable};return(0,jsx_runtime.jsxs)("div",{className:className,role:"rowgroup",ref:this.containerRef,children:[(0,jsx_runtime.jsx)(src_BackgroundCells,{localizer:localizer,date:date,getNow:getNow,rtl:rtl,range:range,selectable:selectable,container:this.getContainer,getters:getters,onSelectStart:onSelectStart,onSelectEnd:onSelectEnd,onSelectSlot:this.handleSelectSlot,components:components,longPressThreshold:longPressThreshold,resourceId:resourceId}),(0,jsx_runtime.jsxs)("div",{className:(0,clsx_m.A)("rbc-row-content",showAllEvents&&"rbc-row-content-scrollable"),role:"row",children:[renderHeader&&(0,jsx_runtime.jsx)("div",{className:"rbc-row ",ref:this.headingRowRef,children:range.map(this.renderHeadingCell)}),(0,jsx_runtime.jsx)(ScrollableWeekComponent,{children:(0,jsx_runtime.jsxs)(WeekWrapper,Object.assign({isAllDay:isAllDay},eventRowProps,{rtl:this.props.rtl,children:[levels.map((function(segs,idx){return(0,jsx_runtime.jsx)(EventRow.A,Object.assign({segments:segs},eventRowProps),idx)})),!!extra.length&&(0,jsx_runtime.jsx)(src_EventEndingRow,Object.assign({segments:extra,onShowMore:this.handleShowMore},eventRowProps))]}))})]})]})}}])}(react.Component);DateContentRow.defaultProps={minRows:0,maxRows:1/0},DateContentRow.__docgenInfo={description:"",methods:[{name:"handleSelectSlot",docblock:null,modifiers:[],params:[{name:"slot",type:null}],returns:null},{name:"handleShowMore",docblock:null,modifiers:[],params:[{name:"slot",type:null},{name:"target",type:null}],returns:null},{name:"getContainer",docblock:null,modifiers:[],params:[],returns:null},{name:"getRowLimit",docblock:null,modifiers:[],params:[],returns:null},{name:"renderHeadingCell",docblock:null,modifiers:[],params:[{name:"date",type:null},{name:"index",type:null}],returns:null},{name:"renderDummy",docblock:null,modifiers:[],params:[],returns:null}],displayName:"DateContentRow",props:{minRows:{defaultValue:{value:"0",computed:!1},description:"",type:{name:"number"},required:!1},maxRows:{defaultValue:{value:"Infinity",computed:!0},description:"",type:{name:"number"},required:!1},date:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},events:{description:"",type:{name:"array"},required:!0},range:{description:"",type:{name:"array"},required:!0},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},resourceId:{description:"",type:{name:"any"},required:!1},renderForMeasure:{description:"",type:{name:"bool"},required:!1},renderHeader:{description:"",type:{name:"func"},required:!1},container:{description:"",type:{name:"func"},required:!1},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},showAllEvents:{description:"",type:{name:"bool"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelect:{description:"",type:{name:"func"},required:!1},onSelectEnd:{description:"",type:{name:"func"},required:!1},onSelectStart:{description:"",type:{name:"func"},required:!1},onDoubleClick:{description:"",type:{name:"func"},required:!1},onKeyPress:{description:"",type:{name:"func"},required:!1},dayPropGetter:{description:"",type:{name:"func"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},isAllDay:{description:"",type:{name:"bool"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0}}};var src_DateContentRow=DateContentRow;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/DateContentRow.js"]={name:"DateContentRow",docgenInfo:DateContentRow.__docgenInfo,path:"src/DateContentRow.js"})},"./src/EventCell.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),_babel_runtime_helpers_esm_callSuper__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/callSuper.js"),_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),react__WEBPACK_IMPORTED_MODULE_1__=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),clsx__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["style","className","event","selected","isAllDay","onSelect","onDoubleClick","onKeyPress","localizer","continuesPrior","continuesAfter","accessors","getters","children","components","slotStart","slotEnd"],EventCell=function(_React$Component){function EventCell(){return(0,_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__.default)(this,EventCell),(0,_babel_runtime_helpers_esm_callSuper__WEBPACK_IMPORTED_MODULE_4__.default)(this,EventCell,arguments)}return(0,_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__.default)(EventCell,_React$Component),(0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__.default)(EventCell,[{key:"render",value:function render(){var _this$props=this.props,style=_this$props.style,className=_this$props.className,event=_this$props.event,selected=_this$props.selected,isAllDay=_this$props.isAllDay,onSelect=_this$props.onSelect,_onDoubleClick=_this$props.onDoubleClick,onKeyPress=_this$props.onKeyPress,localizer=_this$props.localizer,continuesPrior=_this$props.continuesPrior,continuesAfter=_this$props.continuesAfter,accessors=_this$props.accessors,getters=_this$props.getters,children=_this$props.children,_this$props$component=_this$props.components,Event=_this$props$component.event,EventWrapper=_this$props$component.eventWrapper,slotStart=_this$props.slotStart,slotEnd=_this$props.slotEnd,props=(0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_7__.A)(_this$props,_excluded);delete props.resizable;var title=accessors.title(event),tooltip=accessors.tooltip(event),end=accessors.end(event),start=accessors.start(event),allDay=accessors.allDay(event),showAsAllDay=isAllDay||allDay||localizer.diff(start,localizer.ceil(end,"day"),"day")>1,userProps=getters.eventProp(event,start,end,selected),content=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"rbc-event-content",title:tooltip||void 0,children:Event?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Event,{event:event,continuesPrior:continuesPrior,continuesAfter:continuesAfter,title:title,isAllDay:allDay,localizer:localizer,slotStart:slotStart,slotEnd:slotEnd}):title});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(EventWrapper,Object.assign({},this.props,{type:"date",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",Object.assign({},props,{style:Object.assign({},userProps.style,style),className:(0,clsx__WEBPACK_IMPORTED_MODULE_8__.A)("rbc-event",className,userProps.className,{"rbc-selected":selected,"rbc-event-allday":showAsAllDay,"rbc-event-continues-prior":continuesPrior,"rbc-event-continues-after":continuesAfter}),onClick:function onClick(e){return onSelect&&onSelect(event,e)},onDoubleClick:function onDoubleClick(e){return _onDoubleClick&&_onDoubleClick(event,e)},onKeyDown:function onKeyDown(e){return onKeyPress&&onKeyPress(event,e)},children:"function"==typeof children?children(content):content}))}))}}])}(react__WEBPACK_IMPORTED_MODULE_1__.Component);EventCell.__docgenInfo={description:"",methods:[],displayName:"EventCell",props:{event:{description:"",type:{name:"object"},required:!0},slotStart:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},slotEnd:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},selected:{description:"",type:{name:"bool"},required:!1},isAllDay:{description:"",type:{name:"bool"},required:!1},continuesPrior:{description:"",type:{name:"bool"},required:!1},continuesAfter:{description:"",type:{name:"bool"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!1},onSelect:{description:"",type:{name:"func"},required:!1},onDoubleClick:{description:"",type:{name:"func"},required:!1},onKeyPress:{description:"",type:{name:"func"},required:!1}}},__webpack_exports__.A=EventCell,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/EventCell.js"]={name:"EventCell",docgenInfo:EventCell.__docgenInfo,path:"src/EventCell.js"})},"./src/EventRow.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),_babel_runtime_helpers_esm_callSuper__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/callSuper.js"),_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),clsx__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/clsx/dist/clsx.m.js")),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_EventRowMixin__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/EventRowMixin.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js"),EventRow=function(_React$Component){function EventRow(){return(0,_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__.default)(this,EventRow),(0,_babel_runtime_helpers_esm_callSuper__WEBPACK_IMPORTED_MODULE_5__.default)(this,EventRow,arguments)}return(0,_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__.default)(EventRow,_React$Component),(0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__.default)(EventRow,[{key:"render",value:function render(){var _this=this,_this$props=this.props,segments=_this$props.segments,slots=_this$props.slotMetrics.slots,className=_this$props.className,lastEnd=1;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:(0,clsx__WEBPACK_IMPORTED_MODULE_8__.A)(className,"rbc-row"),children:segments.reduce((function(row,_ref,li){var event=_ref.event,left=_ref.left,right=_ref.right,span=_ref.span,key="_lvl_"+li,gap=left-lastEnd,content=_EventRowMixin__WEBPACK_IMPORTED_MODULE_2__.A.renderEvent(_this.props,event);return gap&&row.push(_EventRowMixin__WEBPACK_IMPORTED_MODULE_2__.A.renderSpan(slots,gap,"".concat(key,"_gap"))),row.push(_EventRowMixin__WEBPACK_IMPORTED_MODULE_2__.A.renderSpan(slots,span,key,content)),lastEnd=right+1,row}),[])})}}])}(react__WEBPACK_IMPORTED_MODULE_1__.Component);EventRow.defaultProps=Object.assign({},_EventRowMixin__WEBPACK_IMPORTED_MODULE_2__.A.defaultProps),EventRow.__docgenInfo={description:"",methods:[],displayName:"EventRow",props:{segments:{description:"",type:{name:"array"},required:!1}},composes:["./EventRowMixin"]},__webpack_exports__.A=EventRow,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/EventRow.js"]={name:"EventRow",docgenInfo:EventRow.__docgenInfo,path:"src/EventRow.js"})},"./src/EventRowMixin.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),_EventCell__WEBPACK_IMPORTED_MODULE_1__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./src/EventCell.js")),_utils_selection__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/selection.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.A={propTypes:{slotMetrics:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,selected:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object,isAllDay:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,accessors:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,localizer:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,components:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,getters:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,onSelect:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,onDoubleClick:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,onKeyPress:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func},defaultProps:{segments:[],selected:{}},renderEvent:function renderEvent(props,event){var selected=props.selected,accessors=(props.isAllDay,props.accessors),getters=props.getters,onSelect=props.onSelect,onDoubleClick=props.onDoubleClick,onKeyPress=props.onKeyPress,localizer=props.localizer,slotMetrics=props.slotMetrics,components=props.components,resizable=props.resizable,continuesPrior=slotMetrics.continuesPrior(event),continuesAfter=slotMetrics.continuesAfter(event);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_EventCell__WEBPACK_IMPORTED_MODULE_1__.A,{event:event,getters:getters,localizer:localizer,accessors:accessors,components:components,onSelect:onSelect,onDoubleClick:onDoubleClick,onKeyPress:onKeyPress,continuesPrior:continuesPrior,continuesAfter:continuesAfter,slotStart:slotMetrics.first,slotEnd:slotMetrics.last,selected:(0,_utils_selection__WEBPACK_IMPORTED_MODULE_2__.sp)(event,selected),resizable:resizable})},renderSpan:function renderSpan(slots,len,key){var content=arguments.length>3&&void 0!==arguments[3]?arguments[3]:" ",per=Math.abs(len)/slots*100+"%";return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"rbc-row-segment",style:{WebkitFlexBasis:per,flexBasis:per,maxWidth:per},children:content},key)}}},"./src/Header.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),Header=function Header(_ref){var label=_ref.label;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("span",{role:"columnheader","aria-sort":"none",children:label})};Header.displayName="Header",Header.__docgenInfo={description:"",methods:[],displayName:"Header",props:{label:{description:"",type:{name:"node"},required:!1}}},__webpack_exports__.A=Header,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Header.js"]={name:"Header",docgenInfo:Header.__docgenInfo,path:"src/Header.js"})},"./src/NoopWrapper.js":function(__unused_webpack_module,__webpack_exports__){"use strict";__webpack_exports__.A=function NoopWrapper(props){return props.children}},"./src/PopOverlay.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return src_PopOverlay}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),Overlay=__webpack_require__("./node_modules/react-overlays/esm/Overlay.js"),esm_offset=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/dom-helpers/esm/offset.js"));var EventCell=__webpack_require__("./src/EventCell.js"),selection=__webpack_require__("./src/utils/selection.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Pop(_ref2){var containerRef=_ref2.containerRef,accessors=_ref2.accessors,getters=_ref2.getters,selected=_ref2.selected,components=_ref2.components,localizer=_ref2.localizer,position=_ref2.position,show=_ref2.show,events=_ref2.events,slotStart=_ref2.slotStart,slotEnd=_ref2.slotEnd,onSelect=_ref2.onSelect,onDoubleClick=_ref2.onDoubleClick,onKeyPress=_ref2.onKeyPress,handleDragStart=_ref2.handleDragStart,popperRef=_ref2.popperRef,target=_ref2.target,offset=_ref2.offset;!function useClickOutside(_ref){var ref=_ref.ref,callback=_ref.callback;(0,react.useEffect)((function(){var handleClickOutside=function handleClickOutside(e){ref.current&&!ref.current.contains(e.target)&&callback()};return document.addEventListener("mousedown",handleClickOutside),function(){document.removeEventListener("mousedown",handleClickOutside)}}),[ref,callback])}({ref:popperRef,callback:show}),(0,react.useLayoutEffect)((function(){var _getPosition=function getPosition(_ref){var target=_ref.target,offset=_ref.offset,container=_ref.container,box=_ref.box,_getOffset=(0,esm_offset.A)(target),top=_getOffset.top,left=_getOffset.left,width=_getOffset.width,height=_getOffset.height,_getOffset2=(0,esm_offset.A)(container),cTop=_getOffset2.top,cLeft=_getOffset2.left,cWidth=_getOffset2.width,cHeight=_getOffset2.height,_getOffset3=(0,esm_offset.A)(box),bWidth=_getOffset3.width,bHeight=_getOffset3.height,viewBottom=cTop+cHeight,viewRight=cLeft+cWidth,bottom=top+bHeight,right=left+bWidth,x=offset.x,y=offset.y;return{topOffset:bottom>viewBottom?top-bHeight-y:top+y+height,leftOffset:right>viewRight?left+x-bWidth+width:left+x}}({target:target,offset:offset,container:containerRef.current,box:popperRef.current}),topOffset=_getPosition.topOffset,leftOffset=_getPosition.leftOffset;popperRef.current.style.top="".concat(topOffset,"px"),popperRef.current.style.left="".concat(leftOffset,"px")}),[offset.x,offset.y,target]);var width=position.width,style={minWidth:width+width/2};return(0,jsx_runtime.jsxs)("div",{style:style,className:"rbc-overlay",ref:popperRef,children:[(0,jsx_runtime.jsx)("div",{className:"rbc-overlay-header",children:localizer.format(slotStart,"dayHeaderFormat")}),events.map((function(event,idx){return(0,jsx_runtime.jsx)(EventCell.A,{type:"popup",localizer:localizer,event:event,getters:getters,onSelect:onSelect,accessors:accessors,components:components,onDoubleClick:onDoubleClick,onKeyPress:onKeyPress,continuesPrior:localizer.lt(accessors.end(event),slotStart,"day"),continuesAfter:localizer.gte(accessors.start(event),slotEnd,"day"),slotStart:slotStart,slotEnd:slotEnd,selected:(0,selection.sp)(event,selected),draggable:!0,onDragStart:function onDragStart(){return handleDragStart(event)},onDragEnd:function onDragEnd(){return show()}},idx)}))]})}Pop.displayName="Pop";var Popup=react.forwardRef((function(props,ref){return(0,jsx_runtime.jsx)(Pop,Object.assign({},props,{popperRef:ref}))}));Popup.propTypes={accessors:prop_types_default().object.isRequired,getters:prop_types_default().object.isRequired,selected:prop_types_default().object,components:prop_types_default().object.isRequired,localizer:prop_types_default().object.isRequired,position:prop_types_default().object.isRequired,show:prop_types_default().func.isRequired,events:prop_types_default().array.isRequired,slotStart:prop_types_default().instanceOf(Date).isRequired,slotEnd:prop_types_default().instanceOf(Date),onSelect:prop_types_default().func,onDoubleClick:prop_types_default().func,onKeyPress:prop_types_default().func,handleDragStart:prop_types_default().func,style:prop_types_default().object,offset:prop_types_default().shape({x:prop_types_default().number,y:prop_types_default().number})},Popup.__docgenInfo={description:"",methods:[],displayName:"Popup",props:{accessors:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},selected:{description:"",type:{name:"object"},required:!1},components:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},position:{description:"",type:{name:"object"},required:!0},show:{description:"",type:{name:"func"},required:!0},events:{description:"",type:{name:"array"},required:!0},slotStart:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},slotEnd:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},onSelect:{description:"",type:{name:"func"},required:!1},onDoubleClick:{description:"",type:{name:"func"},required:!1},onKeyPress:{description:"",type:{name:"func"},required:!1},handleDragStart:{description:"",type:{name:"func"},required:!1},style:{description:"",type:{name:"object"},required:!1},offset:{description:"",type:{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}},required:!1}}};var src_Popup=Popup;function CalOverlay(_ref){var containerRef=_ref.containerRef,_ref$popupOffset=_ref.popupOffset,popupOffset=void 0===_ref$popupOffset?5:_ref$popupOffset,overlay=_ref.overlay,accessors=_ref.accessors,localizer=_ref.localizer,components=_ref.components,getters=_ref.getters,selected=_ref.selected,handleSelectEvent=_ref.handleSelectEvent,handleDoubleClickEvent=_ref.handleDoubleClickEvent,handleKeyPressEvent=_ref.handleKeyPressEvent,handleDragStart=_ref.handleDragStart,onHide=_ref.onHide,overlayDisplay=_ref.overlayDisplay,popperRef=(0,react.useRef)(null);if(!overlay.position)return null;var offset=popupOffset;isNaN(popupOffset)||(offset={x:popupOffset,y:popupOffset});var position=overlay.position,events=overlay.events,date=overlay.date,end=overlay.end;return(0,jsx_runtime.jsx)(Overlay.A,{rootClose:!0,flip:!0,show:!0,placement:"bottom",onHide:onHide,target:overlay.target,children:function children(_ref2){var props=_ref2.props;return(0,jsx_runtime.jsx)(src_Popup,Object.assign({},props,{containerRef:containerRef,ref:popperRef,target:overlay.target,offset:offset,accessors:accessors,getters:getters,selected:selected,components:components,localizer:localizer,position:position,show:overlayDisplay,events:events,slotStart:date,slotEnd:end,onSelect:handleSelectEvent,onDoubleClick:handleDoubleClickEvent,onKeyPress:handleKeyPressEvent,handleDragStart:handleDragStart}))}})}"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Popup.js"]={name:"Popup",docgenInfo:Popup.__docgenInfo,path:"src/Popup.js"}),CalOverlay.displayName="CalOverlay";var PopOverlay=react.forwardRef((function(props,ref){return(0,jsx_runtime.jsx)(CalOverlay,Object.assign({},props,{containerRef:ref}))}));PopOverlay.propTypes={popupOffset:prop_types_default().oneOfType([prop_types_default().number,prop_types_default().shape({x:prop_types_default().number,y:prop_types_default().number})]),overlay:prop_types_default().shape({position:prop_types_default().object,events:prop_types_default().array,date:prop_types_default().instanceOf(Date),end:prop_types_default().instanceOf(Date)}),accessors:prop_types_default().object.isRequired,localizer:prop_types_default().object.isRequired,components:prop_types_default().object.isRequired,getters:prop_types_default().object.isRequired,selected:prop_types_default().object,handleSelectEvent:prop_types_default().func,handleDoubleClickEvent:prop_types_default().func,handleKeyPressEvent:prop_types_default().func,handleDragStart:prop_types_default().func,onHide:prop_types_default().func,overlayDisplay:prop_types_default().func},PopOverlay.__docgenInfo={description:"",methods:[],displayName:"PopOverlay",props:{popupOffset:{description:"",type:{name:"union",value:[{name:"number"},{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}}]},required:!1},overlay:{description:"",type:{name:"shape",value:{position:{name:"object",required:!1},events:{name:"array",required:!1},date:{name:"instanceOf",value:"Date",required:!1},end:{name:"instanceOf",value:"Date",required:!1}}},required:!1},accessors:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},selected:{description:"",type:{name:"object"},required:!1},handleSelectEvent:{description:"",type:{name:"func"},required:!1},handleDoubleClickEvent:{description:"",type:{name:"func"},required:!1},handleKeyPressEvent:{description:"",type:{name:"func"},required:!1},handleDragStart:{description:"",type:{name:"func"},required:!1},onHide:{description:"",type:{name:"func"},required:!1},overlayDisplay:{description:"",type:{name:"func"},required:!1}}};var src_PopOverlay=PopOverlay;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/PopOverlay.js"]={name:"PopOverlay",docgenInfo:PopOverlay.__docgenInfo,path:"src/PopOverlay.js"})},"./src/Selection.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{LP:function(){return getEventNodeFromPoint},fN:function(){return isShowMore},rF:function(){return getBoundsForNode},xH:function(){return isEvent}});var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),dom_helpers_contains__WEBPACK_IMPORTED_MODULE_6__=(__webpack_require__("./node_modules/core-js/modules/es.array.splice.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js"),__webpack_require__("./node_modules/dom-helpers/esm/contains.js")),dom_helpers_closest__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/dom-helpers/esm/closest.js"),dom_helpers_listen__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/dom-helpers/esm/listen.js");function addEventListener(type,handler){var target=arguments.length>2&&void 0!==arguments[2]?arguments[2]:document;return(0,dom_helpers_listen__WEBPACK_IMPORTED_MODULE_5__.A)(target,type,handler,{passive:!1})}function getEventNodeFromPoint(node,_ref){var clientX=_ref.clientX,clientY=_ref.clientY,target=document.elementFromPoint(clientX,clientY);return(0,dom_helpers_closest__WEBPACK_IMPORTED_MODULE_7__.A)(target,".rbc-event",node)}function isEvent(node,bounds){return!!getEventNodeFromPoint(node,bounds)}function isShowMore(node,bounds){return!!function getShowMoreNodeFromPoint(node,_ref2){var clientX=_ref2.clientX,clientY=_ref2.clientY,target=document.elementFromPoint(clientX,clientY);return(0,dom_helpers_closest__WEBPACK_IMPORTED_MODULE_7__.A)(target,".rbc-show-more",node)}(node,bounds)}function getEventCoordinates(e){var target=e;return e.touches&&e.touches.length&&(target=e.touches[0]),{clientX:target.clientX,clientY:target.clientY,pageX:target.pageX,pageY:target.pageY}}var Selection=function(){return(0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__.default)((function Selection(node){var _ref3=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_ref3$global=_ref3.global,global=void 0!==_ref3$global&&_ref3$global,_ref3$longPressThresh=_ref3.longPressThreshold,longPressThreshold=void 0===_ref3$longPressThresh?250:_ref3$longPressThresh,_ref3$validContainers=_ref3.validContainers,validContainers=void 0===_ref3$validContainers?[]:_ref3$validContainers;(0,_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__.default)(this,Selection),this._initialEvent=null,this.selecting=!1,this.isDetached=!1,this.container=node,this.globalMouse=!node||global,this.longPressThreshold=longPressThreshold,this.validContainers=validContainers,this._listeners=Object.create(null),this._handleInitialEvent=this._handleInitialEvent.bind(this),this._handleMoveEvent=this._handleMoveEvent.bind(this),this._handleTerminatingEvent=this._handleTerminatingEvent.bind(this),this._keyListener=this._keyListener.bind(this),this._dropFromOutsideListener=this._dropFromOutsideListener.bind(this),this._dragOverFromOutsideListener=this._dragOverFromOutsideListener.bind(this),this._removeTouchMoveWindowListener=addEventListener("touchmove",(function(){}),window),this._removeKeyDownListener=addEventListener("keydown",this._keyListener),this._removeKeyUpListener=addEventListener("keyup",this._keyListener),this._removeDropFromOutsideListener=addEventListener("drop",this._dropFromOutsideListener),this._removeDragOverFromOutsideListener=addEventListener("dragover",this._dragOverFromOutsideListener),this._addInitialEventListener()}),[{key:"on",value:function on(type,handler){var handlers=this._listeners[type]||(this._listeners[type]=[]);return handlers.push(handler),{remove:function remove(){var idx=handlers.indexOf(handler);-1!==idx&&handlers.splice(idx,1)}}}},{key:"emit",value:function emit(type){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];var result;return(this._listeners[type]||[]).forEach((function(fn){void 0===result&&(result=fn.apply(void 0,args))})),result}},{key:"teardown",value:function teardown(){this._initialEvent=null,this._initialEventData=null,this._selectRect=null,this.selecting=!1,this._lastClickData=null,this.isDetached=!0,this._listeners=Object.create(null),this._removeTouchMoveWindowListener&&this._removeTouchMoveWindowListener(),this._removeInitialEventListener&&this._removeInitialEventListener(),this._removeEndListener&&this._removeEndListener(),this._onEscListener&&this._onEscListener(),this._removeMoveListener&&this._removeMoveListener(),this._removeKeyUpListener&&this._removeKeyUpListener(),this._removeKeyDownListener&&this._removeKeyDownListener(),this._removeDropFromOutsideListener&&this._removeDropFromOutsideListener(),this._removeDragOverFromOutsideListener&&this._removeDragOverFromOutsideListener()}},{key:"isSelected",value:function isSelected(node){var box=this._selectRect;return!(!box||!this.selecting)&&objectsCollide(box,getBoundsForNode(node))}},{key:"filter",value:function filter(items){return this._selectRect&&this.selecting?items.filter(this.isSelected,this):[]}},{key:"_addLongPressListener",value:function _addLongPressListener(handler,initialEvent){var _this=this,timer=null,removeTouchMoveListener=null,removeTouchEndListener=null,handleTouchStart=function handleTouchStart(initialEvent){timer=setTimeout((function(){cleanup(),handler(initialEvent)}),_this.longPressThreshold),removeTouchMoveListener=addEventListener("touchmove",(function(){return cleanup()})),removeTouchEndListener=addEventListener("touchend",(function(){return cleanup()}))},removeTouchStartListener=addEventListener("touchstart",handleTouchStart),cleanup=function cleanup(){timer&&clearTimeout(timer),removeTouchMoveListener&&removeTouchMoveListener(),removeTouchEndListener&&removeTouchEndListener(),timer=null,removeTouchMoveListener=null,removeTouchEndListener=null};return initialEvent&&handleTouchStart(initialEvent),function(){cleanup(),removeTouchStartListener()}}},{key:"_addInitialEventListener",value:function _addInitialEventListener(){var _this2=this,removeMouseDownListener=addEventListener("mousedown",(function(e){_this2._removeInitialEventListener(),_this2._handleInitialEvent(e),_this2._removeInitialEventListener=addEventListener("mousedown",_this2._handleInitialEvent)})),removeTouchStartListener=addEventListener("touchstart",(function(e){_this2._removeInitialEventListener(),_this2._removeInitialEventListener=_this2._addLongPressListener(_this2._handleInitialEvent,e)}));this._removeInitialEventListener=function(){removeMouseDownListener(),removeTouchStartListener()}}},{key:"_dropFromOutsideListener",value:function _dropFromOutsideListener(e){var _getEventCoordinates=getEventCoordinates(e),pageX=_getEventCoordinates.pageX,pageY=_getEventCoordinates.pageY,clientX=_getEventCoordinates.clientX,clientY=_getEventCoordinates.clientY;this.emit("dropFromOutside",{x:pageX,y:pageY,clientX:clientX,clientY:clientY}),e.preventDefault()}},{key:"_dragOverFromOutsideListener",value:function _dragOverFromOutsideListener(e){var _getEventCoordinates2=getEventCoordinates(e),pageX=_getEventCoordinates2.pageX,pageY=_getEventCoordinates2.pageY,clientX=_getEventCoordinates2.clientX,clientY=_getEventCoordinates2.clientY;this.emit("dragOverFromOutside",{x:pageX,y:pageY,clientX:clientX,clientY:clientY}),e.preventDefault()}},{key:"_handleInitialEvent",value:function _handleInitialEvent(e){if(this._initialEvent=e,!this.isDetached){var offsetData,_getEventCoordinates3=getEventCoordinates(e),clientX=_getEventCoordinates3.clientX,clientY=_getEventCoordinates3.clientY,pageX=_getEventCoordinates3.pageX,pageY=_getEventCoordinates3.pageY,node=this.container();if(3!==e.which&&2!==e.button&&function isOverContainer(container,x,y){return!container||(0,dom_helpers_contains__WEBPACK_IMPORTED_MODULE_6__.A)(container,document.elementFromPoint(x,y))}(node,clientX,clientY)){if(!this.globalMouse&&node&&!(0,dom_helpers_contains__WEBPACK_IMPORTED_MODULE_6__.A)(node,e.target)){var _normalizeDistance=function normalizeDistance(){var distance=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;"object"!=typeof distance&&(distance={top:distance,left:distance,right:distance,bottom:distance});return distance}(0),top=_normalizeDistance.top,left=_normalizeDistance.left,bottom=_normalizeDistance.bottom,right=_normalizeDistance.right;if(!objectsCollide({top:(offsetData=getBoundsForNode(node)).top-top,left:offsetData.left-left,bottom:offsetData.bottom+bottom,right:offsetData.right+right},{top:pageY,left:pageX}))return}if(!1!==this.emit("beforeSelect",this._initialEventData={isTouch:/^touch/.test(e.type),x:pageX,y:pageY,clientX:clientX,clientY:clientY}))switch(e.type){case"mousedown":this._removeEndListener=addEventListener("mouseup",this._handleTerminatingEvent),this._onEscListener=addEventListener("keydown",this._handleTerminatingEvent),this._removeMoveListener=addEventListener("mousemove",this._handleMoveEvent);break;case"touchstart":this._handleMoveEvent(e),this._removeEndListener=addEventListener("touchend",this._handleTerminatingEvent),this._removeMoveListener=addEventListener("touchmove",this._handleMoveEvent)}}}}},{key:"_isWithinValidContainer",value:function _isWithinValidContainer(e){var eventTarget=e.target,containers=this.validContainers;return!(containers&&containers.length&&eventTarget)||containers.some((function(target){return!!eventTarget.closest(target)}))}},{key:"_handleTerminatingEvent",value:function _handleTerminatingEvent(e){var selecting=this.selecting,bounds=this._selectRect;if(!selecting&&e.type.includes("key")&&(e=this._initialEvent),this.selecting=!1,this._removeEndListener&&this._removeEndListener(),this._removeMoveListener&&this._removeMoveListener(),this._selectRect=null,this._initialEvent=null,this._initialEventData=null,e){var inRoot=!this.container||(0,dom_helpers_contains__WEBPACK_IMPORTED_MODULE_6__.A)(this.container(),e.target),isWithinValidContainer=this._isWithinValidContainer(e);return"Escape"!==e.key&&isWithinValidContainer?!selecting&&inRoot?this._handleClickEvent(e):selecting?this.emit("select",bounds):this.emit("reset"):this.emit("reset")}}},{key:"_handleClickEvent",value:function _handleClickEvent(e){var _getEventCoordinates4=getEventCoordinates(e),pageX=_getEventCoordinates4.pageX,pageY=_getEventCoordinates4.pageY,clientX=_getEventCoordinates4.clientX,clientY=_getEventCoordinates4.clientY,now=(new Date).getTime();return this._lastClickData&&now-this._lastClickData.timestamp<250?(this._lastClickData=null,this.emit("doubleClick",{x:pageX,y:pageY,clientX:clientX,clientY:clientY})):(this._lastClickData={timestamp:now},this.emit("click",{x:pageX,y:pageY,clientX:clientX,clientY:clientY}))}},{key:"_handleMoveEvent",value:function _handleMoveEvent(e){if(null!==this._initialEventData&&!this.isDetached){var _this$_initialEventDa=this._initialEventData,x=_this$_initialEventDa.x,y=_this$_initialEventDa.y,_getEventCoordinates5=getEventCoordinates(e),pageX=_getEventCoordinates5.pageX,pageY=_getEventCoordinates5.pageY,w=Math.abs(x-pageX),h=Math.abs(y-pageY),left=Math.min(pageX,x),top=Math.min(pageY,y),old=this.selecting,click=this.isClick(pageX,pageY);(!click||old||w||h)&&(old||click||this.emit("selectStart",this._initialEventData),click||(this.selecting=!0,this._selectRect={top:top,left:left,x:pageX,y:pageY,right:left+w,bottom:top+h},this.emit("selecting",this._selectRect)),e.preventDefault())}}},{key:"_keyListener",value:function _keyListener(e){this.ctrl=e.metaKey||e.ctrlKey}},{key:"isClick",value:function isClick(pageX,pageY){var _this$_initialEventDa2=this._initialEventData,x=_this$_initialEventDa2.x,y=_this$_initialEventDa2.y;return!_this$_initialEventDa2.isTouch&&Math.abs(pageX-x)<=5&&Math.abs(pageY-y)<=5}}])}();function objectsCollide(nodeA,nodeB){var tolerance=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,_getBoundsForNode=getBoundsForNode(nodeA),aTop=_getBoundsForNode.top,aLeft=_getBoundsForNode.left,_getBoundsForNode$rig=_getBoundsForNode.right,aRight=void 0===_getBoundsForNode$rig?aLeft:_getBoundsForNode$rig,_getBoundsForNode$bot=_getBoundsForNode.bottom,aBottom=void 0===_getBoundsForNode$bot?aTop:_getBoundsForNode$bot,_getBoundsForNode2=getBoundsForNode(nodeB),bTop=_getBoundsForNode2.top,bLeft=_getBoundsForNode2.left,_getBoundsForNode2$ri=_getBoundsForNode2.right,bRight=void 0===_getBoundsForNode2$ri?bLeft:_getBoundsForNode2$ri,_getBoundsForNode2$bo=_getBoundsForNode2.bottom;return!(aBottom-tolerance<bTop||aTop+tolerance>(void 0===_getBoundsForNode2$bo?bTop:_getBoundsForNode2$bo)||aRight-tolerance<bLeft||aLeft+tolerance>bRight)}function getBoundsForNode(node){if(!node.getBoundingClientRect)return node;var rect=node.getBoundingClientRect(),left=rect.left+pageOffset("left"),top=rect.top+pageOffset("top");return{top:top,left:left,right:(node.offsetWidth||0)+left,bottom:(node.offsetHeight||0)+top}}function pageOffset(dir){return"left"===dir?window.pageXOffset||document.body.scrollLeft||0:"top"===dir?window.pageYOffset||document.body.scrollTop||0:void 0}__webpack_exports__.Ay=Selection},"./src/TimeGrid.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return TimeGrid}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),classCallCheck=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),createClass=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),callSuper=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/callSuper.js"),inherits=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),clsx_m=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.sort.js"),__webpack_require__("./node_modules/clsx/dist/clsx.m.js")),animationFrame=__webpack_require__("./node_modules/dom-helpers/esm/animationFrame.js"),memoize_one_esm=__webpack_require__("./node_modules/memoize-one/dist/memoize-one.esm.js"),react=__webpack_require__("./node_modules/react/index.js"),esm_position=__webpack_require__("./node_modules/dom-helpers/esm/position.js"),esm_width=__webpack_require__("./node_modules/dom-helpers/esm/width.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),Selection=__webpack_require__("./src/Selection.js"),getKey=(__webpack_require__("./node_modules/core-js/modules/es.array.find-index.js"),function getKey(_ref){var min=_ref.min,max=_ref.max,step=_ref.step,slots=_ref.slots,localizer=_ref.localizer;return"".concat(+localizer.startOf(min,"minutes"))+"".concat(+localizer.startOf(max,"minutes"))+"".concat(step,"-").concat(slots)});function getSlotMetrics(_ref2){for(var start=_ref2.min,end=_ref2.max,step=_ref2.step,timeslots=_ref2.timeslots,localizer=_ref2.localizer,key=getKey({start:start,end:end,step:step,timeslots:timeslots,localizer:localizer}),totalMin=1+localizer.getTotalMin(start,end),minutesFromMidnight=localizer.getMinutesFromMidnight(start),numGroups=Math.ceil((totalMin-1)/(step*timeslots)),numSlots=numGroups*timeslots,groups=new Array(numGroups),slots=new Array(numSlots),grp=0;grp<numGroups;grp++){groups[grp]=new Array(timeslots);for(var slot=0;slot<timeslots;slot++){var slotIdx=grp*timeslots+slot,minFromStart=slotIdx*step;slots[slotIdx]=groups[grp][slot]=localizer.getSlotDate(start,minutesFromMidnight,minFromStart)}}var lastSlotMinFromStart=slots.length*step;function positionFromDate(date){var diff=localizer.diff(start,date,"minutes")+localizer.getDstOffset(start,date);return Math.min(diff,totalMin)}return slots.push(localizer.getSlotDate(start,minutesFromMidnight,lastSlotMinFromStart)),{groups:groups,update:function update(args){return getKey(args)!==key?getSlotMetrics(args):this},dateIsInGroup:function dateIsInGroup(date,groupIndex){var nextGroup=groups[groupIndex+1];return localizer.inRange(date,groups[groupIndex][0],nextGroup?nextGroup[0]:end,"minutes")},nextSlot:function nextSlot(slot){var next=slots[Math.min(slots.findIndex((function(s){return s===slot||localizer.eq(s,slot)}))+1,slots.length-1)];return localizer.eq(next,slot)&&(next=localizer.add(slot,step,"minutes")),next},closestSlotToPosition:function closestSlotToPosition(percent){var slot=Math.min(slots.length-1,Math.max(0,Math.floor(percent*numSlots)));return slots[slot]},closestSlotFromPoint:function closestSlotFromPoint(point,boundaryRect){var range=Math.abs(boundaryRect.top-boundaryRect.bottom);return this.closestSlotToPosition((point.y-boundaryRect.top)/range)},closestSlotFromDate:function closestSlotFromDate(date){var offset=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(localizer.lt(date,start,"minutes"))return slots[0];if(localizer.gt(date,end,"minutes"))return slots[slots.length-1];var diffMins=localizer.diff(start,date,"minutes");return slots[(diffMins-diffMins%step)/step+offset]},startsBeforeDay:function startsBeforeDay(date){return localizer.lt(date,start,"day")},startsAfterDay:function startsAfterDay(date){return localizer.gt(date,end,"day")},startsBefore:function startsBefore(date){return localizer.lt(localizer.merge(start,date),start,"minutes")},startsAfter:function startsAfter(date){return localizer.gt(localizer.merge(end,date),end,"minutes")},getRange:function getRange(rangeStart,rangeEnd,ignoreMin,ignoreMax){ignoreMin||(rangeStart=localizer.min(end,localizer.max(start,rangeStart))),ignoreMax||(rangeEnd=localizer.min(end,localizer.max(start,rangeEnd)));var rangeStartMin=positionFromDate(rangeStart),rangeEndMin=positionFromDate(rangeEnd),top=rangeEndMin>step*numSlots&&!localizer.eq(end,rangeEnd)?(rangeStartMin-step)/(step*numSlots)*100:rangeStartMin/(step*numSlots)*100;return{top:top,height:rangeEndMin/(step*numSlots)*100-top,start:positionFromDate(rangeStart),startDate:rangeStart,end:positionFromDate(rangeEnd),endDate:rangeEnd}},getCurrentTimePosition:function getCurrentTimePosition(rangeStart){return positionFromDate(rangeStart)/(step*numSlots)*100}}}var selection=__webpack_require__("./src/utils/selection.js"),helpers=__webpack_require__("./src/utils/helpers.js"),sortBy=(__webpack_require__("./node_modules/core-js/modules/es.array.splice.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/lodash/sortBy.js")),sortBy_default=__webpack_require__.n(sortBy),Event=function(){return(0,createClass.default)((function Event(data,_ref){var accessors=_ref.accessors,slotMetrics=_ref.slotMetrics;(0,classCallCheck.default)(this,Event);var _slotMetrics$getRange=slotMetrics.getRange(accessors.start(data),accessors.end(data)),start=_slotMetrics$getRange.start,startDate=_slotMetrics$getRange.startDate,end=_slotMetrics$getRange.end,endDate=_slotMetrics$getRange.endDate,top=_slotMetrics$getRange.top,height=_slotMetrics$getRange.height;this.start=start,this.end=end,this.startMs=+startDate,this.endMs=+endDate,this.top=top,this.height=height,this.data=data}),[{key:"_width",get:function get(){return this.rows?100/(this.rows.reduce((function(max,row){return Math.max(max,row.leaves.length+1)}),0)+1):this.leaves?(100-this.container._width)/(this.leaves.length+1):this.row._width}},{key:"width",get:function get(){var noOverlap=this._width,overlap=Math.min(100,1.7*this._width);if(this.rows)return overlap;if(this.leaves)return this.leaves.length>0?overlap:noOverlap;var leaves=this.row.leaves;return leaves.indexOf(this)===leaves.length-1?noOverlap:overlap}},{key:"xOffset",get:function get(){if(this.rows)return 0;if(this.leaves)return this.container._width;var _this$row=this.row,leaves=_this$row.leaves,xOffset=_this$row.xOffset,_width=_this$row._width;return xOffset+(leaves.indexOf(this)+1)*_width}}])}();function onSameRow(a,b,minimumStartDifference){return Math.abs(b.start-a.start)<minimumStartDifference||b.start>a.start&&b.start<a.end}function getStyledEvents(_ref2){for(var events=_ref2.events,minimumStartDifference=_ref2.minimumStartDifference,slotMetrics=_ref2.slotMetrics,accessors=_ref2.accessors,eventsInRenderOrder=function sortByRender(events){for(var sortedByTime=sortBy_default()(events,["startMs",function(e){return-e.endMs}]),sorted=[];sortedByTime.length>0;){var event=sortedByTime.shift();sorted.push(event);for(var i=0;i<sortedByTime.length;i++){var test=sortedByTime[i];if(!(event.endMs>test.startMs)){if(i>0){var _event=sortedByTime.splice(i,1)[0];sorted.push(_event)}break}}}return sorted}(events.map((function(event){return new Event(event,{slotMetrics:slotMetrics,accessors:accessors})}))),containerEvents=[],_loop=function _loop(){var event=eventsInRenderOrder[i],container=containerEvents.find((function(c){return c.end>event.start||Math.abs(event.start-c.start)<minimumStartDifference}));if(!container)return event.rows=[],containerEvents.push(event),1;event.container=container;for(var row=null,j=container.rows.length-1;!row&&j>=0;j--)onSameRow(container.rows[j],event,minimumStartDifference)&&(row=container.rows[j]);row?(row.leaves.push(event),event.row=row):(event.leaves=[],container.rows.push(event))},i=0;i<eventsInRenderOrder.length;i++)_loop();return eventsInRenderOrder.map((function(event){return{event:event.data,style:{top:event.top,height:event.height,width:event.width,xOffset:Math.max(0,event.xOffset)}}}))}function getMaxIdxDFS(node,maxIdx,visited){for(var i=0;i<node.friends.length;++i)if(!(visited.indexOf(node.friends[i])>-1)){maxIdx=maxIdx>node.friends[i].idx?maxIdx:node.friends[i].idx,visited.push(node.friends[i]);var newIdx=getMaxIdxDFS(node.friends[i],maxIdx,visited);maxIdx=maxIdx>newIdx?maxIdx:newIdx}return maxIdx}var DefaultAlgorithms={overlap:getStyledEvents,"no-overlap":function no_overlap(_ref){var styledEvents=getStyledEvents({events:_ref.events,minimumStartDifference:_ref.minimumStartDifference,slotMetrics:_ref.slotMetrics,accessors:_ref.accessors});styledEvents.sort((function(a,b){return a=a.style,b=b.style,a.top!==b.top?a.top>b.top?1:-1:a.height!==b.height?a.top+a.height<b.top+b.height?1:-1:0}));for(var i=0;i<styledEvents.length;++i)styledEvents[i].friends=[],delete styledEvents[i].style.left,delete styledEvents[i].style.left,delete styledEvents[i].idx,delete styledEvents[i].size;for(var _i3=0;_i3<styledEvents.length-1;++_i3)for(var se1=styledEvents[_i3],y1=se1.style.top,y2=se1.style.top+se1.style.height,j=_i3+1;j<styledEvents.length;++j){var se2=styledEvents[j],y3=se2.style.top,y4=se2.style.top+se2.style.height;(y3>=y1&&y4<=y2||y4>y1&&y4<=y2||y3>=y1&&y3<y2)&&(se1.friends.push(se2),se2.friends.push(se1))}for(var _i6=0;_i6<styledEvents.length;++_i6){for(var se=styledEvents[_i6],bitmap=[],_j3=0;_j3<100;++_j3)bitmap.push(1);for(var _j6=0;_j6<se.friends.length;++_j6)void 0!==se.friends[_j6].idx&&(bitmap[se.friends[_j6].idx]=0);se.idx=bitmap.indexOf(1)}for(var _i9=0;_i9<styledEvents.length;++_i9){var size;if(!styledEvents[_i9].size){var allFriends=[];size=100/(getMaxIdxDFS(styledEvents[_i9],0,allFriends)+1),styledEvents[_i9].size=size;for(var _j9=0;_j9<allFriends.length;++_j9)allFriends[_j9].size=size}}for(var _i12=0;_i12<styledEvents.length;++_i12){var e=styledEvents[_i12];e.style.left=e.idx*e.size;for(var _maxIdx=0,_j12=0;_j12<e.friends.length;++_j12){var idx=e.friends[_j12].idx;_maxIdx=_maxIdx>idx?_maxIdx:idx}_maxIdx<=e.idx&&(e.size=100-e.idx*e.size);var padding=0===e.idx?0:3;e.style.width="calc(".concat(e.size,"% - ").concat(padding,"px)"),e.style.height="calc(".concat(e.style.height,"% - 2px)"),e.style.xOffset="calc(".concat(e.style.left,"% + ").concat(padding,"px)")}return styledEvents}};var BackgroundWrapper=__webpack_require__("./src/BackgroundWrapper.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),TimeSlotGroup=function(_Component){function TimeSlotGroup(){return(0,classCallCheck.default)(this,TimeSlotGroup),(0,callSuper.default)(this,TimeSlotGroup,arguments)}return(0,inherits.default)(TimeSlotGroup,_Component),(0,createClass.default)(TimeSlotGroup,[{key:"render",value:function render(){var _this$props=this.props,renderSlot=_this$props.renderSlot,resource=_this$props.resource,group=_this$props.group,getters=_this$props.getters,_this$props$component=_this$props.components,_this$props$component2=(_this$props$component=void 0===_this$props$component?{}:_this$props$component).timeSlotWrapper,Wrapper=void 0===_this$props$component2?BackgroundWrapper.A:_this$props$component2,groupProps=getters?getters.slotGroupProp(group):{};return(0,jsx_runtime.jsx)("div",Object.assign({className:"rbc-timeslot-group"},groupProps,{children:group.map((function(value,idx){var slotProps=getters?getters.slotProp(value,resource):{};return(0,jsx_runtime.jsx)(Wrapper,{value:value,resource:resource,children:(0,jsx_runtime.jsx)("div",Object.assign({},slotProps,{className:(0,clsx_m.A)("rbc-time-slot",slotProps.className),children:renderSlot&&renderSlot(value,idx)}))},idx)}))}))}}])}(react.Component);TimeSlotGroup.__docgenInfo={description:"",methods:[],displayName:"TimeSlotGroup",props:{renderSlot:{description:"",type:{name:"func"},required:!1},group:{description:"",type:{name:"array"},required:!0},resource:{description:"",type:{name:"any"},required:!1},components:{description:"",type:{name:"object"},required:!1},getters:{description:"",type:{name:"object"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/TimeSlotGroup.js"]={name:"TimeSlotGroup",docgenInfo:TimeSlotGroup.__docgenInfo,path:"src/TimeSlotGroup.js"});var TimeGridEvent=__webpack_require__("./src/TimeGridEvent.js"),DayColumnWrapper=(__webpack_require__("./src/utils/propTypes.js"),function DayColumnWrapper(_ref){var children=_ref.children,className=_ref.className,style=_ref.style,innerRef=_ref.innerRef;return(0,jsx_runtime.jsx)("div",{className:className,style:style,ref:innerRef,children:children})});DayColumnWrapper.displayName="DayColumnWrapper";var src_DayColumnWrapper=react.forwardRef((function(props,ref){return(0,jsx_runtime.jsx)(DayColumnWrapper,Object.assign({},props,{innerRef:ref}))})),_excluded=["dayProp"],_excluded2=["eventContainerWrapper"],DayColumn=function(_React$Component){function DayColumn(){var _this;(0,classCallCheck.default)(this,DayColumn);for(var _len=arguments.length,_args=new Array(_len),_key=0;_key<_len;_key++)_args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,DayColumn,[].concat(_args))).state={selecting:!1,timeIndicatorPosition:null},_this.intervalTriggered=!1,_this.renderEvents=function(_ref){var events=_ref.events,isBackgroundEvent=_ref.isBackgroundEvent,_this$props=_this.props,rtl=_this$props.rtl,selected=_this$props.selected,accessors=_this$props.accessors,localizer=_this$props.localizer,getters=_this$props.getters,components=_this$props.components,step=_this$props.step,timeslots=_this$props.timeslots,dayLayoutAlgorithm=_this$props.dayLayoutAlgorithm,resizable=_this$props.resizable,slotMetrics=_this.slotMetrics,messages=localizer.messages,styledEvents=function DayEventLayout_getStyledEvents(_ref){_ref.events,_ref.minimumStartDifference,_ref.slotMetrics,_ref.accessors;var dayLayoutAlgorithm=_ref.dayLayoutAlgorithm,algorithm=dayLayoutAlgorithm;return dayLayoutAlgorithm in DefaultAlgorithms&&(algorithm=DefaultAlgorithms[dayLayoutAlgorithm]),function isFunction(a){return!!(a&&a.constructor&&a.call&&a.apply)}(algorithm)?algorithm.apply(this,arguments):[]}({events:events,accessors:accessors,slotMetrics:slotMetrics,minimumStartDifference:Math.ceil(step*timeslots/2),dayLayoutAlgorithm:dayLayoutAlgorithm});return styledEvents.map((function(_ref2,idx){var label,event=_ref2.event,style=_ref2.style,end=accessors.end(event),start=accessors.start(event),format="eventTimeRangeFormat",startsBeforeDay=slotMetrics.startsBeforeDay(start),startsAfterDay=slotMetrics.startsAfterDay(end);startsBeforeDay?format="eventTimeRangeEndFormat":startsAfterDay&&(format="eventTimeRangeStartFormat"),label=startsBeforeDay&&startsAfterDay?messages.allDay:localizer.format({start:start,end:end},format);var continuesPrior=startsBeforeDay||slotMetrics.startsBefore(start),continuesAfter=startsAfterDay||slotMetrics.startsAfter(end);return(0,jsx_runtime.jsx)(TimeGridEvent.A,{style:style,event:event,label:label,getters:getters,rtl:rtl,components:components,continuesPrior:continuesPrior,continuesAfter:continuesAfter,accessors:accessors,resource:_this.props.resource,selected:(0,selection.sp)(event,selected),onClick:function onClick(e){return _this._select(Object.assign({},event,_this.props.resource&&{sourceResource:_this.props.resource},isBackgroundEvent&&{isBackgroundEvent:!0}),e)},onDoubleClick:function onDoubleClick(e){return _this._doubleClick(event,e)},isBackgroundEvent:isBackgroundEvent,onKeyPress:function onKeyPress(e){return _this._keyPress(event,e)},resizable:resizable},"evt_"+idx)}))},_this._selectable=function(){var node=_this.containerRef.current,_this$props2=_this.props,longPressThreshold=_this$props2.longPressThreshold,localizer=_this$props2.localizer,selector=_this._selector=new Selection.Ay((function(){return node}),{longPressThreshold:longPressThreshold}),maybeSelect=function maybeSelect(box){var onSelecting=_this.props.onSelecting,current=_this.state||{},state=selectionState(box),start=state.startDate,end=state.endDate;onSelecting&&(localizer.eq(current.startDate,start,"minutes")&&localizer.eq(current.endDate,end,"minutes")||!1===onSelecting({start:start,end:end,resourceId:_this.props.resource}))||_this.state.start===state.start&&_this.state.end===state.end&&_this.state.selecting===state.selecting||_this.setState(state)},selectionState=function selectionState(point){var currentSlot=_this.slotMetrics.closestSlotFromPoint(point,(0,Selection.rF)(node));_this.state.selecting||(_this._initialSlot=currentSlot);var initialSlot=_this._initialSlot;localizer.lte(initialSlot,currentSlot)?currentSlot=_this.slotMetrics.nextSlot(currentSlot):localizer.gt(initialSlot,currentSlot)&&(initialSlot=_this.slotMetrics.nextSlot(initialSlot));var selectRange=_this.slotMetrics.getRange(localizer.min(initialSlot,currentSlot),localizer.max(initialSlot,currentSlot));return Object.assign({},selectRange,{selecting:!0,top:"".concat(selectRange.top,"%"),height:"".concat(selectRange.height,"%")})},selectorClicksHandler=function selectorClicksHandler(box,actionType){if(!(0,Selection.xH)(_this.containerRef.current,box)){var _selectionState=selectionState(box),startDate=_selectionState.startDate,endDate=_selectionState.endDate;_this._selectSlot({startDate:startDate,endDate:endDate,action:actionType,box:box})}_this.setState({selecting:!1})};selector.on("selecting",maybeSelect),selector.on("selectStart",maybeSelect),selector.on("beforeSelect",(function(box){if("ignoreEvents"===_this.props.selectable)return!(0,Selection.xH)(_this.containerRef.current,box)})),selector.on("click",(function(box){return selectorClicksHandler(box,"click")})),selector.on("doubleClick",(function(box){return selectorClicksHandler(box,"doubleClick")})),selector.on("select",(function(bounds){_this.state.selecting&&(_this._selectSlot(Object.assign({},_this.state,{action:"select",bounds:bounds})),_this.setState({selecting:!1}))})),selector.on("reset",(function(){_this.state.selecting&&_this.setState({selecting:!1})}))},_this._teardownSelectable=function(){_this._selector&&(_this._selector.teardown(),_this._selector=null)},_this._selectSlot=function(_ref3){for(var startDate=_ref3.startDate,endDate=_ref3.endDate,action=_ref3.action,bounds=_ref3.bounds,box=_ref3.box,current=startDate,slots=[];_this.props.localizer.lte(current,endDate);)slots.push(current),current=new Date(+current+60*_this.props.step*1e3);(0,helpers.me)(_this.props.onSelectSlot,{slots:slots,start:startDate,end:endDate,resourceId:_this.props.resource,action:action,bounds:bounds,box:box})},_this._select=function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];(0,helpers.me)(_this.props.onSelectEvent,args)},_this._doubleClick=function(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++)args[_key3]=arguments[_key3];(0,helpers.me)(_this.props.onDoubleClickEvent,args)},_this._keyPress=function(){for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++)args[_key4]=arguments[_key4];(0,helpers.me)(_this.props.onKeyPressEvent,args)},_this.slotMetrics=getSlotMetrics(_this.props),_this.containerRef=(0,react.createRef)(),_this}return(0,inherits.default)(DayColumn,_React$Component),(0,createClass.default)(DayColumn,[{key:"componentDidMount",value:function componentDidMount(){this.props.selectable&&this._selectable(),this.props.isNow&&this.setTimeIndicatorPositionUpdateInterval()}},{key:"componentWillUnmount",value:function componentWillUnmount(){this._teardownSelectable(),this.clearTimeIndicatorInterval()}},{key:"componentDidUpdate",value:function componentDidUpdate(prevProps,prevState){this.props.selectable&&!prevProps.selectable&&this._selectable(),!this.props.selectable&&prevProps.selectable&&this._teardownSelectable();var _this$props3=this.props,getNow=_this$props3.getNow,isNow=_this$props3.isNow,localizer=_this$props3.localizer,date=_this$props3.date,min=_this$props3.min,max=_this$props3.max,getNowChanged=localizer.neq(prevProps.getNow(),getNow(),"minutes");if(prevProps.isNow!==isNow||getNowChanged){if(this.clearTimeIndicatorInterval(),isNow){var tail=!getNowChanged&&localizer.eq(prevProps.date,date,"minutes")&&prevState.timeIndicatorPosition===this.state.timeIndicatorPosition;this.setTimeIndicatorPositionUpdateInterval(tail)}}else isNow&&(localizer.neq(prevProps.min,min,"minutes")||localizer.neq(prevProps.max,max,"minutes"))&&this.positionTimeIndicator()}},{key:"setTimeIndicatorPositionUpdateInterval",value:function setTimeIndicatorPositionUpdateInterval(){var _this3=this,tail=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.intervalTriggered||tail||this.positionTimeIndicator(),this._timeIndicatorTimeout=window.setTimeout((function(){_this3.intervalTriggered=!0,_this3.positionTimeIndicator(),_this3.setTimeIndicatorPositionUpdateInterval()}),6e4)}},{key:"clearTimeIndicatorInterval",value:function clearTimeIndicatorInterval(){this.intervalTriggered=!1,window.clearTimeout(this._timeIndicatorTimeout)}},{key:"positionTimeIndicator",value:function positionTimeIndicator(){var _this$props4=this.props,min=_this$props4.min,max=_this$props4.max,current=(0,_this$props4.getNow)();if(current>=min&&current<=max){var top=this.slotMetrics.getCurrentTimePosition(current);this.intervalTriggered=!0,this.setState({timeIndicatorPosition:top})}else this.clearTimeIndicatorInterval()}},{key:"render",value:function render(){var _this$props5=this.props,date=_this$props5.date,max=_this$props5.max,rtl=_this$props5.rtl,isNow=_this$props5.isNow,resource=_this$props5.resource,accessors=_this$props5.accessors,localizer=_this$props5.localizer,_this$props5$getters=_this$props5.getters,dayProp=_this$props5$getters.dayProp,getters=(0,objectWithoutProperties.A)(_this$props5$getters,_excluded),_this$props5$componen=_this$props5.components,EventContainer=_this$props5$componen.eventContainerWrapper,components=(0,objectWithoutProperties.A)(_this$props5$componen,_excluded2);this.slotMetrics=this.slotMetrics.update(this.props);var slotMetrics=this.slotMetrics,_this$state=this.state,selecting=_this$state.selecting,top=_this$state.top,height=_this$state.height,selectDates={start:_this$state.startDate,end:_this$state.endDate},_dayProp=dayProp(max,resource),className=_dayProp.className,style=_dayProp.style,DayColumnWrapperComponent=components.dayColumnWrapper||src_DayColumnWrapper;return(0,jsx_runtime.jsxs)(DayColumnWrapperComponent,{ref:this.containerRef,date:date,style:style,className:(0,clsx_m.A)(className,"rbc-day-slot","rbc-time-column",isNow&&"rbc-now",isNow&&"rbc-today",selecting&&"rbc-slot-selecting"),slotMetrics:slotMetrics,resource:resource,children:[slotMetrics.groups.map((function(grp,idx){return(0,jsx_runtime.jsx)(TimeSlotGroup,{group:grp,resource:resource,getters:getters,components:components},idx)})),(0,jsx_runtime.jsx)(EventContainer,{localizer:localizer,resource:resource,accessors:accessors,getters:getters,components:components,slotMetrics:slotMetrics,children:(0,jsx_runtime.jsxs)("div",{className:(0,clsx_m.A)("rbc-events-container",rtl&&"rtl"),children:[this.renderEvents({events:this.props.backgroundEvents,isBackgroundEvent:!0}),this.renderEvents({events:this.props.events})]})}),selecting&&(0,jsx_runtime.jsx)("div",{className:"rbc-slot-selection",style:{top:top,height:height},children:(0,jsx_runtime.jsx)("span",{children:localizer.format(selectDates,"selectRangeFormat")})}),isNow&&this.intervalTriggered&&(0,jsx_runtime.jsx)("div",{className:"rbc-current-time-indicator",style:{top:"".concat(this.state.timeIndicatorPosition,"%")}})]})}}])}(react.Component);DayColumn.defaultProps={dragThroughEvents:!0,timeslots:2},DayColumn.__docgenInfo={description:"",methods:[{name:"setTimeIndicatorPositionUpdateInterval",docblock:"@param tail {Boolean} - whether `positionTimeIndicator` call should be\n  deferred or called upon setting interval (`true` - if deferred);",modifiers:[],params:[{name:"tail",description:"{Boolean} - whether `positionTimeIndicator` call should be\n  deferred or called upon setting interval (`true` - if deferred);",type:null,optional:!1}],returns:null,description:null},{name:"clearTimeIndicatorInterval",docblock:null,modifiers:[],params:[],returns:null},{name:"positionTimeIndicator",docblock:null,modifiers:[],params:[],returns:null},{name:"renderEvents",docblock:null,modifiers:[],params:[{name:"{ events, isBackgroundEvent }",type:null}],returns:null},{name:"_selectable",docblock:null,modifiers:[],params:[],returns:null},{name:"_teardownSelectable",docblock:null,modifiers:[],params:[],returns:null},{name:"_selectSlot",docblock:null,modifiers:[],params:[{name:"{ startDate, endDate, action, bounds, box }",type:null}],returns:null},{name:"_select",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"_doubleClick",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"_keyPress",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null}],displayName:"DayColumn",props:{dragThroughEvents:{defaultValue:{value:"true",computed:!1},description:"",type:{name:"bool"},required:!1},timeslots:{defaultValue:{value:"2",computed:!1},description:"",type:{name:"number"},required:!1},events:{description:"",type:{name:"array"},required:!0},backgroundEvents:{description:"",type:{name:"array"},required:!0},step:{description:"",type:{name:"number"},required:!0},date:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},min:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},max:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},getNow:{description:"",type:{name:"func"},required:!0},isNow:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},showMultiDayTimes:{description:"",type:{name:"bool"},required:!1},culture:{description:"",type:{name:"string"},required:!1},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},eventOffset:{description:"",type:{name:"number"},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onSelecting:{description:"",type:{name:"func"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!0},onSelectEvent:{description:"",type:{name:"func"},required:!0},onDoubleClickEvent:{description:"",type:{name:"func"},required:!0},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},className:{description:"",type:{name:"string"},required:!1},resource:{description:"",type:{name:"any"},required:!1},dayLayoutAlgorithm:{description:"",type:{name:"custom",raw:"DayLayoutAlgorithmPropType"},required:!1}}};var src_DayColumn=DayColumn;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/DayColumn.js"]={name:"DayColumn",docgenInfo:DayColumn.__docgenInfo,path:"src/DayColumn.js"});var PopOverlay=__webpack_require__("./src/PopOverlay.js"),scrollbarSize=__webpack_require__("./node_modules/dom-helpers/esm/scrollbarSize.js"),DateContentRow=__webpack_require__("./src/DateContentRow.js"),Header=__webpack_require__("./src/Header.js"),ResourceHeader=function ResourceHeader(_ref){var label=_ref.label;return(0,jsx_runtime.jsx)(react.Fragment,{children:label})};ResourceHeader.displayName="ResourceHeader",ResourceHeader.__docgenInfo={description:"",methods:[],displayName:"ResourceHeader",props:{label:{description:"",type:{name:"node"},required:!1},index:{description:"",type:{name:"number"},required:!1},resource:{description:"",type:{name:"object"},required:!1}}};var src_ResourceHeader=ResourceHeader;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ResourceHeader.js"]={name:"ResourceHeader",docgenInfo:ResourceHeader.__docgenInfo,path:"src/ResourceHeader.js"});var TimeGridHeader=function(_React$Component){function TimeGridHeader(){var _this;(0,classCallCheck.default)(this,TimeGridHeader);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,TimeGridHeader,[].concat(args))).handleHeaderClick=function(date,view,e){e.preventDefault(),(0,helpers.me)(_this.props.onDrillDown,[date,view])},_this.renderRow=function(resource){var _this$props=_this.props,events=_this$props.events,rtl=_this$props.rtl,selectable=_this$props.selectable,getNow=_this$props.getNow,range=_this$props.range,getters=_this$props.getters,localizer=_this$props.localizer,accessors=_this$props.accessors,components=_this$props.components,resizable=_this$props.resizable,resourceId=accessors.resourceId(resource),eventsToDisplay=resource?events.filter((function(event){return accessors.resource(event)===resourceId})):events;return(0,jsx_runtime.jsx)(DateContentRow.A,{isAllDay:!0,rtl:rtl,getNow:getNow,minRows:2,maxRows:_this.props.allDayMaxRows+1,range:range,events:eventsToDisplay,resourceId:resourceId,className:"rbc-allday-cell",selectable:selectable,selected:_this.props.selected,components:components,accessors:accessors,getters:getters,localizer:localizer,onSelect:_this.props.onSelectEvent,onShowMore:_this.props.onShowMore,onDoubleClick:_this.props.onDoubleClickEvent,onKeyPress:_this.props.onKeyPressEvent,onSelectSlot:_this.props.onSelectSlot,longPressThreshold:_this.props.longPressThreshold,resizable:resizable})},_this}return(0,inherits.default)(TimeGridHeader,_React$Component),(0,createClass.default)(TimeGridHeader,[{key:"renderHeaderCells",value:function renderHeaderCells(range){var _this2=this,_this$props2=this.props,localizer=_this$props2.localizer,getDrilldownView=_this$props2.getDrilldownView,getNow=_this$props2.getNow,dayProp=_this$props2.getters.dayProp,_this$props2$componen=_this$props2.components.header,HeaderComponent=void 0===_this$props2$componen?Header.A:_this$props2$componen,today=getNow();return range.map((function(date,i){var drilldownView=getDrilldownView(date),label=localizer.format(date,"dayFormat"),_dayProp=dayProp(date),className=_dayProp.className,style=_dayProp.style,header=(0,jsx_runtime.jsx)(HeaderComponent,{date:date,label:label,localizer:localizer});return(0,jsx_runtime.jsx)("div",{style:style,className:(0,clsx_m.A)("rbc-header",className,localizer.isSameDate(date,today)&&"rbc-today"),children:drilldownView?(0,jsx_runtime.jsx)("button",{type:"button",className:"rbc-button-link",onClick:function onClick(e){return _this2.handleHeaderClick(date,drilldownView,e)},children:header}):(0,jsx_runtime.jsx)("span",{children:header})},i)}))}},{key:"render",value:function render(){var _this3=this,_this$props3=this.props,width=_this$props3.width,rtl=_this$props3.rtl,resources=_this$props3.resources,range=_this$props3.range,events=_this$props3.events,getNow=_this$props3.getNow,accessors=_this$props3.accessors,selectable=_this$props3.selectable,components=_this$props3.components,getters=_this$props3.getters,scrollRef=_this$props3.scrollRef,localizer=_this$props3.localizer,isOverflowing=_this$props3.isOverflowing,_this$props3$componen=_this$props3.components,TimeGutterHeader=_this$props3$componen.timeGutterHeader,_this$props3$componen2=_this$props3$componen.resourceHeader,ResourceHeaderComponent=void 0===_this$props3$componen2?src_ResourceHeader:_this$props3$componen2,resizable=_this$props3.resizable,style={};isOverflowing&&(style[rtl?"marginLeft":"marginRight"]="".concat((0,scrollbarSize.A)()-1,"px"));var groupedEvents=resources.groupEvents(events);return(0,jsx_runtime.jsxs)("div",{style:style,ref:scrollRef,className:(0,clsx_m.A)("rbc-time-header",isOverflowing&&"rbc-overflowing"),children:[(0,jsx_runtime.jsx)("div",{className:"rbc-label rbc-time-header-gutter",style:{width:width,minWidth:width,maxWidth:width},children:TimeGutterHeader&&(0,jsx_runtime.jsx)(TimeGutterHeader,{})}),resources.map((function(_ref,idx){var _ref2=(0,slicedToArray.A)(_ref,2),id=_ref2[0],resource=_ref2[1];return(0,jsx_runtime.jsxs)("div",{className:"rbc-time-header-content",children:[resource&&(0,jsx_runtime.jsx)("div",{className:"rbc-row rbc-row-resource",children:(0,jsx_runtime.jsx)("div",{className:"rbc-header",children:(0,jsx_runtime.jsx)(ResourceHeaderComponent,{index:idx,label:accessors.resourceTitle(resource),resource:resource})})},"resource_".concat(idx)),(0,jsx_runtime.jsx)("div",{className:"rbc-row rbc-time-header-cell".concat(range.length<=1?" rbc-time-header-cell-single-day":""),children:_this3.renderHeaderCells(range)}),(0,jsx_runtime.jsx)(DateContentRow.A,{isAllDay:!0,rtl:rtl,getNow:getNow,minRows:2,maxRows:_this3.props.allDayMaxRows+1,range:range,events:groupedEvents.get(id)||[],resourceId:resource&&id,className:"rbc-allday-cell",selectable:selectable,selected:_this3.props.selected,components:components,accessors:accessors,getters:getters,localizer:localizer,onSelect:_this3.props.onSelectEvent,onShowMore:_this3.props.onShowMore,onDoubleClick:_this3.props.onDoubleClickEvent,onKeyDown:_this3.props.onKeyPressEvent,onSelectSlot:_this3.props.onSelectSlot,longPressThreshold:_this3.props.longPressThreshold,resizable:resizable})]},id||idx)}))]})}}])}(react.Component);TimeGridHeader.__docgenInfo={description:"",methods:[{name:"handleHeaderClick",docblock:null,modifiers:[],params:[{name:"date",type:null},{name:"view",type:null},{name:"e",type:null}],returns:null},{name:"renderHeaderCells",docblock:null,modifiers:[],params:[{name:"range",type:null}],returns:null},{name:"renderRow",docblock:null,modifiers:[],params:[{name:"resource",type:null}],returns:null}],displayName:"TimeGridHeader",props:{range:{description:"",type:{name:"array"},required:!0},events:{description:"",type:{name:"array"},required:!0},resources:{description:"",type:{name:"object"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},isOverflowing:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},width:{description:"",type:{name:"number"},required:!1},localizer:{description:"",type:{name:"object"},required:!0},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},allDayMaxRows:{description:"",type:{name:"number"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelectEvent:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},getDrilldownView:{description:"",type:{name:"func"},required:!0},scrollRef:{description:"",type:{name:"any"},required:!1}}};var src_TimeGridHeader=TimeGridHeader;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/TimeGridHeader.js"]={name:"TimeGridHeader",docgenInfo:TimeGridHeader.__docgenInfo,path:"src/TimeGridHeader.js"});var TimeGridHeaderResources=function(_React$Component){function TimeGridHeaderResources(){var _this;(0,classCallCheck.default)(this,TimeGridHeaderResources);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,TimeGridHeaderResources,[].concat(args))).handleHeaderClick=function(date,view,e){e.preventDefault(),(0,helpers.me)(_this.props.onDrillDown,[date,view])},_this}return(0,inherits.default)(TimeGridHeaderResources,_React$Component),(0,createClass.default)(TimeGridHeaderResources,[{key:"renderHeaderCells",value:function renderHeaderCells(range){var _this2=this,_this$props=this.props,localizer=_this$props.localizer,getDrilldownView=_this$props.getDrilldownView,getNow=_this$props.getNow,dayProp=_this$props.getters.dayProp,_this$props$component=_this$props.components,_this$props$component2=_this$props$component.header,HeaderComponent=void 0===_this$props$component2?Header.A:_this$props$component2,_this$props$component3=_this$props$component.resourceHeader,ResourceHeaderComponent=void 0===_this$props$component3?src_ResourceHeader:_this$props$component3,resources=_this$props.resources,accessors=_this$props.accessors,events=_this$props.events,rtl=_this$props.rtl,selectable=_this$props.selectable,components=_this$props.components,getters=_this$props.getters,resizable=_this$props.resizable,today=getNow(),groupedEvents=resources.groupEvents(events);return range.map((function(date,idx){var drilldownView=getDrilldownView(date),label=localizer.format(date,"dayFormat"),_dayProp=dayProp(date),className=_dayProp.className,style=_dayProp.style,header=(0,jsx_runtime.jsx)(HeaderComponent,{date:date,label:label,localizer:localizer});return(0,jsx_runtime.jsxs)("div",{className:"rbc-time-header-content rbc-resource-grouping",children:[(0,jsx_runtime.jsx)("div",{className:"rbc-row rbc-time-header-cell".concat(range.length<=1?" rbc-time-header-cell-single-day":""),children:(0,jsx_runtime.jsx)("div",{style:style,className:(0,clsx_m.A)("rbc-header",className,localizer.isSameDate(date,today)&&"rbc-today"),children:drilldownView?(0,jsx_runtime.jsx)("button",{type:"button",className:"rbc-button-link",onClick:function onClick(e){return _this2.handleHeaderClick(date,drilldownView,e)},children:header}):(0,jsx_runtime.jsx)("span",{children:header})})}),(0,jsx_runtime.jsx)("div",{className:"rbc-row",children:resources.map((function(_ref,idx){var _ref2=(0,slicedToArray.A)(_ref,2),id=_ref2[0],resource=_ref2[1];return(0,jsx_runtime.jsx)("div",{className:(0,clsx_m.A)("rbc-header",className,localizer.isSameDate(date,today)&&"rbc-today"),children:(0,jsx_runtime.jsx)(ResourceHeaderComponent,{index:idx,label:accessors.resourceTitle(resource),resource:resource})},"resource_".concat(id,"_").concat(idx))}))}),(0,jsx_runtime.jsx)("div",{className:"rbc-row rbc-m-b-negative-3 rbc-h-full",children:resources.map((function(_ref3,idx){var _ref4=(0,slicedToArray.A)(_ref3,2),id=_ref4[0],resource=_ref4[1],filteredEvents=(groupedEvents.get(id)||[]).filter((function(event){return localizer.isSameDate(event.start,date)||localizer.isSameDate(event.end,date)}));return(0,jsx_runtime.jsx)(DateContentRow.A,{isAllDay:!0,rtl:rtl,getNow:getNow,minRows:2,maxRows:_this2.props.allDayMaxRows+1,range:[date],events:filteredEvents,resourceId:resource&&id,className:"rbc-allday-cell",selectable:selectable,selected:_this2.props.selected,components:components,accessors:accessors,getters:getters,localizer:localizer,onSelect:_this2.props.onSelectEvent,onShowMore:_this2.props.onShowMore,onDoubleClick:_this2.props.onDoubleClickEvent,onKeyDown:_this2.props.onKeyPressEvent,onSelectSlot:_this2.props.onSelectSlot,longPressThreshold:_this2.props.longPressThreshold,resizable:resizable},"resource_".concat(id,"_").concat(idx))}))})]},idx)}))}},{key:"render",value:function render(){var _this$props2=this.props,width=_this$props2.width,rtl=_this$props2.rtl,range=_this$props2.range,scrollRef=_this$props2.scrollRef,isOverflowing=_this$props2.isOverflowing,TimeGutterHeader=_this$props2.components.timeGutterHeader,style={};return isOverflowing&&(style[rtl?"marginLeft":"marginRight"]="".concat((0,scrollbarSize.A)()-1,"px")),(0,jsx_runtime.jsxs)("div",{style:style,ref:scrollRef,className:(0,clsx_m.A)("rbc-time-header",isOverflowing&&"rbc-overflowing"),children:[(0,jsx_runtime.jsx)("div",{className:"rbc-label rbc-time-header-gutter",style:{width:width,minWidth:width,maxWidth:width},children:TimeGutterHeader&&(0,jsx_runtime.jsx)(TimeGutterHeader,{})}),this.renderHeaderCells(range)]})}}])}(react.Component);TimeGridHeaderResources.__docgenInfo={description:"",methods:[{name:"handleHeaderClick",docblock:null,modifiers:[],params:[{name:"date",type:null},{name:"view",type:null},{name:"e",type:null}],returns:null},{name:"renderHeaderCells",docblock:null,modifiers:[],params:[{name:"range",type:null}],returns:null}],displayName:"TimeGridHeaderResources",props:{range:{description:"",type:{name:"array"},required:!0},events:{description:"",type:{name:"array"},required:!0},resources:{description:"",type:{name:"object"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},isOverflowing:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},width:{description:"",type:{name:"number"},required:!1},localizer:{description:"",type:{name:"object"},required:!0},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},allDayMaxRows:{description:"",type:{name:"number"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelectEvent:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},getDrilldownView:{description:"",type:{name:"func"},required:!0},scrollRef:{description:"",type:{name:"any"},required:!1}}};var src_TimeGridHeaderResources=TimeGridHeaderResources;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/TimeGridHeaderResources.js"]={name:"TimeGridHeaderResources",docgenInfo:TimeGridHeaderResources.__docgenInfo,path:"src/TimeGridHeaderResources.js"});var TimeGutter=function TimeGutter(_ref2){var min=_ref2.min,max=_ref2.max,timeslots=_ref2.timeslots,step=_ref2.step,localizer=_ref2.localizer,getNow=_ref2.getNow,resource=_ref2.resource,components=_ref2.components,getters=_ref2.getters,gutterRef=_ref2.gutterRef,TimeGutterWrapper=components.timeGutterWrapper,_useMemo=(0,react.useMemo)((function(){return function adjustForDST(_ref){var min=_ref.min,max=_ref.max,localizer=_ref.localizer;return localizer.getTimezoneOffset(min)!==localizer.getTimezoneOffset(max)?{start:localizer.add(min,-1,"day"),end:localizer.add(max,-1,"day")}:{start:min,end:max}}({min:min,max:max,localizer:localizer})}),[null==min?void 0:min.toISOString(),null==max?void 0:max.toISOString(),localizer]),start=_useMemo.start,end=_useMemo.end,_useState=(0,react.useState)(getSlotMetrics({min:start,max:end,timeslots:timeslots,step:step,localizer:localizer})),_useState2=(0,slicedToArray.A)(_useState,2),slotMetrics=_useState2[0],setSlotMetrics=_useState2[1];(0,react.useEffect)((function(){slotMetrics&&setSlotMetrics(slotMetrics.update({min:start,max:end,timeslots:timeslots,step:step,localizer:localizer}))}),[null==start?void 0:start.toISOString(),null==end?void 0:end.toISOString(),timeslots,step]);var renderSlot=(0,react.useCallback)((function(value,idx){if(idx)return null;var isNow=slotMetrics.dateIsInGroup(getNow(),idx);return(0,jsx_runtime.jsx)("span",{className:(0,clsx_m.A)("rbc-label",isNow&&"rbc-now"),children:localizer.format(value,"timeGutterFormat")})}),[slotMetrics,localizer,getNow]);return(0,jsx_runtime.jsx)(TimeGutterWrapper,{slotMetrics:slotMetrics,children:(0,jsx_runtime.jsx)("div",{className:"rbc-time-gutter rbc-time-column",ref:gutterRef,children:slotMetrics.groups.map((function(grp,idx){return(0,jsx_runtime.jsx)(TimeSlotGroup,{group:grp,resource:resource,components:components,renderSlot:renderSlot,getters:getters},idx)}))})})};TimeGutter.displayName="TimeGutter";var src_TimeGutter=react.forwardRef((function(props,ref){return(0,jsx_runtime.jsx)(TimeGutter,Object.assign({gutterRef:ref},props))})),constants=__webpack_require__("./src/utils/constants.js"),eventLevels=__webpack_require__("./src/utils/eventLevels.js"),NONE=(__webpack_require__("./node_modules/core-js/modules/es.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),{});var TimeGrid=function(_Component){function TimeGrid(props){var _this;return(0,classCallCheck.default)(this,TimeGrid),(_this=(0,callSuper.default)(this,TimeGrid,[props])).handleScroll=function(e){_this.scrollRef.current&&(_this.scrollRef.current.scrollLeft=e.target.scrollLeft)},_this.handleResize=function(){animationFrame.Z(_this.rafHandle),_this.rafHandle=animationFrame.E(_this.checkOverflow)},_this.handleKeyPressEvent=function(){_this.clearSelection();for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];(0,helpers.me)(_this.props.onKeyPressEvent,args)},_this.handleSelectEvent=function(){_this.clearSelection();for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];(0,helpers.me)(_this.props.onSelectEvent,args)},_this.handleDoubleClickEvent=function(){_this.clearSelection();for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++)args[_key3]=arguments[_key3];(0,helpers.me)(_this.props.onDoubleClickEvent,args)},_this.handleShowMore=function(events,date,cell,slot,target){var _this$props=_this.props,popup=_this$props.popup,onDrillDown=_this$props.onDrillDown,onShowMore=_this$props.onShowMore,getDrilldownView=_this$props.getDrilldownView,doShowMoreDrillDown=_this$props.doShowMoreDrillDown;if(_this.clearSelection(),popup){var position=(0,esm_position.A)(cell,_this.containerRef.current);_this.setState({overlay:{date:date,events:events,position:Object.assign({},position,{width:"200px"}),target:target}})}else doShowMoreDrillDown&&(0,helpers.me)(onDrillDown,[date,getDrilldownView(date)||constants.l.DAY]);(0,helpers.me)(onShowMore,[events,date,slot])},_this.handleSelectAllDaySlot=function(slots,slotInfo){var onSelectSlot=_this.props.onSelectSlot,start=new Date(slots[0]),end=new Date(slots[slots.length-1]);end.setDate(slots[slots.length-1].getDate()+1),(0,helpers.me)(onSelectSlot,{slots:slots,start:start,end:end,action:slotInfo.action,resourceId:slotInfo.resourceId})},_this.overlayDisplay=function(){_this.setState({overlay:null})},_this.checkOverflow=function(){if(!_this._updatingOverflow){var content=_this.contentRef.current;if(null!=content&&content.scrollHeight){var isOverflowing=content.scrollHeight>content.clientHeight;_this.state.isOverflowing!==isOverflowing&&(_this._updatingOverflow=!0,_this.setState({isOverflowing:isOverflowing},(function(){_this._updatingOverflow=!1})))}}},_this.memoizedResources=(0,memoize_one_esm.A)((function(resources,accessors){return function Resources(resources,accessors){return{map:function map(fn){return resources?resources.map((function(resource,idx){return fn([accessors.resourceId(resource),resource],idx)})):[fn([NONE,null],0)]},groupEvents:function groupEvents(events){var eventsByResource=new Map;return resources?(events.forEach((function(event){var id=accessors.resource(event)||NONE;if(Array.isArray(id))id.forEach((function(item){var resourceEvents=eventsByResource.get(item)||[];resourceEvents.push(event),eventsByResource.set(item,resourceEvents)}));else{var resourceEvents=eventsByResource.get(id)||[];resourceEvents.push(event),eventsByResource.set(id,resourceEvents)}})),eventsByResource):(eventsByResource.set(NONE,events),eventsByResource)}}}(resources,accessors)})),_this.state={gutterWidth:void 0,isOverflowing:null},_this.scrollRef=react.createRef(),_this.contentRef=react.createRef(),_this.containerRef=react.createRef(),_this._scrollRatio=null,_this.gutterRef=(0,react.createRef)(),_this}return(0,inherits.default)(TimeGrid,_Component),(0,createClass.default)(TimeGrid,[{key:"getSnapshotBeforeUpdate",value:function getSnapshotBeforeUpdate(){return this.checkOverflow(),null}},{key:"componentDidMount",value:function componentDidMount(){null==this.props.width&&this.measureGutter(),this.calculateScroll(),this.applyScroll(),window.addEventListener("resize",this.handleResize)}},{key:"componentWillUnmount",value:function componentWillUnmount(){window.removeEventListener("resize",this.handleResize),animationFrame.Z(this.rafHandle),this.measureGutterAnimationFrameRequest&&window.cancelAnimationFrame(this.measureGutterAnimationFrameRequest)}},{key:"componentDidUpdate",value:function componentDidUpdate(){this.applyScroll()}},{key:"renderDayColumn",value:function renderDayColumn(date,id,resource,groupedEvents,groupedBackgroundEvents,localizer,accessors,components,dayLayoutAlgorithm,now){var _this$props2=this.props,min=_this$props2.min,max=_this$props2.max,daysEvents=(groupedEvents.get(id)||[]).filter((function(event){return localizer.inRange(date,accessors.start(event),accessors.end(event),"day")})),daysBackgroundEvents=(groupedBackgroundEvents.get(id)||[]).filter((function(event){return localizer.inRange(date,accessors.start(event),accessors.end(event),"day")}));return(0,react.createElement)(src_DayColumn,Object.assign({},this.props,{localizer:localizer,min:localizer.merge(date,min),max:localizer.merge(date,max),resource:resource&&id,components:components,isNow:localizer.isSameDate(date,now),key:"".concat(id,"-").concat(date),date:date,events:daysEvents,backgroundEvents:daysBackgroundEvents,dayLayoutAlgorithm:dayLayoutAlgorithm}))}},{key:"renderResourcesFirst",value:function renderResourcesFirst(range,resources,groupedEvents,groupedBackgroundEvents,localizer,accessors,now,components,dayLayoutAlgorithm){var _this2=this;return resources.map((function(_ref){var _ref2=(0,slicedToArray.A)(_ref,2),id=_ref2[0],resource=_ref2[1];return range.map((function(date){return _this2.renderDayColumn(date,id,resource,groupedEvents,groupedBackgroundEvents,localizer,accessors,components,dayLayoutAlgorithm,now)}))}))}},{key:"renderRangeFirst",value:function renderRangeFirst(range,resources,groupedEvents,groupedBackgroundEvents,localizer,accessors,now,components,dayLayoutAlgorithm){var _this3=this;return range.map((function(date){return(0,jsx_runtime.jsx)("div",{style:{display:"flex",minHeight:"100%",flex:1},children:resources.map((function(_ref3){var _ref4=(0,slicedToArray.A)(_ref3,2),id=_ref4[0],resource=_ref4[1];return(0,jsx_runtime.jsx)("div",{style:{flex:1},children:_this3.renderDayColumn(date,id,resource,groupedEvents,groupedBackgroundEvents,localizer,accessors,components,dayLayoutAlgorithm,now)},accessors.resourceId(resource))}))},date)}))}},{key:"renderEvents",value:function renderEvents(range,events,backgroundEvents,now){var _this$props3=this.props,accessors=_this$props3.accessors,localizer=_this$props3.localizer,resourceGroupingLayout=_this$props3.resourceGroupingLayout,components=_this$props3.components,dayLayoutAlgorithm=_this$props3.dayLayoutAlgorithm,resources=this.memoizedResources(this.props.resources,accessors),groupedEvents=resources.groupEvents(events),groupedBackgroundEvents=resources.groupEvents(backgroundEvents);return resourceGroupingLayout?this.renderRangeFirst(range,resources,groupedEvents,groupedBackgroundEvents,localizer,accessors,now,components,dayLayoutAlgorithm):this.renderResourcesFirst(range,resources,groupedEvents,groupedBackgroundEvents,localizer,accessors,now,components,dayLayoutAlgorithm)}},{key:"render",value:function render(){var _this$props$allDayMax,_this$props4=this.props,events=_this$props4.events,backgroundEvents=_this$props4.backgroundEvents,range=_this$props4.range,width=_this$props4.width,rtl=_this$props4.rtl,selected=_this$props4.selected,getNow=_this$props4.getNow,resources=_this$props4.resources,components=_this$props4.components,accessors=_this$props4.accessors,getters=_this$props4.getters,localizer=_this$props4.localizer,min=_this$props4.min,max=_this$props4.max,showMultiDayTimes=_this$props4.showMultiDayTimes,longPressThreshold=_this$props4.longPressThreshold,resizable=_this$props4.resizable,resourceGroupingLayout=_this$props4.resourceGroupingLayout;width=width||this.state.gutterWidth;var start=range[0],end=range[range.length-1];this.slots=range.length;var allDayEvents=[],rangeEvents=[],rangeBackgroundEvents=[];events.forEach((function(event){if((0,eventLevels.r4)(event,start,end,accessors,localizer)){var eStart=accessors.start(event),eEnd=accessors.end(event);accessors.allDay(event)||localizer.startAndEndAreDateOnly(eStart,eEnd)||!showMultiDayTimes&&!localizer.isSameDate(eStart,eEnd)?allDayEvents.push(event):rangeEvents.push(event)}})),backgroundEvents.forEach((function(event){(0,eventLevels.r4)(event,start,end,accessors,localizer)&&rangeBackgroundEvents.push(event)})),allDayEvents.sort((function(a,b){return(0,eventLevels.kD)(a,b,accessors,localizer)}));var headerProps={range:range,events:allDayEvents,width:width,rtl:rtl,getNow:getNow,localizer:localizer,selected:selected,allDayMaxRows:this.props.showAllEvents?1/0:null!==(_this$props$allDayMax=this.props.allDayMaxRows)&&void 0!==_this$props$allDayMax?_this$props$allDayMax:1/0,resources:this.memoizedResources(resources,accessors),selectable:this.props.selectable,accessors:accessors,getters:getters,components:components,scrollRef:this.scrollRef,isOverflowing:this.state.isOverflowing,longPressThreshold:longPressThreshold,onSelectSlot:this.handleSelectAllDaySlot,onSelectEvent:this.handleSelectEvent,onShowMore:this.handleShowMore,onDoubleClickEvent:this.props.onDoubleClickEvent,onKeyPressEvent:this.props.onKeyPressEvent,onDrillDown:this.props.onDrillDown,getDrilldownView:this.props.getDrilldownView,resizable:resizable};return(0,jsx_runtime.jsxs)("div",{className:(0,clsx_m.A)("rbc-time-view",resources&&"rbc-time-view-resources"),ref:this.containerRef,children:[resources&&resources.length>1&&resourceGroupingLayout?(0,jsx_runtime.jsx)(src_TimeGridHeaderResources,Object.assign({},headerProps)):(0,jsx_runtime.jsx)(src_TimeGridHeader,Object.assign({},headerProps)),this.props.popup&&this.renderOverlay(),(0,jsx_runtime.jsxs)("div",{ref:this.contentRef,className:"rbc-time-content",onScroll:this.handleScroll,children:[(0,jsx_runtime.jsx)(src_TimeGutter,{date:start,ref:this.gutterRef,localizer:localizer,min:localizer.merge(start,min),max:localizer.merge(start,max),step:this.props.step,getNow:this.props.getNow,timeslots:this.props.timeslots,components:components,className:"rbc-time-gutter",getters:getters}),this.renderEvents(range,rangeEvents,rangeBackgroundEvents,getNow())]})]})}},{key:"renderOverlay",value:function renderOverlay(){var _this$state$overlay,_this$state,_this4=this,overlay=null!==(_this$state$overlay=null===(_this$state=this.state)||void 0===_this$state?void 0:_this$state.overlay)&&void 0!==_this$state$overlay?_this$state$overlay:{},_this$props5=this.props,accessors=_this$props5.accessors,localizer=_this$props5.localizer,components=_this$props5.components,getters=_this$props5.getters,selected=_this$props5.selected,popupOffset=_this$props5.popupOffset,handleDragStart=_this$props5.handleDragStart;return(0,jsx_runtime.jsx)(PopOverlay.A,{overlay:overlay,accessors:accessors,localizer:localizer,components:components,getters:getters,selected:selected,popupOffset:popupOffset,ref:this.containerRef,handleKeyPressEvent:this.handleKeyPressEvent,handleSelectEvent:this.handleSelectEvent,handleDoubleClickEvent:this.handleDoubleClickEvent,handleDragStart:handleDragStart,show:!!overlay.position,overlayDisplay:this.overlayDisplay,onHide:function onHide(){return _this4.setState({overlay:null})}})}},{key:"clearSelection",value:function clearSelection(){clearTimeout(this._selectTimer),this._pendingSelection=[]}},{key:"measureGutter",value:function measureGutter(){var _this5=this;this.measureGutterAnimationFrameRequest&&window.cancelAnimationFrame(this.measureGutterAnimationFrameRequest),this.measureGutterAnimationFrameRequest=window.requestAnimationFrame((function(){var _this5$gutterRef,width=null!==(_this5$gutterRef=_this5.gutterRef)&&void 0!==_this5$gutterRef&&_this5$gutterRef.current?(0,esm_width.A)(_this5.gutterRef.current):void 0;width&&_this5.state.gutterWidth!==width&&_this5.setState({gutterWidth:width})}))}},{key:"applyScroll",value:function applyScroll(){if(null!=this._scrollRatio&&!0===this.props.enableAutoScroll){var content=this.contentRef.current;content.scrollTop=content.scrollHeight*this._scrollRatio,this._scrollRatio=null}}},{key:"calculateScroll",value:function calculateScroll(){var props=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props,min=props.min,max=props.max,scrollToTime=props.scrollToTime,localizer=props.localizer,diffMillis=localizer.diff(localizer.merge(scrollToTime,min),scrollToTime,"milliseconds"),totalMillis=localizer.diff(min,max,"milliseconds");this._scrollRatio=diffMillis/totalMillis}}])}(react.Component);TimeGrid.defaultProps={step:30,timeslots:2,resourceGroupingLayout:!1},TimeGrid.__docgenInfo={description:"",methods:[{name:"handleScroll",docblock:null,modifiers:[],params:[{name:"e",type:null}],returns:null},{name:"handleResize",docblock:null,modifiers:[],params:[],returns:null},{name:"handleKeyPressEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleSelectEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleDoubleClickEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleShowMore",docblock:null,modifiers:[],params:[{name:"events",type:null},{name:"date",type:null},{name:"cell",type:null},{name:"slot",type:null},{name:"target",type:null}],returns:null},{name:"handleSelectAllDaySlot",docblock:null,modifiers:[],params:[{name:"slots",type:null},{name:"slotInfo",type:null}],returns:null},{name:"renderDayColumn",docblock:null,modifiers:[],params:[{name:"date",type:null},{name:"id",type:null},{name:"resource",type:null},{name:"groupedEvents",type:null},{name:"groupedBackgroundEvents",type:null},{name:"localizer",type:null},{name:"accessors",type:null},{name:"components",type:null},{name:"dayLayoutAlgorithm",type:null},{name:"now",type:null}],returns:null},{name:"renderResourcesFirst",docblock:null,modifiers:[],params:[{name:"range",type:null},{name:"resources",type:null},{name:"groupedEvents",type:null},{name:"groupedBackgroundEvents",type:null},{name:"localizer",type:null},{name:"accessors",type:null},{name:"now",type:null},{name:"components",type:null},{name:"dayLayoutAlgorithm",type:null}],returns:null},{name:"renderRangeFirst",docblock:null,modifiers:[],params:[{name:"range",type:null},{name:"resources",type:null},{name:"groupedEvents",type:null},{name:"groupedBackgroundEvents",type:null},{name:"localizer",type:null},{name:"accessors",type:null},{name:"now",type:null},{name:"components",type:null},{name:"dayLayoutAlgorithm",type:null}],returns:null},{name:"renderEvents",docblock:null,modifiers:[],params:[{name:"range",type:null},{name:"events",type:null},{name:"backgroundEvents",type:null},{name:"now",type:null}],returns:null},{name:"renderOverlay",docblock:null,modifiers:[],params:[],returns:null},{name:"overlayDisplay",docblock:null,modifiers:[],params:[],returns:null},{name:"clearSelection",docblock:null,modifiers:[],params:[],returns:null},{name:"measureGutter",docblock:null,modifiers:[],params:[],returns:null},{name:"applyScroll",docblock:null,modifiers:[],params:[],returns:null},{name:"calculateScroll",docblock:null,modifiers:[],params:[{name:"props",type:null}],returns:null},{name:"checkOverflow",docblock:null,modifiers:[],params:[],returns:null}],displayName:"TimeGrid",props:{step:{defaultValue:{value:"30",computed:!1},description:"",type:{name:"number"},required:!1},timeslots:{defaultValue:{value:"2",computed:!1},description:"",type:{name:"number"},required:!1},resourceGroupingLayout:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},events:{description:"",type:{name:"array"},required:!0},backgroundEvents:{description:"",type:{name:"array"},required:!0},resources:{description:"",type:{name:"array"},required:!1},range:{description:"",type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1},min:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},max:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},getNow:{description:"",type:{name:"func"},required:!0},scrollToTime:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},enableAutoScroll:{description:"",type:{name:"bool"},required:!1},showMultiDayTimes:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},width:{description:"",type:{name:"number"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},allDayMaxRows:{description:"",type:{name:"number"},required:!1},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onNavigate:{description:"",type:{name:"func"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelectEnd:{description:"",type:{name:"func"},required:!1},onSelectStart:{description:"",type:{name:"func"},required:!1},onSelectEvent:{description:"",type:{name:"func"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},getDrilldownView:{description:"",type:{name:"func"},required:!0},dayLayoutAlgorithm:{description:"",type:{name:"custom",raw:"DayLayoutAlgorithmPropType"},required:!1},showAllEvents:{description:"",type:{name:"bool"},required:!1},doShowMoreDrillDown:{description:"",type:{name:"bool"},required:!1},popup:{description:"",type:{name:"bool"},required:!1},handleDragStart:{description:"",type:{name:"func"},required:!1},popupOffset:{description:"",type:{name:"union",value:[{name:"number"},{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}}]},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/TimeGrid.js"]={name:"TimeGrid",docgenInfo:TimeGrid.__docgenInfo,path:"src/TimeGrid.js"})},"./src/TimeGridEvent.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),clsx__WEBPACK_IMPORTED_MODULE_4__=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/clsx/dist/clsx.m.js")),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));function stringifyPercent(v){return"string"==typeof v?v:v+"%"}function TimeGridEvent(props){var style=props.style,className=props.className,event=props.event,accessors=props.accessors,rtl=props.rtl,selected=props.selected,label=props.label,continuesPrior=props.continuesPrior,continuesAfter=props.continuesAfter,getters=props.getters,onClick=props.onClick,onDoubleClick=props.onDoubleClick,isBackgroundEvent=props.isBackgroundEvent,onKeyPress=props.onKeyPress,_props$components=props.components,Event=_props$components.event,EventWrapper=_props$components.eventWrapper,title=accessors.title(event),tooltip=accessors.tooltip(event),end=accessors.end(event),start=accessors.start(event),userProps=getters.eventProp(event,start,end,selected),inner=[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"rbc-event-label",children:label},"1"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"rbc-event-content",children:Event?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Event,{event:event,title:title}):title},"2")],height=style.height,top=style.top,width=style.width,xOffset=style.xOffset,eventStyle=Object.assign({},userProps.style,(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__.A)({top:stringifyPercent(top),height:stringifyPercent(height),width:stringifyPercent(width)},rtl?"right":"left",stringifyPercent(xOffset)));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(EventWrapper,Object.assign({type:"time"},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{role:"button",tabIndex:0,onClick:onClick,onDoubleClick:onDoubleClick,style:eventStyle,onKeyDown:onKeyPress,title:tooltip?("string"==typeof label?label+": ":"")+tooltip:void 0,className:(0,clsx__WEBPACK_IMPORTED_MODULE_4__.A)(isBackgroundEvent?"rbc-background-event":"rbc-event",className,userProps.className,{"rbc-selected":selected,"rbc-event-continues-earlier":continuesPrior,"rbc-event-continues-later":continuesAfter}),children:inner})}))}TimeGridEvent.displayName="TimeGridEvent",TimeGridEvent.__docgenInfo={description:"",methods:[],displayName:"TimeGridEvent"},__webpack_exports__.A=TimeGridEvent,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/TimeGridEvent.js"]={name:"TimeGridEvent",docgenInfo:TimeGridEvent.__docgenInfo,path:"src/TimeGridEvent.js"})},"./src/addons/dragAndDrop/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return dragAndDrop}});var objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),classCallCheck=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),createClass=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),callSuper=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/callSuper.js"),inherits=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),clsx_m=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),accessors=(__webpack_require__("./src/utils/propTypes.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js"),__webpack_require__("./src/utils/accessors.js")),DnDContext=react.createContext(),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),EventWrapper=function(_React$Component){function EventWrapper(){var _this;(0,classCallCheck.default)(this,EventWrapper);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,EventWrapper,[].concat(args))).handleResizeUp=function(e){0===e.button&&_this.context.draggable.onBeginAction(_this.props.event,"resize","UP")},_this.handleResizeDown=function(e){0===e.button&&_this.context.draggable.onBeginAction(_this.props.event,"resize","DOWN")},_this.handleResizeLeft=function(e){0===e.button&&_this.context.draggable.onBeginAction(_this.props.event,"resize","LEFT")},_this.handleResizeRight=function(e){0===e.button&&_this.context.draggable.onBeginAction(_this.props.event,"resize","RIGHT")},_this.handleStartDragging=function(e){var _e$target$getAttribut;0===e.button&&((null===(_e$target$getAttribut=e.target.getAttribute("class"))||void 0===_e$target$getAttribut?void 0:_e$target$getAttribut.includes("rbc-addons-dnd-resize"))||(Object.assign({},_this.props.event).sourceResource=_this.props.resource,_this.context.draggable.onBeginAction(_this.props.event,"move")))},_this}return(0,inherits.default)(EventWrapper,_React$Component),(0,createClass.default)(EventWrapper,[{key:"renderAnchor",value:function renderAnchor(direction){var cls="Up"===direction||"Down"===direction?"ns":"ew";return(0,jsx_runtime.jsx)("div",{className:"rbc-addons-dnd-resize-".concat(cls,"-anchor"),onMouseDown:this["handleResize".concat(direction)],children:(0,jsx_runtime.jsx)("div",{className:"rbc-addons-dnd-resize-".concat(cls,"-icon")})})}},{key:"render",value:function render(){var _this$props=this.props,event=_this$props.event,type=_this$props.type,continuesPrior=_this$props.continuesPrior,continuesAfter=_this$props.continuesAfter,resizable=_this$props.resizable,children=this.props.children;if(event.__isPreview)return react.cloneElement(children,{className:(0,clsx_m.A)(children.props.className,"rbc-addons-dnd-drag-preview")});var draggable=this.context.draggable,draggableAccessor=draggable.draggableAccessor,resizableAccessor=draggable.resizableAccessor,isDraggable=!draggableAccessor||!!(0,accessors.s)(event,draggableAccessor);if(!isDraggable)return children;var isResizable=resizable&&(!resizableAccessor||!!(0,accessors.s)(event,resizableAccessor));if(isResizable||isDraggable){var newProps={onMouseDown:this.handleStartDragging,onTouchStart:this.handleStartDragging};if(isResizable){var StartAnchor=null,EndAnchor=null;"date"===type?(StartAnchor=!continuesPrior&&this.renderAnchor("Left"),EndAnchor=!continuesAfter&&this.renderAnchor("Right")):(StartAnchor=!continuesPrior&&this.renderAnchor("Up"),EndAnchor=!continuesAfter&&this.renderAnchor("Down")),newProps.children=(0,jsx_runtime.jsxs)("div",{className:"rbc-addons-dnd-resizable",children:[StartAnchor,children.props.children,EndAnchor]})}draggable.dragAndDropAction.interacting&&draggable.dragAndDropAction.event===event&&(newProps.className=(0,clsx_m.A)(children.props.className,"rbc-addons-dnd-dragged-event")),children=react.cloneElement(children,newProps)}return children}}])}(react.Component);EventWrapper.contextType=DnDContext,EventWrapper.__docgenInfo={description:"",methods:[{name:"handleResizeUp",docblock:null,modifiers:[],params:[{name:"e",type:null}],returns:null},{name:"handleResizeDown",docblock:null,modifiers:[],params:[{name:"e",type:null}],returns:null},{name:"handleResizeLeft",docblock:null,modifiers:[],params:[{name:"e",type:null}],returns:null},{name:"handleResizeRight",docblock:null,modifiers:[],params:[{name:"e",type:null}],returns:null},{name:"handleStartDragging",docblock:null,modifiers:[],params:[{name:"e",type:null}],returns:null},{name:"renderAnchor",docblock:null,modifiers:[],params:[{name:"direction",type:null}],returns:null}],displayName:"EventWrapper",props:{type:{description:"",type:{name:"enum",value:[{value:"'date'",computed:!1},{value:"'time'",computed:!1}]},required:!1},event:{description:"",type:{name:"object"},required:!0},draggable:{description:"",type:{name:"bool"},required:!1},allDay:{description:"",type:{name:"bool"},required:!1},isRow:{description:"",type:{name:"bool"},required:!1},continuesPrior:{description:"",type:{name:"bool"},required:!1},continuesAfter:{description:"",type:{name:"bool"},required:!1},isDragging:{description:"",type:{name:"bool"},required:!1},isResizing:{description:"",type:{name:"bool"},required:!1},resource:{description:"",type:{name:"number"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1}}};var dragAndDrop_EventWrapper=EventWrapper;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/addons/dragAndDrop/EventWrapper.js"]={name:"EventWrapper",docgenInfo:EventWrapper.__docgenInfo,path:"src/addons/dragAndDrop/EventWrapper.js"});var esm=__webpack_require__("./node_modules/dom-helpers/esm/index.js"),querySelectorAll=__webpack_require__("./node_modules/dom-helpers/cjs/querySelectorAll.js"),querySelectorAll_default=__webpack_require__.n(querySelectorAll),Selection=__webpack_require__("./src/Selection.js"),TimeGridEvent=__webpack_require__("./src/TimeGridEvent.js"),_excluded=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),["children"]),dragAccessors={start:(0,accessors.C)((function(e){return e.start})),end:(0,accessors.C)((function(e){return e.end}))};function mergeComponents(){var components=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},addons=arguments.length>1?arguments[1]:void 0,keys=Object.keys(addons),result=Object.assign({},components);return keys.forEach((function(key){result[key]=components[key]?function nest(){for(var _len=arguments.length,Components=new Array(_len),_key=0;_key<_len;_key++)Components[_key]=arguments[_key];var factories=Components.filter(Boolean).map(react.createFactory);return function Nest(_ref){var children=_ref.children,props=(0,objectWithoutProperties.A)(_ref,_excluded);return factories.reduceRight((function(child,factory){return factory(props,child)}),children)}}(components[key],addons[key]):addons[key]})),result}function pointInColumn(bounds,point){var left=bounds.left,right=bounds.right,top=bounds.top,x=point.x,y=point.y;return x<right+10&&x>left&&y>top}function eventTimes(event,accessors,localizer){var start=accessors.start(event),end=accessors.end(event);return localizer.eq(start,end,"minutes")&&0===localizer.diff(start,end,"minutes")&&(end=localizer.add(end,1,"day")),{start:start,end:end,duration:localizer.diff(start,end,"milliseconds")}}var EventContainerWrapper=function(_React$Component){function EventContainerWrapper(){var _this;(0,classCallCheck.default)(this,EventContainerWrapper);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,EventContainerWrapper,[].concat(args))).handleMove=function(point,bounds){if(!pointInColumn(bounds,point))return _this.reset();var event=_this.context.draggable.dragAndDropAction.event,_this$props=_this.props,accessors=_this$props.accessors,slotMetrics=_this$props.slotMetrics,newSlot=slotMetrics.closestSlotFromPoint({y:point.y-_this.eventOffsetTop,x:point.x},bounds),duration=eventTimes(event,accessors,_this.props.localizer).duration,newEnd=_this.props.localizer.add(newSlot,duration,"milliseconds");_this.update(event,slotMetrics.getRange(newSlot,newEnd,!1,!0))},_this.handleDropFromOutside=function(point,boundaryBox){var _this$props2=_this.props,slotMetrics=_this$props2.slotMetrics,resource=_this$props2.resource,start=slotMetrics.closestSlotFromPoint({y:point.y,x:point.x},boundaryBox);_this.context.draggable.onDropFromOutside({start:start,end:slotMetrics.nextSlot(start),allDay:!1,resource:resource})},_this.handleDragOverFromOutside=function(point,bounds){var slotMetrics=_this.props.slotMetrics,start=slotMetrics.closestSlotFromPoint({y:point.y,x:point.x},bounds),end=slotMetrics.nextSlot(start),event=_this.context.draggable.dragFromOutsideItem();_this.update(event,slotMetrics.getRange(start,end,!1,!0))},_this.updateParentScroll=function(parent,node){setTimeout((function(){var draggedEl=querySelectorAll_default()(node,".rbc-addons-dnd-drag-preview")[0];draggedEl&&(draggedEl.offsetTop<parent.scrollTop?(0,esm.F1)(parent,Math.max(draggedEl.offsetTop,0)):draggedEl.offsetTop+draggedEl.offsetHeight>parent.scrollTop+parent.clientHeight&&(0,esm.F1)(parent,Math.min(draggedEl.offsetTop-parent.offsetHeight+draggedEl.offsetHeight,parent.scrollHeight)))}))},_this._selectable=function(){var wrapper=_this.ref.current,node=wrapper.children[0],isBeingDragged=!1,selector=_this._selector=new Selection.Ay((function(){return wrapper.closest(".rbc-time-view")})),parent=(0,esm.mi)(wrapper);selector.on("beforeSelect",(function(point){var dragAndDropAction=_this.context.draggable.dragAndDropAction;if(!dragAndDropAction.action)return!1;if("resize"===dragAndDropAction.action)return pointInColumn((0,Selection.rF)(node),point);var eventNode=(0,Selection.LP)(node,point);if(!eventNode)return!1;_this.eventOffsetTop=point.y-(0,Selection.rF)(eventNode).top})),selector.on("selecting",(function(box){var bounds=(0,Selection.rF)(node),dragAndDropAction=_this.context.draggable.dragAndDropAction;"move"===dragAndDropAction.action&&(_this.updateParentScroll(parent,node),_this.handleMove(box,bounds)),"resize"===dragAndDropAction.action&&(_this.updateParentScroll(parent,node),_this.handleResize(box,bounds))})),selector.on("dropFromOutside",(function(point){if(_this.context.draggable.onDropFromOutside){var bounds=(0,Selection.rF)(node);pointInColumn(bounds,point)&&_this.handleDropFromOutside(point,bounds)}})),selector.on("dragOverFromOutside",(function(point){if(_this.context.draggable.dragFromOutsideItem?_this.context.draggable.dragFromOutsideItem():null){var bounds=(0,Selection.rF)(node);if(!pointInColumn(bounds,point))return _this.reset();_this.handleDragOverFromOutside(point,bounds)}})),selector.on("selectStart",(function(){isBeingDragged=!0,_this.context.draggable.onStart()})),selector.on("select",(function(point){var bounds=(0,Selection.rF)(node);if(isBeingDragged=!1,"resize"===_this.context.draggable.dragAndDropAction.action)_this.handleInteractionEnd();else{if(!_this.state.event||!pointInColumn(bounds,point))return;_this.handleInteractionEnd()}})),selector.on("click",(function(){isBeingDragged&&_this.reset(),_this.context.draggable.onEnd(null)})),selector.on("reset",(function(){_this.reset(),_this.context.draggable.onEnd(null)}))},_this.handleInteractionEnd=function(){var resource=_this.props.resource,event=_this.state.event;_this.reset(),_this.context.draggable.onEnd({start:event.start,end:event.end,resourceId:resource})},_this._teardownSelectable=function(){_this._selector&&(_this._selector.teardown(),_this._selector=null)},_this.state={},_this.ref=react.createRef(),_this}return(0,inherits.default)(EventContainerWrapper,_React$Component),(0,createClass.default)(EventContainerWrapper,[{key:"componentDidMount",value:function componentDidMount(){this._selectable()}},{key:"componentWillUnmount",value:function componentWillUnmount(){this._teardownSelectable()}},{key:"reset",value:function reset(){this.state.event&&this.setState({event:null,top:null,height:null})}},{key:"update",value:function update(event,_ref){var startDate=_ref.startDate,endDate=_ref.endDate,top=_ref.top,height=_ref.height,lastEvent=this.state.event;lastEvent&&startDate===lastEvent.start&&endDate===lastEvent.end||this.setState({top:top,height:height,event:Object.assign({},event,{start:startDate,end:endDate})})}},{key:"handleResize",value:function handleResize(point,bounds){var newRange,_this$props3=this.props,accessors=_this$props3.accessors,slotMetrics=_this$props3.slotMetrics,localizer=_this$props3.localizer,_this$context$draggab=this.context.draggable.dragAndDropAction,event=_this$context$draggab.event,direction=_this$context$draggab.direction,newTime=slotMetrics.closestSlotFromPoint(point,bounds),_eventTimes2=eventTimes(event,accessors,localizer),start=_eventTimes2.start,end=_eventTimes2.end;if("UP"===direction){var newStart=localizer.min(newTime,slotMetrics.closestSlotFromDate(end,-1));newRange=slotMetrics.getRange(newStart,end),newRange=Object.assign({},newRange,{endDate:end})}else if("DOWN"===direction){var newEnd=localizer.max(newTime,slotMetrics.closestSlotFromDate(start));newRange=slotMetrics.getRange(start,newEnd),newRange=Object.assign({},newRange,{startDate:start})}this.update(event,newRange)}},{key:"renderContent",value:function renderContent(){var _this$props4=this.props,children=_this$props4.children,accessors=_this$props4.accessors,components=_this$props4.components,getters=_this$props4.getters,slotMetrics=_this$props4.slotMetrics,localizer=_this$props4.localizer,_this$state=this.state,event=_this$state.event,top=_this$state.top,height=_this$state.height;if(!event)return children;var label,events=children.props.children,start=event.start,end=event.end,format="eventTimeRangeFormat",startsBeforeDay=slotMetrics.startsBeforeDay(start),startsAfterDay=slotMetrics.startsAfterDay(end);return startsBeforeDay?format="eventTimeRangeEndFormat":startsAfterDay&&(format="eventTimeRangeStartFormat"),label=startsBeforeDay&&startsAfterDay?localizer.messages.allDay:localizer.format({start:start,end:end},format),react.cloneElement(children,{children:(0,jsx_runtime.jsxs)(react.Fragment,{children:[events,event&&(0,jsx_runtime.jsx)(TimeGridEvent.A,{event:event,label:label,className:"rbc-addons-dnd-drag-preview",style:{top:top,height:height,width:100},getters:getters,components:components,accessors:Object.assign({},accessors,dragAccessors),continuesPrior:startsBeforeDay,continuesAfter:startsAfterDay})]})})}},{key:"render",value:function render(){return(0,jsx_runtime.jsx)("div",{ref:this.ref,children:this.renderContent()})}}])}(react.Component);EventContainerWrapper.contextType=DnDContext,EventContainerWrapper.__docgenInfo={description:"",methods:[{name:"reset",docblock:null,modifiers:[],params:[],returns:null},{name:"update",docblock:null,modifiers:[],params:[{name:"event",type:null},{name:"{ startDate, endDate, top, height }",type:null}],returns:null},{name:"handleMove",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"bounds",type:null}],returns:null},{name:"handleResize",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"bounds",type:null}],returns:null},{name:"handleDropFromOutside",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"boundaryBox",type:null}],returns:null},{name:"handleDragOverFromOutside",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"bounds",type:null}],returns:null},{name:"updateParentScroll",docblock:null,modifiers:[],params:[{name:"parent",type:null},{name:"node",type:null}],returns:null},{name:"_selectable",docblock:null,modifiers:[],params:[],returns:null},{name:"handleInteractionEnd",docblock:null,modifiers:[],params:[],returns:null},{name:"_teardownSelectable",docblock:null,modifiers:[],params:[],returns:null},{name:"renderContent",docblock:null,modifiers:[],params:[],returns:null}],displayName:"EventContainerWrapper",props:{accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},slotMetrics:{description:"",type:{name:"object"},required:!0},resource:{description:"",type:{name:"any"},required:!1}}};var dragAndDrop_EventContainerWrapper=EventContainerWrapper;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/addons/dragAndDrop/EventContainerWrapper.js"]={name:"EventContainerWrapper",docgenInfo:EventContainerWrapper.__docgenInfo,path:"src/addons/dragAndDrop/EventContainerWrapper.js"});var toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),EventRow=__webpack_require__("./src/EventRow.js"),eventLevels=__webpack_require__("./src/utils/eventLevels.js"),selection=__webpack_require__("./src/utils/selection.js"),WeekWrapper=function(_React$Component){function WeekWrapper(){var _this;(0,classCallCheck.default)(this,WeekWrapper);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,WeekWrapper,[].concat(args))).handleMove=function(point,bounds,draggedEvent){if(!(0,selection.bY)(bounds,point))return _this.reset();var event=_this.context.draggable.dragAndDropAction.event||draggedEvent,_this$props=_this.props,accessors=_this$props.accessors,slotMetrics=_this$props.slotMetrics,rtl=_this$props.rtl,localizer=_this$props.localizer,slot=(0,selection.sU)(bounds,point.x,rtl,slotMetrics.slots),date=slotMetrics.getDateForSlot(slot),_eventTimes=eventTimes(event,accessors,localizer),start=_eventTimes.start,duration=_eventTimes.duration;start=localizer.merge(date,start);var end=localizer.add(start,duration,"milliseconds");_this.update(event,start,end)},_this.handleDropFromOutside=function(point,bounds){if(_this.context.draggable.onDropFromOutside){var _this$props2=_this.props,slotMetrics=_this$props2.slotMetrics,rtl=_this$props2.rtl,localizer=_this$props2.localizer,slot=(0,selection.sU)(bounds,point.x,rtl,slotMetrics.slots),start=slotMetrics.getDateForSlot(slot);_this.context.draggable.onDropFromOutside({start:start,end:localizer.add(start,1,"day"),allDay:!1})}},_this.handleDragOverFromOutside=function(point,node){var item=_this.context.draggable.dragFromOutsideItem?_this.context.draggable.dragFromOutsideItem():null;item&&_this.handleMove(point,node,item)},_this._selectable=function(){var node=_this.ref.current.closest(".rbc-month-row, .rbc-allday-cell"),container=node.closest(".rbc-month-view, .rbc-time-view"),isMonthRow=node.classList.contains("rbc-month-row"),selector=_this._selector=new Selection.Ay((function(){return container}),{validContainers:(0,toConsumableArray.A)(isMonthRow?[]:[".rbc-day-slot",".rbc-allday-cell"])});selector.on("beforeSelect",(function(point){var isAllDay=_this.props.isAllDay,action=_this.context.draggable.dragAndDropAction.action,bounds=(0,Selection.rF)(node),isInBox=(0,selection.bY)(bounds,point);return"move"===action||"resize"===action&&(!isAllDay||isInBox)})),selector.on("selecting",(function(box){var bounds=(0,Selection.rF)(node),dragAndDropAction=_this.context.draggable.dragAndDropAction;"move"===dragAndDropAction.action&&_this.handleMove(box,bounds),"resize"===dragAndDropAction.action&&_this.handleResize(box,bounds)})),selector.on("selectStart",(function(){return _this.context.draggable.onStart()})),selector.on("select",(function(point){var bounds=(0,Selection.rF)(node);_this.state.segment&&((0,selection.bY)(bounds,point)?_this.handleInteractionEnd():_this.reset())})),selector.on("dropFromOutside",(function(point){if(_this.context.draggable.onDropFromOutside){var bounds=(0,Selection.rF)(node);(0,selection.bY)(bounds,point)&&_this.handleDropFromOutside(point,bounds)}})),selector.on("dragOverFromOutside",(function(point){if(_this.context.draggable.dragFromOutsideItem){var bounds=(0,Selection.rF)(node);_this.handleDragOverFromOutside(point,bounds)}})),selector.on("click",(function(){return _this.context.draggable.onEnd(null)})),selector.on("reset",(function(){_this.reset(),_this.context.draggable.onEnd(null)}))},_this.handleInteractionEnd=function(){var _this$props3=_this.props,resourceId=_this$props3.resourceId,isAllDay=_this$props3.isAllDay,event=_this.state.segment.event;_this.reset(),_this.context.draggable.onEnd({start:event.start,end:event.end,resourceId:resourceId,isAllDay:isAllDay})},_this._teardownSelectable=function(){_this._selector&&(_this._selector.teardown(),_this._selector=null)},_this.state={},_this.ref=react.createRef(),_this}return(0,inherits.default)(WeekWrapper,_React$Component),(0,createClass.default)(WeekWrapper,[{key:"componentDidMount",value:function componentDidMount(){this._selectable()}},{key:"componentWillUnmount",value:function componentWillUnmount(){this._teardownSelectable()}},{key:"reset",value:function reset(){this.state.segment&&this.setState({segment:null})}},{key:"update",value:function update(event,start,end){var segment=(0,eventLevels.FA)(Object.assign({},event,{end:end,start:start,__isPreview:!0}),this.props.slotMetrics.range,dragAccessors,this.props.localizer),lastSegment=this.state.segment;lastSegment&&segment.span===lastSegment.span&&segment.left===lastSegment.left&&segment.right===lastSegment.right||this.setState({segment:segment})}},{key:"handleResize",value:function handleResize(point,bounds){var _this$context$draggab=this.context.draggable.dragAndDropAction,event=_this$context$draggab.event,direction=_this$context$draggab.direction,_this$props4=this.props,accessors=_this$props4.accessors,slotMetrics=_this$props4.slotMetrics,rtl=_this$props4.rtl,localizer=_this$props4.localizer,_eventTimes2=eventTimes(event,accessors,localizer),start=_eventTimes2.start,end=_eventTimes2.end,slot=(0,selection.sU)(bounds,point.x,rtl,slotMetrics.slots),date=slotMetrics.getDateForSlot(slot),cursorInRow=(0,selection.bY)(bounds,point);if("RIGHT"===direction){if(cursorInRow){if(slotMetrics.last<start)return this.reset();end=localizer.eq(localizer.startOf(end,"day"),end)?localizer.add(date,1,"day"):date}else{if(!(localizer.inRange(start,slotMetrics.first,slotMetrics.last)||bounds.bottom<point.y&&+slotMetrics.first>+start))return void this.setState({segment:null});end=localizer.add(slotMetrics.last,1,"milliseconds")}var originalEnd=accessors.end(event);end=localizer.merge(end,originalEnd),localizer.lt(end,start)&&(end=originalEnd)}else if("LEFT"===direction){if(cursorInRow){if(slotMetrics.first>end)return this.reset();start=date}else{if(!(localizer.inRange(end,slotMetrics.first,slotMetrics.last)||bounds.top>point.y&&localizer.lt(slotMetrics.last,end)))return void this.reset();start=localizer.add(slotMetrics.first,-1,"milliseconds")}var originalStart=accessors.start(event);start=localizer.merge(start,originalStart),localizer.gt(start,end)&&(start=originalStart)}this.update(event,start,end)}},{key:"render",value:function render(){var _this$props5=this.props,children=_this$props5.children,accessors=_this$props5.accessors,segment=this.state.segment;return(0,jsx_runtime.jsxs)("div",{ref:this.ref,className:"rbc-addons-dnd-row-body",children:[children,segment&&(0,jsx_runtime.jsx)(EventRow.A,Object.assign({},this.props,{selected:null,className:"rbc-addons-dnd-drag-row",segments:[segment],accessors:Object.assign({},accessors,dragAccessors)}))]})}}])}(react.Component);WeekWrapper.contextType=DnDContext,WeekWrapper.__docgenInfo={description:"",methods:[{name:"reset",docblock:null,modifiers:[],params:[],returns:null},{name:"update",docblock:null,modifiers:[],params:[{name:"event",type:null},{name:"start",type:null},{name:"end",type:null}],returns:null},{name:"handleMove",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"bounds",type:null},{name:"draggedEvent",type:null}],returns:null},{name:"handleDropFromOutside",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"bounds",type:null}],returns:null},{name:"handleDragOverFromOutside",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"node",type:null}],returns:null},{name:"handleResize",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"bounds",type:null}],returns:null},{name:"_selectable",docblock:null,modifiers:[],params:[],returns:null},{name:"handleInteractionEnd",docblock:null,modifiers:[],params:[],returns:null},{name:"_teardownSelectable",docblock:null,modifiers:[],params:[],returns:null}],displayName:"WeekWrapper",props:{isAllDay:{description:"",type:{name:"bool"},required:!1},slotMetrics:{description:"",type:{name:"object"},required:!0},accessors:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},resourceId:{description:"",type:{name:"any"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},localizer:{description:"",type:{name:"any"},required:!1}}};var dragAndDrop_WeekWrapper=WeekWrapper;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/addons/dragAndDrop/WeekWrapper.js"]={name:"WeekWrapper",docgenInfo:WeekWrapper.__docgenInfo,path:"src/addons/dragAndDrop/WeekWrapper.js"});var withDragAndDrop_excluded=["selectable","elementProps","components"];var dragAndDrop=function withDragAndDrop(Calendar){var DragAndDropCalendar=function(_React$Component){function DragAndDropCalendar(){var _this;(0,classCallCheck.default)(this,DragAndDropCalendar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,DragAndDropCalendar,[].concat(args))).defaultOnDragOver=function(event){event.preventDefault()},_this.handleBeginAction=function(event,action,direction){_this.setState({event:event,action:action,direction:direction});var onDragStart=_this.props.onDragStart;onDragStart&&onDragStart({event:event,action:action,direction:direction})},_this.handleInteractionStart=function(){!1===_this.state.interacting&&_this.setState({interacting:!0})},_this.handleInteractionEnd=function(interactionInfo){var _this$state=_this.state,action=_this$state.action,event=_this$state.event;if(action&&(_this.setState({action:null,event:null,interacting:!1,direction:null}),null!=interactionInfo)){interactionInfo.event=event;var _this$props=_this.props,onEventDrop=_this$props.onEventDrop,onEventResize=_this$props.onEventResize;"move"===action&&onEventDrop&&onEventDrop(interactionInfo),"resize"===action&&onEventResize&&onEventResize(interactionInfo)}},_this.state={interacting:!1},_this}return(0,inherits.default)(DragAndDropCalendar,_React$Component),(0,createClass.default)(DragAndDropCalendar,[{key:"getDnDContextValue",value:function getDnDContextValue(){return{draggable:{onStart:this.handleInteractionStart,onEnd:this.handleInteractionEnd,onBeginAction:this.handleBeginAction,onDropFromOutside:this.props.onDropFromOutside,dragFromOutsideItem:this.props.dragFromOutsideItem,draggableAccessor:this.props.draggableAccessor,resizableAccessor:this.props.resizableAccessor,dragAndDropAction:this.state}}}},{key:"render",value:function render(){var _this$props2=this.props,selectable=_this$props2.selectable,elementProps=_this$props2.elementProps,components=_this$props2.components,props=(0,objectWithoutProperties.A)(_this$props2,withDragAndDrop_excluded),interacting=this.state.interacting;delete props.onEventDrop,delete props.onEventResize,props.selectable=!!selectable&&"ignoreEvents",this.components=mergeComponents(components,{eventWrapper:dragAndDrop_EventWrapper,eventContainerWrapper:dragAndDrop_EventContainerWrapper,weekWrapper:dragAndDrop_WeekWrapper});var elementPropsWithDropFromOutside=this.props.onDropFromOutside?Object.assign({},elementProps,{onDragOver:this.props.onDragOver||this.defaultOnDragOver}):elementProps;props.className=(0,clsx_m.A)(props.className,"rbc-addons-dnd",!!interacting&&"rbc-addons-dnd-is-dragging");var context=this.getDnDContextValue();return(0,jsx_runtime.jsx)(DnDContext.Provider,{value:context,children:(0,jsx_runtime.jsx)(Calendar,Object.assign({},props,{elementProps:elementPropsWithDropFromOutside,components:this.components}))})}}])}(react.Component);return DragAndDropCalendar.defaultProps=Object.assign({},Calendar.defaultProps,{draggableAccessor:null,resizableAccessor:null,resizable:!0}),DragAndDropCalendar}},"./src/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Vv:function(){return src_Calendar},C5:function(){return constants.o},Pp:function(){return constants.l},vH:function(){return dayjs},fk:function(){return globalize},AW:function(){return luxon},ye:function(){return moment}});var NoopWrapper=__webpack_require__("./src/NoopWrapper.js"),BackgroundWrapper=(NoopWrapper.A,__webpack_require__("./src/BackgroundWrapper.js")),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),classCallCheck=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),createClass=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),callSuper=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/callSuper.js"),inherits=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),clsx_m=(__webpack_require__("./node_modules/core-js/modules/es.object.entries.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/clsx/dist/clsx.m.js")),react=__webpack_require__("./node_modules/react/index.js"),esm=__webpack_require__("./node_modules/uncontrollable/lib/esm/index.js"),prop_types=(__webpack_require__("./src/utils/propTypes.js"),__webpack_require__("./node_modules/prop-types/index.js")),prop_types_default=__webpack_require__.n(prop_types),browser=__webpack_require__("./node_modules/invariant/browser.js"),browser_default=__webpack_require__.n(browser),dates=__webpack_require__("./src/utils/dates.js"),localePropType=prop_types_default().oneOfType([prop_types_default().string,prop_types_default().func]);function _format(localizer,formatter,value,format,culture){var result="function"==typeof format?format(value,culture,localizer):formatter.call(localizer,value,format,culture);return browser_default()(null==result||"string"==typeof result,"`localizer format(..)` must return a string, null, or undefined"),result}function getSlotDate(dt,minutesFromMidnight,offset){return new Date(dt.getFullYear(),dt.getMonth(),dt.getDate(),0,minutesFromMidnight+offset,0,0)}function getDstOffset(start,end){return start.getTimezoneOffset()-end.getTimezoneOffset()}function getTotalMin(start,end){return(0,dates.Ui)(start,end,"minutes")+getDstOffset(start,end)}function getMinutesFromMidnight(start){var daystart=(0,dates.GH)(start,"day");return(0,dates.Ui)(daystart,start,"minutes")+getDstOffset(daystart,start)}function continuesPrior(start,first){return(0,dates.lt)(start,first,"day")}function continuesAfter(start,end,last){return(0,dates.eq)(start,end,"minutes")?(0,dates.RO)(end,last,"minutes"):(0,dates.gt)(end,last,"minutes")}function daySpan(start,end){return(0,dates.p0)(start,end,"day")}function sortEvents(_ref){var _ref$evtA=_ref.evtA,aStart=_ref$evtA.start,aEnd=_ref$evtA.end,aAllDay=_ref$evtA.allDay,_ref$evtB=_ref.evtB,bStart=_ref$evtB.start,bEnd=_ref$evtB.end,bAllDay=_ref$evtB.allDay,startSort=+(0,dates.GH)(aStart,"day")-+(0,dates.GH)(bStart,"day"),durA=daySpan(aStart,aEnd),durB=daySpan(bStart,bEnd);return startSort||durB-durA||!!bAllDay-!!aAllDay||+aStart-+bStart||+aEnd-+bEnd}function inEventRange(_ref2){var _ref2$event=_ref2.event,start=_ref2$event.start,end=_ref2$event.end,_ref2$range=_ref2.range,rangeStart=_ref2$range.start,rangeEnd=_ref2$range.end,eStart=(0,dates.GH)(start,"day"),startsBeforeEnd=(0,dates.wJ)(eStart,rangeEnd,"day"),endsAfterStart=(0,dates.t7)(eStart,end,"minutes")?(0,dates.gt)(end,rangeStart,"minutes"):(0,dates.RO)(end,rangeStart,"minutes");return startsBeforeEnd&&endsAfterStart}function isSameDate(date1,date2){return(0,dates.eq)(date1,date2,"day")}function startAndEndAreDateOnly(start,end){return(0,dates.pR)(start)&&(0,dates.pR)(end)}var localizer_DateLocalizer=(0,createClass.default)((function DateLocalizer(spec){var _this=this;(0,classCallCheck.default)(this,DateLocalizer),browser_default()("function"==typeof spec.format,"date localizer `format(..)` must be a function"),browser_default()("function"==typeof spec.firstOfWeek,"date localizer `firstOfWeek(..)` must be a function"),this.propType=spec.propType||localePropType,this.formats=spec.formats,this.format=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _format.apply(void 0,[_this,spec.format].concat(args))},this.startOfWeek=spec.firstOfWeek,this.merge=spec.merge||dates.h1,this.inRange=spec.inRange||dates.r4,this.lt=spec.lt||dates.lt,this.lte=spec.lte||dates.wJ,this.gt=spec.gt||dates.gt,this.gte=spec.gte||dates.RO,this.eq=spec.eq||dates.eq,this.neq=spec.neq||dates.t7,this.startOf=spec.startOf||dates.GH,this.endOf=spec.endOf||dates.pJ,this.add=spec.add||dates.WQ,this.range=spec.range||dates.y1,this.diff=spec.diff||dates.Ui,this.ceil=spec.ceil||dates.mk,this.min=spec.min||dates.jk,this.max=spec.max||dates.T9,this.minutes=spec.minutes||dates.Gx,this.daySpan=spec.daySpan||daySpan,this.firstVisibleDay=spec.firstVisibleDay||dates.tk,this.lastVisibleDay=spec.lastVisibleDay||dates.Jo,this.visibleDays=spec.visibleDays||dates.IC,this.getSlotDate=spec.getSlotDate||getSlotDate,this.getTimezoneOffset=spec.getTimezoneOffset||function(value){return value.getTimezoneOffset()},this.getDstOffset=spec.getDstOffset||getDstOffset,this.getTotalMin=spec.getTotalMin||getTotalMin,this.getMinutesFromMidnight=spec.getMinutesFromMidnight||getMinutesFromMidnight,this.continuesPrior=spec.continuesPrior||continuesPrior,this.continuesAfter=spec.continuesAfter||continuesAfter,this.sortEvents=spec.sortEvents||sortEvents,this.inEventRange=spec.inEventRange||inEventRange,this.isSameDate=spec.isSameDate||isSameDate,this.startAndEndAreDateOnly=spec.startAndEndAreDateOnly||startAndEndAreDateOnly,this.segmentOffset=spec.browserTZOffset?spec.browserTZOffset():0}));function mergeWithDefaults(localizer,culture,formatOverrides,messages){var formats=Object.assign({},localizer.formats,formatOverrides);return Object.assign({},localizer,{messages:messages,startOfWeek:function startOfWeek(){return localizer.startOfWeek(culture)},format:function format(value,_format2){return localizer.format(value,formats[_format2]||_format2,culture)}})}__webpack_require__("./node_modules/core-js/modules/es.array.map.js");var constants=__webpack_require__("./src/utils/constants.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Toolbar=function(_React$Component){function Toolbar(){var _this;(0,classCallCheck.default)(this,Toolbar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,Toolbar,[].concat(args))).navigate=function(action){_this.props.onNavigate(action)},_this.view=function(view){_this.props.onView(view)},_this}return(0,inherits.default)(Toolbar,_React$Component),(0,createClass.default)(Toolbar,[{key:"render",value:function render(){var _this$props=this.props,messages=_this$props.localizer.messages,label=_this$props.label;return(0,jsx_runtime.jsxs)("div",{className:"rbc-toolbar",children:[(0,jsx_runtime.jsxs)("span",{className:"rbc-btn-group",children:[(0,jsx_runtime.jsx)("button",{type:"button",onClick:this.navigate.bind(null,constants.o.TODAY),children:messages.today}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:this.navigate.bind(null,constants.o.PREVIOUS),children:messages.previous}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:this.navigate.bind(null,constants.o.NEXT),children:messages.next})]}),(0,jsx_runtime.jsx)("span",{className:"rbc-toolbar-label",children:label}),(0,jsx_runtime.jsx)("span",{className:"rbc-btn-group",children:this.viewNamesGroup(messages)})]})}},{key:"viewNamesGroup",value:function viewNamesGroup(messages){var _this2=this,viewNames=this.props.views,view=this.props.view;if(viewNames.length>1)return viewNames.map((function(name){return(0,jsx_runtime.jsx)("button",{type:"button",className:(0,clsx_m.A)({"rbc-active":view===name}),onClick:_this2.view.bind(null,name),children:messages[name]},name)}))}}])}(react.Component);Toolbar.__docgenInfo={description:"",methods:[{name:"navigate",docblock:null,modifiers:[],params:[{name:"action",type:null}],returns:null},{name:"view",docblock:null,modifiers:[],params:[{name:"view",type:null}],returns:null},{name:"viewNamesGroup",docblock:null,modifiers:[],params:[{name:"messages",type:null}],returns:null}],displayName:"Toolbar",props:{view:{description:"",type:{name:"string"},required:!0},views:{description:"",type:{name:"arrayOf",value:{name:"string"}},required:!0},label:{description:"",type:{name:"node"},required:!0},localizer:{description:"",type:{name:"object"},required:!1},onNavigate:{description:"",type:{name:"func"},required:!0},onView:{description:"",type:{name:"func"},required:!0}}};var src_Toolbar=Toolbar;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Toolbar.js"]={name:"Toolbar",docgenInfo:Toolbar.__docgenInfo,path:"src/Toolbar.js"});var helpers=__webpack_require__("./src/utils/helpers.js"),defaultMessages={date:"Date",time:"Time",event:"Event",allDay:"All Day",week:"Week",work_week:"Work Week",day:"Day",month:"Month",previous:"Back",next:"Next",yesterday:"Yesterday",tomorrow:"Tomorrow",today:"Today",agenda:"Agenda",noEventsInRange:"There are no events in this range.",showMore:function showMore(total){return"+".concat(total," more")}};var defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),chunk=(__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.array.sort.js"),__webpack_require__("./node_modules/lodash/chunk.js")),chunk_default=__webpack_require__.n(chunk),esm_position=__webpack_require__("./node_modules/dom-helpers/esm/position.js"),animationFrame=__webpack_require__("./node_modules/dom-helpers/esm/animationFrame.js"),PopOverlay=__webpack_require__("./src/PopOverlay.js"),DateContentRow=__webpack_require__("./src/DateContentRow.js"),Header=__webpack_require__("./src/Header.js"),DateHeader=function DateHeader(_ref){var label=_ref.label,drilldownView=_ref.drilldownView,onDrillDown=_ref.onDrillDown;return drilldownView?(0,jsx_runtime.jsx)("button",{type:"button",className:"rbc-button-link",onClick:onDrillDown,role:"cell",children:label}):(0,jsx_runtime.jsx)("span",{children:label})};DateHeader.displayName="DateHeader",DateHeader.__docgenInfo={description:"",methods:[],displayName:"DateHeader",props:{label:{description:"",type:{name:"node"},required:!1},date:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},drilldownView:{description:"",type:{name:"string"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},isOffRange:{description:"",type:{name:"bool"},required:!1}}};var src_DateHeader=DateHeader;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/DateHeader.js"]={name:"DateHeader",docgenInfo:DateHeader.__docgenInfo,path:"src/DateHeader.js"});var eventLevels=__webpack_require__("./src/utils/eventLevels.js"),_excluded=["date","className"],MonthView=function(_React$Component){function MonthView(){var _this;(0,classCallCheck.default)(this,MonthView);for(var _len=arguments.length,_args=new Array(_len),_key=0;_key<_len;_key++)_args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,MonthView,[].concat(_args))).getContainer=function(){return _this.containerRef.current},_this.renderWeek=function(week,weekIdx){var _this$props=_this.props,events=_this$props.events,components=_this$props.components,selectable=_this$props.selectable,getNow=_this$props.getNow,selected=_this$props.selected,date=_this$props.date,localizer=_this$props.localizer,longPressThreshold=_this$props.longPressThreshold,accessors=_this$props.accessors,getters=_this$props.getters,showAllEvents=_this$props.showAllEvents,_this$state=_this.state,needLimitMeasure=_this$state.needLimitMeasure,rowLimit=_this$state.rowLimit,weeksEvents=function eventsForWeek(evts,start,end,accessors,localizer){return evts.filter((function(e){return(0,eventLevels.r4)(e,start,end,accessors,localizer)}))}((0,toConsumableArray.A)(events),week[0],week[week.length-1],accessors,localizer),sorted=(0,eventLevels.SY)(weeksEvents,accessors,localizer);return(0,jsx_runtime.jsx)(DateContentRow.A,{ref:0===weekIdx?_this.slotRowRef:void 0,container:_this.getContainer,className:"rbc-month-row",getNow:getNow,date:date,range:week,events:sorted,maxRows:showAllEvents?1/0:rowLimit,selected:selected,selectable:selectable,components:components,accessors:accessors,getters:getters,localizer:localizer,renderHeader:_this.readerDateHeading,renderForMeasure:needLimitMeasure,onShowMore:_this.handleShowMore,onSelect:_this.handleSelectEvent,onDoubleClick:_this.handleDoubleClickEvent,onKeyPress:_this.handleKeyPressEvent,onSelectSlot:_this.handleSelectSlot,longPressThreshold:longPressThreshold,rtl:_this.props.rtl,resizable:_this.props.resizable,showAllEvents:showAllEvents},weekIdx)},_this.readerDateHeading=function(_ref){var date=_ref.date,className=_ref.className,props=(0,objectWithoutProperties.A)(_ref,_excluded),_this$props2=_this.props,currentDate=_this$props2.date,getDrilldownView=_this$props2.getDrilldownView,localizer=_this$props2.localizer,isOffRange=localizer.neq(date,currentDate,"month"),isCurrent=localizer.isSameDate(date,currentDate),drilldownView=getDrilldownView(date),label=localizer.format(date,"dateFormat"),DateHeaderComponent=_this.props.components.dateHeader||src_DateHeader;return(0,jsx_runtime.jsx)("div",Object.assign({},props,{className:(0,clsx_m.A)(className,isOffRange&&"rbc-off-range",isCurrent&&"rbc-current"),role:"cell",children:(0,jsx_runtime.jsx)(DateHeaderComponent,{label:label,date:date,drilldownView:drilldownView,isOffRange:isOffRange,onDrillDown:function onDrillDown(e){return _this.handleHeadingClick(date,drilldownView,e)}})}))},_this.handleSelectSlot=function(range,slotInfo){_this._pendingSelection=_this._pendingSelection.concat(range),clearTimeout(_this._selectTimer),_this._selectTimer=setTimeout((function(){return _this.selectDates(slotInfo)}))},_this.handleHeadingClick=function(date,view,e){e.preventDefault(),_this.clearSelection(),(0,helpers.me)(_this.props.onDrillDown,[date,view])},_this.handleSelectEvent=function(){_this.clearSelection();for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];(0,helpers.me)(_this.props.onSelectEvent,args)},_this.handleDoubleClickEvent=function(){_this.clearSelection();for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++)args[_key3]=arguments[_key3];(0,helpers.me)(_this.props.onDoubleClickEvent,args)},_this.handleKeyPressEvent=function(){_this.clearSelection();for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++)args[_key4]=arguments[_key4];(0,helpers.me)(_this.props.onKeyPressEvent,args)},_this.handleShowMore=function(events,date,cell,slot,target){var _this$props3=_this.props,popup=_this$props3.popup,onDrillDown=_this$props3.onDrillDown,onShowMore=_this$props3.onShowMore,getDrilldownView=_this$props3.getDrilldownView,doShowMoreDrillDown=_this$props3.doShowMoreDrillDown;if(_this.clearSelection(),popup){var position=(0,esm_position.A)(cell,_this.containerRef.current);_this.setState({overlay:{date:date,events:events,position:position,target:target}})}else doShowMoreDrillDown&&(0,helpers.me)(onDrillDown,[date,getDrilldownView(date)||constants.l.DAY]);(0,helpers.me)(onShowMore,[events,date,slot])},_this.overlayDisplay=function(){_this.setState({overlay:null})},_this.state={rowLimit:5,needLimitMeasure:!0,date:null},_this.containerRef=(0,react.createRef)(),_this.slotRowRef=(0,react.createRef)(),_this._bgRows=[],_this._pendingSelection=[],_this}return(0,inherits.default)(MonthView,_React$Component),(0,createClass.default)(MonthView,[{key:"componentDidMount",value:function componentDidMount(){var running,_this2=this;this.state.needLimitMeasure&&this.measureRowLimit(this.props),window.addEventListener("resize",this._resizeListener=function(){running||animationFrame.E((function(){running=!1,_this2.setState({needLimitMeasure:!0})}))},!1)}},{key:"componentDidUpdate",value:function componentDidUpdate(){this.state.needLimitMeasure&&this.measureRowLimit(this.props)}},{key:"componentWillUnmount",value:function componentWillUnmount(){window.removeEventListener("resize",this._resizeListener,!1)}},{key:"render",value:function render(){var _this$props4=this.props,date=_this$props4.date,localizer=_this$props4.localizer,className=_this$props4.className,month=localizer.visibleDays(date,localizer),weeks=chunk_default()(month,7);return this._weekCount=weeks.length,(0,jsx_runtime.jsxs)("div",{className:(0,clsx_m.A)("rbc-month-view",className),role:"table","aria-label":"Month View",ref:this.containerRef,children:[(0,jsx_runtime.jsx)("div",{className:"rbc-row rbc-month-header",role:"row",children:this.renderHeaders(weeks[0])}),weeks.map(this.renderWeek),this.props.popup&&this.renderOverlay()]})}},{key:"renderHeaders",value:function renderHeaders(row){var _this$props5=this.props,localizer=_this$props5.localizer,components=_this$props5.components,first=row[0],last=row[row.length-1],HeaderComponent=components.header||Header.A;return localizer.range(first,last,"day").map((function(day,idx){return(0,jsx_runtime.jsx)("div",{className:"rbc-header",children:(0,jsx_runtime.jsx)(HeaderComponent,{date:day,localizer:localizer,label:localizer.format(day,"weekdayFormat")})},"header_"+idx)}))}},{key:"renderOverlay",value:function renderOverlay(){var _this$state$overlay,_this$state2,_this3=this,overlay=null!==(_this$state$overlay=null===(_this$state2=this.state)||void 0===_this$state2?void 0:_this$state2.overlay)&&void 0!==_this$state$overlay?_this$state$overlay:{},_this$props6=this.props,accessors=_this$props6.accessors,localizer=_this$props6.localizer,components=_this$props6.components,getters=_this$props6.getters,selected=_this$props6.selected,popupOffset=_this$props6.popupOffset,handleDragStart=_this$props6.handleDragStart;return(0,jsx_runtime.jsx)(PopOverlay.A,{overlay:overlay,accessors:accessors,localizer:localizer,components:components,getters:getters,selected:selected,popupOffset:popupOffset,ref:this.containerRef,handleKeyPressEvent:this.handleKeyPressEvent,handleSelectEvent:this.handleSelectEvent,handleDoubleClickEvent:this.handleDoubleClickEvent,handleDragStart:handleDragStart,show:!!overlay.position,overlayDisplay:this.overlayDisplay,onHide:function onHide(){return _this3.setState({overlay:null})}})}},{key:"measureRowLimit",value:function measureRowLimit(){this.setState({needLimitMeasure:!1,rowLimit:this.slotRowRef.current.getRowLimit()})}},{key:"selectDates",value:function selectDates(slotInfo){var slots=this._pendingSelection.slice();this._pendingSelection=[],slots.sort((function(a,b){return+a-+b}));var start=new Date(slots[0]),end=new Date(slots[slots.length-1]);end.setDate(slots[slots.length-1].getDate()+1),(0,helpers.me)(this.props.onSelectSlot,{slots:slots,start:start,end:end,action:slotInfo.action,bounds:slotInfo.bounds,box:slotInfo.box})}},{key:"clearSelection",value:function clearSelection(){clearTimeout(this._selectTimer),this._pendingSelection=[]}}],[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(_ref2,state){var date=_ref2.date;return{date:date,needLimitMeasure:_ref2.localizer.neq(date,state.date,"month")}}}])}(react.Component);MonthView.range=function(date,_ref3){var localizer=_ref3.localizer;return{start:localizer.firstVisibleDay(date,localizer),end:localizer.lastVisibleDay(date,localizer)}},MonthView.navigate=function(date,action,_ref4){var localizer=_ref4.localizer;switch(action){case constants.o.PREVIOUS:return localizer.add(date,-1,"month");case constants.o.NEXT:return localizer.add(date,1,"month");default:return date}},MonthView.title=function(date,_ref5){return _ref5.localizer.format(date,"monthHeaderFormat")},MonthView.__docgenInfo={description:"",methods:[{name:"getContainer",docblock:null,modifiers:[],params:[],returns:null},{name:"renderWeek",docblock:null,modifiers:[],params:[{name:"week",type:null},{name:"weekIdx",type:null}],returns:null},{name:"readerDateHeading",docblock:null,modifiers:[],params:[{name:"{ date, className, ...props }",type:null}],returns:null},{name:"renderHeaders",docblock:null,modifiers:[],params:[{name:"row",type:null}],returns:null},{name:"renderOverlay",docblock:null,modifiers:[],params:[],returns:null},{name:"measureRowLimit",docblock:null,modifiers:[],params:[],returns:null},{name:"handleSelectSlot",docblock:null,modifiers:[],params:[{name:"range",type:null},{name:"slotInfo",type:null}],returns:null},{name:"handleHeadingClick",docblock:null,modifiers:[],params:[{name:"date",type:null},{name:"view",type:null},{name:"e",type:null}],returns:null},{name:"handleSelectEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleDoubleClickEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleKeyPressEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleShowMore",docblock:null,modifiers:[],params:[{name:"events",type:null},{name:"date",type:null},{name:"cell",type:null},{name:"slot",type:null},{name:"target",type:null}],returns:null},{name:"overlayDisplay",docblock:null,modifiers:[],params:[],returns:null},{name:"selectDates",docblock:null,modifiers:[],params:[{name:"slotInfo",type:null}],returns:null},{name:"clearSelection",docblock:null,modifiers:[],params:[],returns:null},{name:"range",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null},{name:"navigate",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"action",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null},{name:"title",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null}],displayName:"MonthView",props:{events:{description:"",type:{name:"array"},required:!0},date:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},min:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},max:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},step:{description:"",type:{name:"number"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},scrollToTime:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},enableAutoScroll:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},width:{description:"",type:{name:"number"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onNavigate:{description:"",type:{name:"func"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelectEvent:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},showAllEvents:{description:"",type:{name:"bool"},required:!1},doShowMoreDrillDown:{description:"",type:{name:"bool"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},getDrilldownView:{description:"",type:{name:"func"},required:!0},popup:{description:"",type:{name:"bool"},required:!1},handleDragStart:{description:"",type:{name:"func"},required:!1},popupOffset:{description:"",type:{name:"union",value:[{name:"number"},{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}}]},required:!1}}};var Month=MonthView;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Month.js"]={name:"MonthView",docgenInfo:MonthView.__docgenInfo,path:"src/Month.js"});var TimeGrid=__webpack_require__("./src/TimeGrid.js"),Day_excluded=["date","localizer","min","max","scrollToTime","enableAutoScroll"],Day=function(_React$Component){function Day(){return(0,classCallCheck.default)(this,Day),(0,callSuper.default)(this,Day,arguments)}return(0,inherits.default)(Day,_React$Component),(0,createClass.default)(Day,[{key:"render",value:function render(){var _this$props=this.props,date=_this$props.date,localizer=_this$props.localizer,_this$props$min=_this$props.min,min=void 0===_this$props$min?localizer.startOf(new Date,"day"):_this$props$min,_this$props$max=_this$props.max,max=void 0===_this$props$max?localizer.endOf(new Date,"day"):_this$props$max,_this$props$scrollToT=_this$props.scrollToTime,scrollToTime=void 0===_this$props$scrollToT?localizer.startOf(new Date,"day"):_this$props$scrollToT,_this$props$enableAut=_this$props.enableAutoScroll,enableAutoScroll=void 0===_this$props$enableAut||_this$props$enableAut,props=(0,objectWithoutProperties.A)(_this$props,Day_excluded),range=Day.range(date,{localizer:localizer});return(0,jsx_runtime.jsx)(TimeGrid.A,Object.assign({},props,{range:range,eventOffset:10,localizer:localizer,min:min,max:max,scrollToTime:scrollToTime,enableAutoScroll:enableAutoScroll}))}}])}(react.Component);Day.range=function(date,_ref){return[_ref.localizer.startOf(date,"day")]},Day.navigate=function(date,action,_ref2){var localizer=_ref2.localizer;switch(action){case constants.o.PREVIOUS:return localizer.add(date,-1,"day");case constants.o.NEXT:return localizer.add(date,1,"day");default:return date}},Day.title=function(date,_ref3){return _ref3.localizer.format(date,"dayHeaderFormat")},Day.__docgenInfo={description:"",methods:[{name:"range",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null},{name:"navigate",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"action",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null},{name:"title",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null}],displayName:"Day",props:{date:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},events:{description:"",type:{name:"array"},required:!0},backgroundEvents:{description:"",type:{name:"array"},required:!0},resources:{description:"",type:{name:"array"},required:!1},step:{description:"",type:{name:"number"},required:!1},timeslots:{description:"",type:{name:"number"},required:!1},range:{description:"",type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1},min:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},max:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},scrollToTime:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},enableAutoScroll:{description:"",type:{name:"bool"},required:!1},showMultiDayTimes:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},width:{description:"",type:{name:"number"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},allDayMaxRows:{description:"",type:{name:"number"},required:!1},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onNavigate:{description:"",type:{name:"func"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelectEnd:{description:"",type:{name:"func"},required:!1},onSelectStart:{description:"",type:{name:"func"},required:!1},onSelectEvent:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},getDrilldownView:{description:"",type:{name:"func"},required:!0},dayLayoutAlgorithm:{description:"",type:{name:"custom",raw:"DayLayoutAlgorithmPropType"},required:!1},showAllEvents:{description:"",type:{name:"bool"},required:!1},doShowMoreDrillDown:{description:"",type:{name:"bool"},required:!1},popup:{description:"",type:{name:"bool"},required:!1},handleDragStart:{description:"",type:{name:"func"},required:!1},popupOffset:{description:"",type:{name:"union",value:[{name:"number"},{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}}]},required:!1}}};var src_Day=Day;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Day.js"]={name:"Day",docgenInfo:Day.__docgenInfo,path:"src/Day.js"});var toArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toArray.js"),Week_excluded=["date","localizer","min","max","scrollToTime","enableAutoScroll"],Week=function(_React$Component){function Week(){return(0,classCallCheck.default)(this,Week),(0,callSuper.default)(this,Week,arguments)}return(0,inherits.default)(Week,_React$Component),(0,createClass.default)(Week,[{key:"render",value:function render(){var _this$props=this.props,date=_this$props.date,localizer=_this$props.localizer,_this$props$min=_this$props.min,min=void 0===_this$props$min?localizer.startOf(new Date,"day"):_this$props$min,_this$props$max=_this$props.max,max=void 0===_this$props$max?localizer.endOf(new Date,"day"):_this$props$max,_this$props$scrollToT=_this$props.scrollToTime,scrollToTime=void 0===_this$props$scrollToT?localizer.startOf(new Date,"day"):_this$props$scrollToT,_this$props$enableAut=_this$props.enableAutoScroll,enableAutoScroll=void 0===_this$props$enableAut||_this$props$enableAut,props=(0,objectWithoutProperties.A)(_this$props,Week_excluded),range=Week.range(date,this.props);return(0,jsx_runtime.jsx)(TimeGrid.A,Object.assign({},props,{range:range,eventOffset:15,localizer:localizer,min:min,max:max,scrollToTime:scrollToTime,enableAutoScroll:enableAutoScroll}))}}])}(react.Component);Week.defaultProps=TimeGrid.A.defaultProps,Week.navigate=function(date,action,_ref){var localizer=_ref.localizer;switch(action){case constants.o.PREVIOUS:return localizer.add(date,-1,"week");case constants.o.NEXT:return localizer.add(date,1,"week");default:return date}},Week.range=function(date,_ref2){var localizer=_ref2.localizer,firstOfWeek=localizer.startOfWeek(),start=localizer.startOf(date,"week",firstOfWeek),end=localizer.endOf(date,"week",firstOfWeek);return localizer.range(start,end)},Week.title=function(date,_ref3){var localizer=_ref3.localizer,_Week$range=Week.range(date,{localizer:localizer}),_Week$range2=(0,toArray.A)(_Week$range),start=_Week$range2[0],rest=_Week$range2.slice(1);return localizer.format({start:start,end:rest.pop()},"dayRangeHeaderFormat")},Week.__docgenInfo={description:"",methods:[{name:"navigate",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"action",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null},{name:"range",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null},{name:"title",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null}],displayName:"Week",props:{date:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},events:{description:"",type:{name:"array"},required:!0},backgroundEvents:{description:"",type:{name:"array"},required:!0},resources:{description:"",type:{name:"array"},required:!1},step:{description:"",type:{name:"number"},required:!1},timeslots:{description:"",type:{name:"number"},required:!1},range:{description:"",type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1},min:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},max:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},scrollToTime:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},enableAutoScroll:{description:"",type:{name:"bool"},required:!1},showMultiDayTimes:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},width:{description:"",type:{name:"number"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},allDayMaxRows:{description:"",type:{name:"number"},required:!1},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onNavigate:{description:"",type:{name:"func"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelectEnd:{description:"",type:{name:"func"},required:!1},onSelectStart:{description:"",type:{name:"func"},required:!1},onSelectEvent:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},getDrilldownView:{description:"",type:{name:"func"},required:!0},dayLayoutAlgorithm:{description:"",type:{name:"custom",raw:"DayLayoutAlgorithmPropType"},required:!1},showAllEvents:{description:"",type:{name:"bool"},required:!1},doShowMoreDrillDown:{description:"",type:{name:"bool"},required:!1},popup:{description:"",type:{name:"bool"},required:!1},handleDragStart:{description:"",type:{name:"func"},required:!1},popupOffset:{description:"",type:{name:"union",value:[{name:"number"},{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}}]},required:!1}}};var src_Week=Week;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Week.js"]={name:"Week",docgenInfo:Week.__docgenInfo,path:"src/Week.js"});var WorkWeek_excluded=["date","localizer","min","max","scrollToTime","enableAutoScroll"];function workWeekRange(date,options){return src_Week.range(date,options).filter((function(d){return-1===[6,0].indexOf(d.getDay())}))}var WorkWeek=function(_React$Component){function WorkWeek(){return(0,classCallCheck.default)(this,WorkWeek),(0,callSuper.default)(this,WorkWeek,arguments)}return(0,inherits.default)(WorkWeek,_React$Component),(0,createClass.default)(WorkWeek,[{key:"render",value:function render(){var _this$props=this.props,date=_this$props.date,localizer=_this$props.localizer,_this$props$min=_this$props.min,min=void 0===_this$props$min?localizer.startOf(new Date,"day"):_this$props$min,_this$props$max=_this$props.max,max=void 0===_this$props$max?localizer.endOf(new Date,"day"):_this$props$max,_this$props$scrollToT=_this$props.scrollToTime,scrollToTime=void 0===_this$props$scrollToT?localizer.startOf(new Date,"day"):_this$props$scrollToT,_this$props$enableAut=_this$props.enableAutoScroll,enableAutoScroll=void 0===_this$props$enableAut||_this$props$enableAut,props=(0,objectWithoutProperties.A)(_this$props,WorkWeek_excluded),range=workWeekRange(date,this.props);return(0,jsx_runtime.jsx)(TimeGrid.A,Object.assign({},props,{range:range,eventOffset:15,localizer:localizer,min:min,max:max,scrollToTime:scrollToTime,enableAutoScroll:enableAutoScroll}))}}])}(react.Component);WorkWeek.defaultProps=TimeGrid.A.defaultProps,WorkWeek.range=workWeekRange,WorkWeek.navigate=src_Week.navigate,WorkWeek.title=function(date,_ref){var localizer=_ref.localizer,_workWeekRange=workWeekRange(date,{localizer:localizer}),_workWeekRange2=(0,toArray.A)(_workWeekRange),start=_workWeekRange2[0],rest=_workWeekRange2.slice(1);return localizer.format({start:start,end:rest.pop()},"dayRangeHeaderFormat")},WorkWeek.__docgenInfo={description:"",methods:[{name:"title",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null}],displayName:"WorkWeek",props:{date:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},localizer:{description:"",type:{name:"any"},required:!1},min:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},max:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},scrollToTime:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},enableAutoScroll:{description:"",type:{name:"bool"},required:!1}}};var src_WorkWeek=WorkWeek;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/WorkWeek.js"]={name:"WorkWeek",docgenInfo:WorkWeek.__docgenInfo,path:"src/WorkWeek.js"});__webpack_require__("./node_modules/core-js/modules/es.string.trim.js");var addClass=__webpack_require__("./node_modules/dom-helpers/esm/addClass.js"),removeClass=__webpack_require__("./node_modules/dom-helpers/esm/removeClass.js"),width=__webpack_require__("./node_modules/dom-helpers/esm/width.js"),scrollbarSize=__webpack_require__("./node_modules/dom-helpers/esm/scrollbarSize.js"),selection=__webpack_require__("./src/utils/selection.js");function Agenda(_ref){var accessors=_ref.accessors,components=_ref.components,date=_ref.date,events=_ref.events,getters=_ref.getters,_ref$length=_ref.length,length=void 0===_ref$length?30:_ref$length,localizer=_ref.localizer,onDoubleClickEvent=_ref.onDoubleClickEvent,onSelectEvent=_ref.onSelectEvent,selected=_ref.selected,headerRef=(0,react.useRef)(null),dateColRef=(0,react.useRef)(null),timeColRef=(0,react.useRef)(null),contentRef=(0,react.useRef)(null),tbodyRef=(0,react.useRef)(null);(0,react.useEffect)((function(){_adjustHeader()}));var timeRangeLabel=function timeRangeLabel(day,event){var labelClass="",TimeComponent=components.time,label=localizer.messages.allDay,end=accessors.end(event),start=accessors.start(event);return accessors.allDay(event)||(localizer.eq(start,end)?label=localizer.format(start,"agendaTimeFormat"):localizer.isSameDate(start,end)?label=localizer.format({start:start,end:end},"agendaTimeRangeFormat"):localizer.isSameDate(day,start)?label=localizer.format(start,"agendaTimeFormat"):localizer.isSameDate(day,end)&&(label=localizer.format(end,"agendaTimeFormat"))),localizer.gt(day,start,"day")&&(labelClass="rbc-continues-prior"),localizer.lt(day,end,"day")&&(labelClass+=" rbc-continues-after"),(0,jsx_runtime.jsx)("span",{className:labelClass.trim(),children:TimeComponent?(0,jsx_runtime.jsx)(TimeComponent,{event:event,day:day,label:label}):label})},_adjustHeader=function _adjustHeader(){if(tbodyRef.current){var header=headerRef.current,firstRow=tbodyRef.current.firstChild;if(firstRow){var isOverflowing=contentRef.current.scrollHeight>contentRef.current.clientHeight,_widths=[],widths=_widths;_widths=[(0,width.A)(firstRow.children[0]),(0,width.A)(firstRow.children[1])],widths[0]===_widths[0]&&widths[1]===_widths[1]||(dateColRef.current.style.width=_widths[0]+"px",timeColRef.current.style.width=_widths[1]+"px"),isOverflowing?((0,addClass.A)(header,"rbc-header-overflowing"),header.style.marginRight=(0,scrollbarSize.A)()+"px"):(0,removeClass.A)(header,"rbc-header-overflowing")}}},messages=localizer.messages,end=localizer.add(date,length,"day"),range=localizer.range(date,end,"day");return(events=events.filter((function(event){return(0,eventLevels.r4)(event,localizer.startOf(date,"day"),localizer.endOf(end,"day"),accessors,localizer)}))).sort((function(a,b){return+accessors.start(a)-+accessors.start(b)})),(0,jsx_runtime.jsx)("div",{className:"rbc-agenda-view",children:0!==events.length?(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)("table",{ref:headerRef,className:"rbc-agenda-table",children:(0,jsx_runtime.jsx)("thead",{children:(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("th",{className:"rbc-header",ref:dateColRef,children:messages.date}),(0,jsx_runtime.jsx)("th",{className:"rbc-header",ref:timeColRef,children:messages.time}),(0,jsx_runtime.jsx)("th",{className:"rbc-header",children:messages.event})]})})}),(0,jsx_runtime.jsx)("div",{className:"rbc-agenda-content",ref:contentRef,children:(0,jsx_runtime.jsx)("table",{className:"rbc-agenda-table",children:(0,jsx_runtime.jsx)("tbody",{ref:tbodyRef,children:range.map((function(day,idx){return function renderDay(day,events,dayKey){var Event=components.event,AgendaDate=components.date;return(events=events.filter((function(e){return(0,eventLevels.r4)(e,localizer.startOf(day,"day"),localizer.endOf(day,"day"),accessors,localizer)}))).map((function(event,idx){var title=accessors.title(event),end=accessors.end(event),start=accessors.start(event),userProps=getters.eventProp(event,start,end,(0,selection.sp)(event,selected)),dateLabel=0===idx&&localizer.format(day,"agendaDateFormat"),first=0===idx&&(0,jsx_runtime.jsx)("td",{rowSpan:events.length,className:"rbc-agenda-date-cell",children:AgendaDate?(0,jsx_runtime.jsx)(AgendaDate,{day:day,label:dateLabel}):dateLabel});return(0,jsx_runtime.jsxs)("tr",{className:userProps.className,style:userProps.style,children:[first,(0,jsx_runtime.jsx)("td",{className:"rbc-agenda-time-cell",children:timeRangeLabel(day,event)}),(0,jsx_runtime.jsx)("td",{className:"rbc-agenda-event-cell",onClick:function onClick(e){return onSelectEvent&&onSelectEvent(event,e)},onDoubleClick:function onDoubleClick(e){return onDoubleClickEvent&&onDoubleClickEvent(event,e)},children:Event?(0,jsx_runtime.jsx)(Event,{event:event,title:title}):title})]},dayKey+"_"+idx)}),[])}(day,events,idx)}))})})})]}):(0,jsx_runtime.jsx)("span",{className:"rbc-agenda-empty",children:messages.noEventsInRange})})}Agenda.displayName="Agenda",Agenda.range=function(start,_ref2){var _ref2$length=_ref2.length,length=void 0===_ref2$length?30:_ref2$length;return{start:start,end:_ref2.localizer.add(start,length,"day")}},Agenda.navigate=function(date,action,_ref3){var _ref3$length=_ref3.length,length=void 0===_ref3$length?30:_ref3$length,localizer=_ref3.localizer;switch(action){case constants.o.PREVIOUS:return localizer.add(date,-length,"day");case constants.o.NEXT:return localizer.add(date,length,"day");default:return date}},Agenda.title=function(start,_ref4){var _ref4$length=_ref4.length,length=void 0===_ref4$length?30:_ref4$length,localizer=_ref4.localizer,end=localizer.add(start,length,"day");return localizer.format({start:start,end:end},"agendaHeaderFormat")},Agenda.__docgenInfo={description:"",methods:[{name:"range",docblock:null,modifiers:["static"],params:[{name:"start",optional:!1,type:null},{name:"{ length = DEFAULT_LENGTH, localizer }",type:null}],returns:null},{name:"navigate",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"action",optional:!1,type:null},{name:"{ length = DEFAULT_LENGTH, localizer }",type:null}],returns:null},{name:"title",docblock:null,modifiers:["static"],params:[{name:"start",optional:!1,type:null},{name:"{ length = DEFAULT_LENGTH, localizer }",type:null}],returns:null}],displayName:"Agenda",props:{length:{defaultValue:{value:"30",computed:!1},description:"",type:{name:"number"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},date:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},events:{description:"",type:{name:"array"},required:!1},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},onSelectEvent:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},selected:{description:"",type:{name:"object"},required:!1}}};var src_Agenda=Agenda;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Agenda.js"]={name:"Agenda",docgenInfo:Agenda.__docgenInfo,path:"src/Agenda.js"});var Views=(0,defineProperty.A)((0,defineProperty.A)((0,defineProperty.A)((0,defineProperty.A)((0,defineProperty.A)({},constants.l.MONTH,Month),constants.l.WEEK,src_Week),constants.l.WORK_WEEK,src_WorkWeek),constants.l.DAY,src_Day),constants.l.AGENDA,src_Agenda),move_excluded=["action","date","today"];var defaults=__webpack_require__("./node_modules/lodash/defaults.js"),defaults_default=__webpack_require__.n(defaults),mapValues=__webpack_require__("./node_modules/lodash/mapValues.js"),mapValues_default=__webpack_require__.n(mapValues),omit=__webpack_require__("./node_modules/lodash/omit.js"),omit_default=__webpack_require__.n(omit),transform=__webpack_require__("./node_modules/lodash/transform.js"),transform_default=__webpack_require__.n(transform),accessors=__webpack_require__("./src/utils/accessors.js"),Calendar_excluded=["view","date","getNow","onNavigate"],_excluded2=["view","toolbar","events","backgroundEvents","resourceGroupingLayout","style","className","elementProps","date","getNow","length","showMultiDayTimes","onShowMore","doShowMoreDrillDown","components","formats","messages","culture"];function viewNames(_views){if(Array.isArray(_views))return _views;for(var views=[],_i=0,_Object$entries=Object.entries(_views);_i<_Object$entries.length;_i++){var _ref=_Object$entries[_i],_ref2=(0,slicedToArray.A)(_ref,2),key=_ref2[0];_ref2[1]&&views.push(key)}return views}var Calendar=function(_React$Component){function Calendar(){var _this;(0,classCallCheck.default)(this,Calendar);for(var _len=arguments.length,_args=new Array(_len),_key=0;_key<_len;_key++)_args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,Calendar,[].concat(_args))).getViews=function(){var views=_this.props.views;return Array.isArray(views)?transform_default()(views,(function(obj,name){return obj[name]=Views[name]}),{}):"object"==typeof views?mapValues_default()(views,(function(value,key){return!0===value?Views[key]:value})):Views},_this.getView=function(){return _this.getViews()[_this.props.view]},_this.getDrilldownView=function(date){var _this$props=_this.props,view=_this$props.view,drilldownView=_this$props.drilldownView,getDrilldownView=_this$props.getDrilldownView;return getDrilldownView?getDrilldownView(date,view,Object.keys(_this.getViews())):drilldownView},_this.handleRangeChange=function(date,viewComponent,view){var _this$props2=_this.props,onRangeChange=_this$props2.onRangeChange,localizer=_this$props2.localizer;onRangeChange&&viewComponent.range&&onRangeChange(viewComponent.range(date,{localizer:localizer}),view)},_this.handleNavigate=function(action,newDate){var _this$props3=_this.props,view=_this$props3.view,date=_this$props3.date,getNow=_this$props3.getNow,onNavigate=_this$props3.onNavigate,props=(0,objectWithoutProperties.A)(_this$props3,Calendar_excluded),ViewComponent=_this.getView(),today=getNow();date=function moveDate(View,_ref){var action=_ref.action,date=_ref.date,today=_ref.today,props=(0,objectWithoutProperties.A)(_ref,move_excluded);switch(View="string"==typeof View?Views[View]:View,action){case constants.o.TODAY:date=today||new Date;break;case constants.o.DATE:break;default:browser_default()(View&&"function"==typeof View.navigate,"Calendar View components must implement a static `.navigate(date, action)` method.s"),date=View.navigate(date,action,props)}return date}(ViewComponent,Object.assign({},props,{action:action,date:newDate||date||today,today:today})),onNavigate(date,view,action),_this.handleRangeChange(date,ViewComponent)},_this.handleViewChange=function(view){view!==_this.props.view&&function isValidView(view,_ref3){return-1!==viewNames(_ref3.views).indexOf(view)}(view,_this.props)&&_this.props.onView(view);var views=_this.getViews();_this.handleRangeChange(_this.props.date||_this.props.getNow(),views[view],view)},_this.handleSelectEvent=function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];(0,helpers.me)(_this.props.onSelectEvent,args)},_this.handleDoubleClickEvent=function(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++)args[_key3]=arguments[_key3];(0,helpers.me)(_this.props.onDoubleClickEvent,args)},_this.handleKeyPressEvent=function(){for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++)args[_key4]=arguments[_key4];(0,helpers.me)(_this.props.onKeyPressEvent,args)},_this.handleSelectSlot=function(slotInfo){(0,helpers.me)(_this.props.onSelectSlot,slotInfo)},_this.handleDrillDown=function(date,view){var onDrillDown=_this.props.onDrillDown;onDrillDown?onDrillDown(date,view,_this.drilldownView):(view&&_this.handleViewChange(view),_this.handleNavigate(constants.o.DATE,date))},_this.state={context:Calendar.getContext(_this.props)},_this}return(0,inherits.default)(Calendar,_React$Component),(0,createClass.default)(Calendar,[{key:"render",value:function render(){var _this$props4=this.props,view=_this$props4.view,toolbar=_this$props4.toolbar,events=_this$props4.events,backgroundEvents=_this$props4.backgroundEvents,resourceGroupingLayout=_this$props4.resourceGroupingLayout,style=_this$props4.style,className=_this$props4.className,elementProps=_this$props4.elementProps,current=_this$props4.date,getNow=_this$props4.getNow,length=_this$props4.length,showMultiDayTimes=_this$props4.showMultiDayTimes,onShowMore=_this$props4.onShowMore,doShowMoreDrillDown=_this$props4.doShowMoreDrillDown,props=(_this$props4.components,_this$props4.formats,_this$props4.messages,_this$props4.culture,(0,objectWithoutProperties.A)(_this$props4,_excluded2));current=current||getNow();var View=this.getView(),_this$state$context=this.state.context,accessors=_this$state$context.accessors,components=_this$state$context.components,getters=_this$state$context.getters,localizer=_this$state$context.localizer,viewNames=_this$state$context.viewNames,CalToolbar=components.toolbar||src_Toolbar,label=View.title(current,{localizer:localizer,length:length});return(0,jsx_runtime.jsxs)("div",Object.assign({},elementProps,{className:(0,clsx_m.A)(className,"rbc-calendar",props.rtl&&"rbc-rtl"),style:style,children:[toolbar&&(0,jsx_runtime.jsx)(CalToolbar,{date:current,view:view,views:viewNames,label:label,onView:this.handleViewChange,onNavigate:this.handleNavigate,localizer:localizer}),(0,jsx_runtime.jsx)(View,Object.assign({},props,{events:events,backgroundEvents:backgroundEvents,date:current,getNow:getNow,length:length,localizer:localizer,getters:getters,components:components,accessors:accessors,showMultiDayTimes:showMultiDayTimes,getDrilldownView:this.getDrilldownView,onNavigate:this.handleNavigate,onDrillDown:this.handleDrillDown,onSelectEvent:this.handleSelectEvent,onDoubleClickEvent:this.handleDoubleClickEvent,onKeyPressEvent:this.handleKeyPressEvent,onSelectSlot:this.handleSelectSlot,onShowMore:onShowMore,doShowMoreDrillDown:doShowMoreDrillDown,resourceGroupingLayout:resourceGroupingLayout}))]}))}}],[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(nextProps){return{context:Calendar.getContext(nextProps)}}},{key:"getContext",value:function getContext(_ref4){var startAccessor=_ref4.startAccessor,endAccessor=_ref4.endAccessor,allDayAccessor=_ref4.allDayAccessor,tooltipAccessor=_ref4.tooltipAccessor,titleAccessor=_ref4.titleAccessor,resourceAccessor=_ref4.resourceAccessor,resourceIdAccessor=_ref4.resourceIdAccessor,resourceTitleAccessor=_ref4.resourceTitleAccessor,eventPropGetter=_ref4.eventPropGetter,backgroundEventPropGetter=_ref4.backgroundEventPropGetter,slotPropGetter=_ref4.slotPropGetter,slotGroupPropGetter=_ref4.slotGroupPropGetter,dayPropGetter=_ref4.dayPropGetter,view=_ref4.view,views=_ref4.views,localizer=_ref4.localizer,culture=_ref4.culture,_ref4$messages=_ref4.messages,messages=void 0===_ref4$messages?{}:_ref4$messages,_ref4$components=_ref4.components,components=void 0===_ref4$components?{}:_ref4$components,_ref4$formats=_ref4.formats,formats=void 0===_ref4$formats?{}:_ref4$formats,names=viewNames(views);return{viewNames:names,localizer:mergeWithDefaults(localizer,culture,formats,function messages_messages(msgs){return Object.assign({},defaultMessages,msgs)}(messages)),getters:{eventProp:function eventProp(){return eventPropGetter&&eventPropGetter.apply(void 0,arguments)||{}},backgroundEventProp:function backgroundEventProp(){return backgroundEventPropGetter&&backgroundEventPropGetter.apply(void 0,arguments)||{}},slotProp:function slotProp(){return slotPropGetter&&slotPropGetter.apply(void 0,arguments)||{}},slotGroupProp:function slotGroupProp(){return slotGroupPropGetter&&slotGroupPropGetter.apply(void 0,arguments)||{}},dayProp:function dayProp(){return dayPropGetter&&dayPropGetter.apply(void 0,arguments)||{}}},components:defaults_default()(components[view]||{},omit_default()(components,names),{eventWrapper:NoopWrapper.A,backgroundEventWrapper:NoopWrapper.A,eventContainerWrapper:NoopWrapper.A,dateCellWrapper:NoopWrapper.A,weekWrapper:NoopWrapper.A,timeSlotWrapper:NoopWrapper.A,timeGutterWrapper:NoopWrapper.A}),accessors:{start:(0,accessors.C)(startAccessor),end:(0,accessors.C)(endAccessor),allDay:(0,accessors.C)(allDayAccessor),tooltip:(0,accessors.C)(tooltipAccessor),title:(0,accessors.C)(titleAccessor),resource:(0,accessors.C)(resourceAccessor),resourceId:(0,accessors.C)(resourceIdAccessor),resourceTitle:(0,accessors.C)(resourceTitleAccessor)}}}}])}(react.Component);Calendar.defaultProps={events:[],backgroundEvents:[],elementProps:{},popup:!1,toolbar:!0,view:constants.l.MONTH,views:[constants.l.MONTH,constants.l.WEEK,constants.l.DAY,constants.l.AGENDA],step:30,length:30,allDayMaxRows:1/0,doShowMoreDrillDown:!0,drilldownView:constants.l.DAY,titleAccessor:"title",tooltipAccessor:"title",allDayAccessor:"allDay",startAccessor:"start",endAccessor:"end",resourceAccessor:"resourceId",resourceIdAccessor:"id",resourceTitleAccessor:"title",longPressThreshold:250,getNow:function getNow(){return new Date},dayLayoutAlgorithm:"overlap"},Calendar.__docgenInfo={description:"",methods:[{name:"getContext",docblock:null,modifiers:["static"],params:[{name:"{\n  startAccessor,\n  endAccessor,\n  allDayAccessor,\n  tooltipAccessor,\n  titleAccessor,\n  resourceAccessor,\n  resourceIdAccessor,\n  resourceTitleAccessor,\n  eventPropGetter,\n  backgroundEventPropGetter,\n  slotPropGetter,\n  slotGroupPropGetter,\n  dayPropGetter,\n  view,\n  views,\n  localizer,\n  culture,\n  messages = {},\n  components = {},\n  formats = {},\n}",type:null}],returns:null},{name:"getViews",docblock:null,modifiers:[],params:[],returns:null},{name:"getView",docblock:null,modifiers:[],params:[],returns:null},{name:"getDrilldownView",docblock:null,modifiers:[],params:[{name:"date",type:null}],returns:null},{name:"handleRangeChange",docblock:"@param date\n@param viewComponent\n@param {'month'|'week'|'work_week'|'day'|'agenda'} [view] - optional\nparameter. It appears when range change on view changing. It could be handy\nwhen you need to have both: range and view type at once, i.e. for manage rbc\nstate via url",modifiers:[],params:[{name:"date",description:null,type:null,optional:!1},{name:"viewComponent",description:null,type:null,optional:!1},{name:"view"}],returns:null,description:null},{name:"handleNavigate",docblock:null,modifiers:[],params:[{name:"action",type:null},{name:"newDate",type:null}],returns:null},{name:"handleViewChange",docblock:null,modifiers:[],params:[{name:"view",type:null}],returns:null},{name:"handleSelectEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleDoubleClickEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleKeyPressEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleSelectSlot",docblock:null,modifiers:[],params:[{name:"slotInfo",type:null}],returns:null},{name:"handleDrillDown",docblock:null,modifiers:[],params:[{name:"date",type:null},{name:"view",type:null}],returns:null}],displayName:"Calendar",props:{events:{defaultValue:{value:"[]",computed:!1},description:'An array of event objects to display on the calendar. Events objects\ncan be any shape, as long as the Calendar knows how to retrieve the\nfollowing details of the event:\n\n - start time\n - end time\n - title\n - whether its an "all day" event or not\n - any resource the event may be related to\n\nEach of these properties can be customized or generated dynamically by\nsetting the various "accessor" props. Without any configuration the default\nevent should look like:\n\n```js\nEvent {\n  title: string,\n  start: Date,\n  end: Date,\n  allDay?: boolean\n  resource?: any,\n}\n```',type:{name:"arrayOf",value:{name:"object"}},required:!1},backgroundEvents:{defaultValue:{value:"[]",computed:!1},description:'An array of background event objects to display on the calendar. Background\nEvents behave similarly to Events but are not factored into Event overlap logic,\nallowing them to sit behind any Events that may occur during the same period.\nBackground Events objects can be any shape, as long as the Calendar knows how to\nretrieve the following details of the event:\n\n - start time\n - end time\n\nEach of these properties can be customized or generated dynamically by\nsetting the various "accessor" props. Without any configuration the default\nevent should look like:\n\n```js\nBackgroundEvent {\n  start: Date,\n  end: Date,\n}\n```',type:{name:"arrayOf",value:{name:"object"}},required:!1},elementProps:{defaultValue:{value:"{}",computed:!1},description:"Props passed to main calendar `<div>`.",type:{name:"object"},required:!1},popup:{defaultValue:{value:"false",computed:!1},description:'Show truncated events in an overlay when you click the "+_x_ more" link.',type:{name:"bool"},required:!1},toolbar:{defaultValue:{value:"true",computed:!1},description:"Determines whether the toolbar is displayed",type:{name:"bool"},required:!1},view:{defaultValue:{value:"views.MONTH",computed:!0},description:"The current view of the calendar.\n\n@default 'month'\n@controllable onView",type:{name:"string"},required:!1},views:{defaultValue:{value:"[views.MONTH, views.WEEK, views.DAY, views.AGENDA]",computed:!1},description:"An array of built-in view names to allow the calendar to display.\naccepts either an array of builtin view names,\n\n```jsx\nviews={['month', 'day', 'agenda']}\n```\nor an object hash of the view name and the component (or boolean for builtin).\n\n```jsx\nviews={{\n  month: true,\n  week: false,\n  myweek: WorkWeekViewComponent,\n}}\n```\n\nCustom views can be any React component, that implements the following\ninterface:\n\n```js\ninterface View {\n  static title(date: Date, { formats: DateFormat[], culture: string?, ...props }): string\n  static navigate(date: Date, action: 'PREV' | 'NEXT' | 'DATE'): Date\n}\n```\n\n@type Views ('month'|'week'|'work_week'|'day'|'agenda')\n@View\n     ['month', 'week', 'day', 'agenda']",type:{name:"custom",raw:"componentViews"},required:!1},step:{defaultValue:{value:"30",computed:!1},description:"Determines the selectable time increments in week and day views, in minutes.",type:{name:"number"},required:!1},length:{defaultValue:{value:"30",computed:!1},description:"Determines the end date from date prop in the agenda view\ndate prop + length (in number of days) = end date",type:{name:"number"},required:!1},allDayMaxRows:{defaultValue:{value:"Infinity",computed:!0},description:"Determines a maximum amount of rows of events to display in the all day\nsection for Week and Day views, will display `showMore` button if\nevents excede this number.\n\nDefaults to `Infinity`",type:{name:"number"},required:!1},doShowMoreDrillDown:{defaultValue:{value:"true",computed:!1},description:'Determines whether the drill down should occur when clicking on the "+_x_ more" link.\nIf `popup` is false, and `doShowMoreDrillDown` is true, the drill down will occur as usual.\nIf `popup` is false, and `doShowMoreDrillDown` is false, the drill down will not occur and the `onShowMore` function will trigger.',type:{name:"bool"},required:!1},drilldownView:{defaultValue:{value:"views.DAY",computed:!0},description:'The string name of the destination view for drill-down actions, such\nas clicking a date header, or the truncated events links. If\n`getDrilldownView` is also specified it will be used instead.\n\nSet to `null` to disable drill-down actions.\n\n```js\n<Calendar\n  drilldownView="agenda"\n/>\n```',type:{name:"string"},required:!1},titleAccessor:{defaultValue:{value:"'title'",computed:!1},description:"Accessor for the event title, used to display event information. Should\nresolve to a `renderable` value.\n\n```js\nstring | (event: Object) => string\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},tooltipAccessor:{defaultValue:{value:"'title'",computed:!1},description:"Accessor for the event tooltip. Should\nresolve to a `renderable` value. Removes the tooltip if null.\n\n```js\nstring | (event: Object) => string\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},allDayAccessor:{defaultValue:{value:"'allDay'",computed:!1},description:'Determines whether the event should be considered an "all day" event and ignore time.\nMust resolve to a `boolean` value.\n\n```js\nstring | (event: Object) => boolean\n```\n\n@type {(func|string)}',type:{name:"custom",raw:"accessor"},required:!1},startAccessor:{defaultValue:{value:"'start'",computed:!1},description:"The start date/time of the event. Must resolve to a JavaScript `Date` object.\n\n```js\nstring | (event: Object) => Date\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},endAccessor:{defaultValue:{value:"'end'",computed:!1},description:"The end date/time of the event. Must resolve to a JavaScript `Date` object.\n\n```js\nstring | (event: Object) => Date\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},resourceAccessor:{defaultValue:{value:"'resourceId'",computed:!1},description:"Returns the id of the `resource` that the event is a member of. This\nid should match at least one resource in the `resources` array.\n\n```js\nstring | (event: Object) => Date\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},resourceIdAccessor:{defaultValue:{value:"'id'",computed:!1},description:"Provides a unique identifier, or an array of unique identifiers, for each resource in the `resources` array\n\n```js\nstring | (resource: Object) => any\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},resourceTitleAccessor:{defaultValue:{value:"'title'",computed:!1},description:"Provides a human readable name for the resource object, used in headers.\n\n```js\nstring | (resource: Object) => any\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},longPressThreshold:{defaultValue:{value:"250",computed:!1},description:'Specifies the number of milliseconds the user must press and hold on the screen for a touch\nto be considered a "long press." Long presses are used for time slot selection on touch\ndevices.\n\n@type {number}\n@default 250',type:{name:"number"},required:!1},getNow:{defaultValue:{value:"() => new Date()",computed:!1},description:"Determines the current date/time which is highlighted in the views.\n\nThe value affects which day is shaded and which time is shown as\nthe current time. It also affects the date used by the Today button in\nthe toolbar.\n\nProviding a value here can be useful when you are implementing time zones\nusing the `startAccessor` and `endAccessor` properties.\n\n@type {func}\n@default () => new Date()",type:{name:"func"},required:!1},dayLayoutAlgorithm:{defaultValue:{value:"'overlap'",computed:!1},description:"A day event layout(arrangement) algorithm.\n\n`overlap` allows events to be overlapped.\n\n`no-overlap` resizes events to avoid overlap.\n\nor custom `Function(events, minimumStartDifference, slotMetrics, accessors)`",type:{name:"custom",raw:"DayLayoutAlgorithmPropType"},required:!1},localizer:{description:"The localizer used for formatting dates and times according to the `format` and `culture`\n\nglobalize\n```js\nimport {globalizeLocalizer} from 'react-big-calendar'\nimport globalize from 'globalize'\n\nconst localizer = globalizeLocalizer(globalize)\n```\nmoment\n``js\nimport {momentLocalizer} from 'react-big-calendar'\nimport moment from 'moment'\n// and, for optional time zone support\nimport 'moment-timezone'\n\nmoment.tz.setDefault('America/Los_Angeles')\n// end optional time zone support\n\nconst localizer = momentLocalizer(moment)\n```\n\nLuxon\n```js\nimport {luxonLocalizer} from 'react-big-calendar'\nimport {DateTime, Settings} from 'luxon'\n// only use `Settings` if you require optional time zone support\nSettings.defaultZone = 'America/Los_Angeles'\n// end optional time zone support\n\n// Luxon uses the Intl API, which currently does not contain `weekInfo`\n// to determine which weekday is the start of the week by `culture`.\n// The `luxonLocalizer` defaults this to Sunday, which differs from\n// the Luxon default of Monday. The localizer requires this option\n// to change the display, and the date math for determining the\n// start of a week. Luxon uses non-zero based values for `weekday`.\nconst localizer = luxonLocalizer(DateTime, {firstDayOfWeek: 7})\n```",type:{name:"object"},required:!0},date:{description:"The current date value of the calendar. Determines the visible view range.\nIf `date` is omitted then the result of `getNow` is used; otherwise the\ncurrent date is used.\n\n@controllable onNavigate",type:{name:"instanceOf",value:"Date"},required:!1},defaultView:{description:"The initial view set for the Calendar.\n@type Calendar.Views ('month'|'week'|'work_week'|'day'|'agenda')\n@default 'month'",type:{name:"string"},required:!1},resources:{description:'An array of resource objects that map events to a specific resource.\nResource objects, like events, can be any shape or have any properties,\nbut should be uniquly identifiable via the `resourceIdAccessor`, as\nwell as a "title" or name as provided by the `resourceTitleAccessor` prop.',type:{name:"arrayOf",value:{name:"object"}},required:!1},onNavigate:{description:"Callback fired when the `date` value changes.\n\n@controllable date",type:{name:"func"},required:!1},onView:{description:"Callback fired when the `view` value changes.\n\n@controllable view",type:{name:"func"},required:!1},onDrillDown:{description:"Callback fired when date header, or the truncated events links are clicked",type:{name:"func"},required:!1},onRangeChange:{description:"```js\n(dates: Date[] | { start: Date; end: Date }, view: 'month'|'week'|'work_week'|'day'|'agenda'|undefined) => void\n```\n\nCallback fired when the visible date range changes. Returns an Array of dates\nor an object with start and end dates for BUILTIN views. Optionally new `view`\nwill be returned when callback called after view change.\n\nCustom views may return something different.",type:{name:"func"},required:!1},onSelectSlot:{description:'A callback fired when a date selection is made. Only fires when `selectable` is `true`.\n\n```js\n(\n  slotInfo: {\n    start: Date,\n    end: Date,\n    resourceId:  (number|string),\n    slots: Array<Date>,\n    action: "select" | "click" | "doubleClick",\n    bounds: ?{ // For "select" action\n      x: number,\n      y: number,\n      top: number,\n      right: number,\n      left: number,\n      bottom: number,\n    },\n    box: ?{ // For "click" or "doubleClick" actions\n      clientX: number,\n      clientY: number,\n      x: number,\n      y: number,\n    },\n  }\n) => any\n```',type:{name:"func"},required:!1},onSelectEvent:{description:"Callback fired when a calendar event is selected.\n\n```js\n(event: Object, e: SyntheticEvent) => any\n```\n\n@controllable selected",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"Callback fired when a calendar event is clicked twice.\n\n```js\n(event: Object, e: SyntheticEvent) => void\n```",type:{name:"func"},required:!1},onKeyPressEvent:{description:"Callback fired when a focused calendar event receives a key press.\n\n```js\n(event: Object, e: SyntheticEvent) => void\n```",type:{name:"func"},required:!1},onSelecting:{description:"Callback fired when dragging a selection in the Time views.\n\nReturning `false` from the handler will prevent a selection.\n\n```js\n(range: { start: Date, end: Date, resourceId: (number|string) }) => ?boolean\n```",type:{name:"func"},required:!1},onShowMore:{description:"Callback fired when a +{count} more is clicked\n\n```js\n(events: Object, date: Date) => any\n```",type:{name:"func"},required:!1},showAllEvents:{description:"Displays all events on the month view instead of\nhaving some hidden behind +{count} more. This will\ncause the rows in the month view to be scrollable if\nthe number of events exceed the height of the row.",type:{name:"bool"},required:!1},selected:{description:"The selected event, if any.",type:{name:"object"},required:!1},getDrilldownView:{description:"Functionally equivalent to `drilldownView`, but accepts a function\nthat can return a view name. It's useful for customizing the drill-down\nactions depending on the target date and triggering view.\n\nReturn `null` to disable drill-down actions.\n\n```js\n<Calendar\n  getDrilldownView={(targetDate, currentViewName, configuredViewNames) =>\n    if (currentViewName === 'month' && configuredViewNames.includes('week'))\n      return 'week'\n\n    return null;\n  }}\n/>\n```",type:{name:"func"},required:!1},popupOffset:{description:'Distance in pixels, from the edges of the viewport, the "show more" overlay should be positioned.\n\n```jsx\n<Calendar popupOffset={30}/>\n<Calendar popupOffset={{x: 30, y: 20}}/>\n```',type:{name:"union",value:[{name:"number"},{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}}]},required:!1},selectable:{description:"Allows mouse selection of ranges of dates/times.\n\nThe 'ignoreEvents' option prevents selection code from running when a\ndrag begins over an event. Useful when you want custom event click or drag\nlogic",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},timeslots:{description:'The number of slots per "section" in the time grid views. Adjust with `step`\nto change the default of 1 hour long groups, with 30 minute slots.',type:{name:"number"},required:!1},rtl:{description:"Switch the calendar to a `right-to-left` read direction.",type:{name:"bool"},required:!1},eventPropGetter:{description:"Optionally provide a function that returns an object of className or style props\nto be applied to the the event node.\n\n```js\n(\n\tevent: Object,\n\tstart: Date,\n\tend: Date,\n\tisSelected: boolean\n) => { className?: string, style?: Object }\n```",type:{name:"func"},required:!1},slotPropGetter:{description:"Optionally provide a function that returns an object of className or style props\nto be applied to the time-slot node. Caution! Styles that change layout or\nposition may break the calendar in unexpected ways.\n\n```js\n(date: Date, resourceId: (number|string)) => { className?: string, style?: Object }\n```",type:{name:"func"},required:!1},slotGroupPropGetter:{description:"Optionally provide a function that returns an object of props to be applied\nto the time-slot group node. Useful to dynamically change the sizing of time nodes.\n```js\n(group: Date[]) => { style?: Object }\n```",type:{name:"func"},required:!1},dayPropGetter:{description:"Optionally provide a function that returns an object of className or style props\nto be applied to the the day background. Caution! Styles that change layout or\nposition may break the calendar in unexpected ways.\n\n```js\n(date: Date) => { className?: string, style?: Object }\n```",type:{name:"func"},required:!1},showMultiDayTimes:{description:"Support to show multi-day events with specific start and end times in the\nmain time grid (rather than in the all day header).\n\n**Note: This may cause calendars with several events to look very busy in\nthe week and day views.**",type:{name:"bool"},required:!1},min:{description:"Constrains the minimum _time_ of the Day and Week views.",type:{name:"instanceOf",value:"Date"},required:!1},max:{description:"Constrains the maximum _time_ of the Day and Week views.",type:{name:"instanceOf",value:"Date"},required:!1},scrollToTime:{description:"Determines how far down the scroll pane is initially scrolled down.",type:{name:"instanceOf",value:"Date"},required:!1},enableAutoScroll:{description:"Determines whether the scroll pane is automatically scrolled down or not.",type:{name:"bool"},required:!1},resourceGroupingLayout:{description:"Determines the layout of resource groups in the calendar.\nWhen `true`, resources will be grouped by date in the week view.\nWhen `false`, resources will be grouped by week.",type:{name:"bool"},required:!1},culture:{description:"Specify a specific culture code for the Calendar.\n\n**Note: it's generally better to handle this globally via your i18n library.**",type:{name:"string"},required:!1},formats:{description:"Localizer specific formats, tell the Calendar how to format and display dates.\n\n`format` types are dependent on the configured localizer; Moment, Luxon and Globalize\naccept strings of tokens according to their own specification, such as: `'DD mm yyyy'`.\n\n```jsx\nlet formats = {\n  dateFormat: 'dd',\n\n  dayFormat: (date, , localizer) =>\n    localizer.format(date, 'DDD', culture),\n\n  dayRangeHeaderFormat: ({ start, end }, culture, localizer) =>\n    localizer.format(start, { date: 'short' }, culture) + ' – ' +\n    localizer.format(end, { date: 'short' }, culture)\n}\n\n<Calendar formats={formats} />\n```\n\nAll localizers accept a function of\nthe form `(date: Date, culture: ?string, localizer: Localizer) -> string`",type:{name:"shape",value:{dateFormat:{name:"custom",raw:"dateFormat",description:'Format for the day of the month heading in the Month view.\ne.g. "01", "02", "03", etc',required:!1},dayFormat:{name:"custom",raw:"dateFormat",description:'A day of the week format for Week and Day headings,\ne.g. "Wed 01/04"',required:!1},weekdayFormat:{name:"custom",raw:"dateFormat",description:'Week day name format for the Month week day headings,\ne.g: "Sun", "Mon", "Tue", etc',required:!1},timeGutterFormat:{name:"custom",raw:"dateFormat",description:'The timestamp cell formats in Week and Time views, e.g. "4:00 AM"',required:!1},monthHeaderFormat:{name:"custom",raw:"dateFormat",description:'Toolbar header format for the Month view, e.g "2015 April"',required:!1},dayRangeHeaderFormat:{name:"custom",raw:"dateRangeFormat",description:'Toolbar header format for the Week views, e.g. "Mar 29 - Apr 04"',required:!1},dayHeaderFormat:{name:"custom",raw:"dateFormat",description:'Toolbar header format for the Day view, e.g. "Wednesday Apr 01"',required:!1},agendaHeaderFormat:{name:"custom",raw:"dateRangeFormat",description:'Toolbar header format for the Agenda view, e.g. "4/1/2015 – 5/1/2015"',required:!1},selectRangeFormat:{name:"custom",raw:"dateRangeFormat",description:'A time range format for selecting time slots, e.g "8:00am – 2:00pm"',required:!1},agendaDateFormat:{name:"custom",raw:"dateFormat",required:!1},agendaTimeFormat:{name:"custom",raw:"dateFormat",required:!1},agendaTimeRangeFormat:{name:"custom",raw:"dateRangeFormat",required:!1},eventTimeRangeFormat:{name:"custom",raw:"dateRangeFormat",description:"Time range displayed on events.",required:!1},eventTimeRangeStartFormat:{name:"custom",raw:"dateFormat",description:"An optional event time range for events that continue onto another day",required:!1},eventTimeRangeEndFormat:{name:"custom",raw:"dateFormat",description:"An optional event time range for events that continue from another day",required:!1}}},required:!1},components:{description:"Customize how different sections of the calendar render by providing custom Components.\nIn particular the `Event` component can be specified for the entire calendar, or you can\nprovide an individual component for each view type.\n\n```jsx\nlet components = {\n  event: MyEvent, // used by each view (Month, Day, Week)\n  eventWrapper: MyEventWrapper,\n  eventContainerWrapper: MyEventContainerWrapper,\n  dateCellWrapper: MyDateCellWrapper,\n  timeSlotWrapper: MyTimeSlotWrapper,\n  timeGutterHeader: MyTimeGutterWrapper,\n  timeGutterWrapper: MyTimeGutterWrapper,\n  resourceHeader: MyResourceHeader,\n  showMore: MyShowMoreEvent,\n  toolbar: MyToolbar,\n  agenda: {\n  \t event: MyAgendaEvent, // with the agenda view use a different component to render events\n    time: MyAgendaTime,\n    date: MyAgendaDate,\n  },\n  day: {\n    header: MyDayHeader,\n    event: MyDayEvent,\n  },\n  week: {\n    header: MyWeekHeader,\n    event: MyWeekEvent,\n  },\n  month: {\n    header: MyMonthHeader,\n    dateHeader: MyMonthDateHeader,\n    event: MyMonthEvent,\n  }\n}\n<Calendar components={components} />\n```",type:{name:"shape",value:{event:{name:"elementType",required:!1},eventWrapper:{name:"elementType",required:!1},eventContainerWrapper:{name:"elementType",required:!1},dateCellWrapper:{name:"elementType",required:!1},dayColumnWrapper:{name:"elementType",required:!1},timeSlotWrapper:{name:"elementType",required:!1},timeGutterHeader:{name:"elementType",required:!1},timeGutterWrapper:{name:"elementType",required:!1},resourceHeader:{name:"elementType",required:!1},showMore:{name:"elementType",required:!1},toolbar:{name:"elementType",required:!1},agenda:{name:"shape",value:{date:{name:"elementType",required:!1},time:{name:"elementType",required:!1},event:{name:"elementType",required:!1}},required:!1},day:{name:"shape",value:{header:{name:"elementType",required:!1},event:{name:"elementType",required:!1}},required:!1},week:{name:"shape",value:{header:{name:"elementType",required:!1},event:{name:"elementType",required:!1}},required:!1},month:{name:"shape",value:{header:{name:"elementType",required:!1},dateHeader:{name:"elementType",required:!1},event:{name:"elementType",required:!1}},required:!1}}},required:!1},messages:{description:"String messages used throughout the component, override to provide localizations\n\n```jsx\nconst messages = {\n  date: 'Date',\n  time: 'Time',\n  event: 'Event',\n  allDay: 'All Day',\n  week: 'Week',\n  work_week: 'Work Week',\n  day: 'Day',\n  month: 'Month',\n  previous: 'Back',\n  next: 'Next',\n  yesterday: 'Yesterday',\n  tomorrow: 'Tomorrow',\n  today: 'Today',\n  agenda: 'Agenda',\n\n  noEventsInRange: 'There are no events in this range.',\n\n  showMore: total => `+ ${total} more`,\n}\n\n<Calendar messages={messages} />\n```",type:{name:"shape",value:{allDay:{name:"node",required:!1},previous:{name:"node",required:!1},next:{name:"node",required:!1},today:{name:"node",required:!1},month:{name:"node",required:!1},week:{name:"node",required:!1},day:{name:"node",required:!1},agenda:{name:"node",required:!1},date:{name:"node",required:!1},time:{name:"node",required:!1},event:{name:"node",required:!1},noEventsInRange:{name:"node",required:!1},showMore:{name:"func",required:!1}}},required:!1}}};var src_Calendar=(0,esm.Pd)(Calendar,{view:"onView",date:"onNavigate",selected:"onSelectEvent"});"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Calendar.js"]={name:"Calendar",docgenInfo:Calendar.__docgenInfo,path:"src/Calendar.js"});__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");var timeRangeFormat=function timeRangeFormat(_ref3,culture,local){var start=_ref3.start,end=_ref3.end;return local.format(start,"LT",culture)+" – "+local.format(end,"LT",culture)},formats={dateFormat:"DD",dayFormat:"DD ddd",weekdayFormat:"ddd",selectRangeFormat:timeRangeFormat,eventTimeRangeFormat:timeRangeFormat,eventTimeRangeStartFormat:function timeRangeStartFormat(_ref4,culture,local){var start=_ref4.start;return local.format(start,"LT",culture)+" – "},eventTimeRangeEndFormat:function timeRangeEndFormat(_ref5,culture,local){var end=_ref5.end;return" – "+local.format(end,"LT",culture)},timeGutterFormat:"LT",monthHeaderFormat:"MMMM YYYY",dayHeaderFormat:"dddd MMM DD",dayRangeHeaderFormat:function weekRangeFormat(_ref,culture,local){var start=_ref.start,end=_ref.end;return local.format(start,"MMMM DD",culture)+" – "+local.format(end,local.eq(start,end,"month")?"DD":"MMMM DD",culture)},agendaHeaderFormat:function dateRangeFormat(_ref2,culture,local){var start=_ref2.start,end=_ref2.end;return local.format(start,"L",culture)+" – "+local.format(end,"L",culture)},agendaDateFormat:"ddd MMM DD",agendaTimeFormat:"LT",agendaTimeRangeFormat:timeRangeFormat};function fixUnit(unit){var datePart=unit?unit.toLowerCase():unit;return"FullYear"===datePart?datePart="year":datePart||(datePart=void 0),datePart}function moment(moment){function getDstOffset(start,end){var _st$_z$name,_st$_z,st=moment(start).local(),ed=moment(end).local();if(!moment.tz)return st.toDate().getTimezoneOffset()-ed.toDate().getTimezoneOffset();var tzName=null!==(_st$_z$name=null==st||null===(_st$_z=st._z)||void 0===_st$_z?void 0:_st$_z.name)&&void 0!==_st$_z$name?_st$_z$name:moment.tz.guess();return moment.tz.zone(tzName).utcOffset(+st)-moment.tz.zone(tzName).utcOffset(+ed)}function defineComparators(a,b,unit){var datePart=fixUnit(unit);return[datePart?moment(a).startOf(datePart):moment(a),datePart?moment(b).startOf(datePart):moment(b),datePart]}function startOf(){var date=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,datePart=fixUnit(arguments.length>1?arguments[1]:void 0);return datePart?moment(date).startOf(datePart).toDate():moment(date).toDate()}function eq(a,b,unit){var _defineComparators=defineComparators(a,b,unit),_defineComparators2=(0,slicedToArray.A)(_defineComparators,3),dtA=_defineComparators2[0],dtB=_defineComparators2[1],datePart=_defineComparators2[2];return dtA.isSame(dtB,datePart)}function lte(a,b,unit){var _defineComparators9=defineComparators(a,b,unit),_defineComparators10=(0,slicedToArray.A)(_defineComparators9,3),dtA=_defineComparators10[0],dtB=_defineComparators10[1],datePart=_defineComparators10[2];return dtA.isSameOrBefore(dtB,datePart)}function add(date,adder,unit){var datePart=fixUnit(unit);return moment(date).add(adder,datePart).toDate()}function diff(a,b){var datePart=fixUnit(arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day"),dtA=moment(a);return moment(b).diff(dtA,datePart)}function firstVisibleDay(date){return moment(date).startOf("month").startOf("week").toDate()}function lastVisibleDay(date){return moment(date).endOf("month").endOf("week").toDate()}function daySpan(start,end){var mStart=moment(start),mEnd=moment(end);return moment.duration(mEnd.diff(mStart)).days()}return new localizer_DateLocalizer({formats:formats,firstOfWeek:function firstOfWeek(culture){var data=culture?moment.localeData(culture):moment.localeData();return data?data.firstDayOfWeek():0},firstVisibleDay:firstVisibleDay,lastVisibleDay:lastVisibleDay,visibleDays:function visibleDays(date){for(var current=firstVisibleDay(date),last=lastVisibleDay(date),days=[];lte(current,last);)days.push(current),current=add(current,1,"d");return days},format:function format(value,_format,culture){return function locale(m,c){return c?m.locale(c):m}(moment(value),culture).format(_format)},lt:function lt(a,b,unit){var _defineComparators5=defineComparators(a,b,unit),_defineComparators6=(0,slicedToArray.A)(_defineComparators5,3),dtA=_defineComparators6[0],dtB=_defineComparators6[1],datePart=_defineComparators6[2];return dtA.isBefore(dtB,datePart)},lte:lte,gt:function gt(a,b,unit){var _defineComparators3=defineComparators(a,b,unit),_defineComparators4=(0,slicedToArray.A)(_defineComparators3,3),dtA=_defineComparators4[0],dtB=_defineComparators4[1],datePart=_defineComparators4[2];return dtA.isAfter(dtB,datePart)},gte:function gte(a,b,unit){var _defineComparators7=defineComparators(a,b,unit),_defineComparators8=(0,slicedToArray.A)(_defineComparators7,3),dtA=_defineComparators8[0],dtB=_defineComparators8[1],datePart=_defineComparators8[2];return dtA.isSameOrBefore(dtB,datePart)},eq:eq,neq:function neq(a,b,unit){return!eq(a,b,unit)},merge:function merge(date,time){if(!date&&!time)return null;var tm=moment(time).format("HH:mm:ss"),dt=moment(date).startOf("day").format("MM/DD/YYYY");return moment("".concat(dt," ").concat(tm),"MM/DD/YYYY HH:mm:ss").toDate()},inRange:function inRange(day,min,max){var datePart=fixUnit(arguments.length>3&&void 0!==arguments[3]?arguments[3]:"day"),mDay=moment(day),mMin=moment(min),mMax=moment(max);return mDay.isBetween(mMin,mMax,datePart,"[]")},startOf:startOf,endOf:function endOf(){var date=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,datePart=fixUnit(arguments.length>1?arguments[1]:void 0);return datePart?moment(date).endOf(datePart).toDate():moment(date).toDate()},range:function range(start,end){for(var datePart=fixUnit(arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day"),current=moment(start).toDate(),days=[];lte(current,end);)days.push(current),current=add(current,1,datePart);return days},add:add,diff:diff,ceil:function ceil(date,unit){var datePart=fixUnit(unit),floor=startOf(date,datePart);return eq(floor,date)?floor:add(floor,1,datePart)},min:function min(dateA,dateB){var dtA=moment(dateA),dtB=moment(dateB);return moment.min(dtA,dtB).toDate()},max:function max(dateA,dateB){var dtA=moment(dateA),dtB=moment(dateB);return moment.max(dtA,dtB).toDate()},minutes:function minutes(date){return moment(date).minutes()},getSlotDate:function getSlotDate(dt,minutesFromMidnight,offset){return moment(dt).startOf("day").minute(minutesFromMidnight+offset).toDate()},getTimezoneOffset:function getTimezoneOffset(date){return moment(date).toDate().getTimezoneOffset()},getDstOffset:getDstOffset,getTotalMin:function getTotalMin(start,end){return diff(start,end,"minutes")},getMinutesFromMidnight:function getMinutesFromMidnight(start){var dayStart=moment(start).startOf("day");return moment(start).diff(dayStart,"minutes")+function getDayStartDstOffset(start){return getDstOffset(moment(start).startOf("day"),start)}(start)},continuesPrior:function continuesPrior(start,first){var mStart=moment(start),mFirst=moment(first);return mStart.isBefore(mFirst,"day")},continuesAfter:function continuesAfter(start,end,last){var mEnd=moment(end),mLast=moment(last);return mEnd.isSameOrAfter(mLast,"minutes")},sortEvents:function sortEvents(_ref6){var _ref6$evtA=_ref6.evtA,aStart=_ref6$evtA.start,aEnd=_ref6$evtA.end,aAllDay=_ref6$evtA.allDay,_ref6$evtB=_ref6.evtB,bStart=_ref6$evtB.start,bEnd=_ref6$evtB.end,bAllDay=_ref6$evtB.allDay,startSort=+startOf(aStart,"day")-+startOf(bStart,"day"),durA=daySpan(aStart,aEnd),durB=daySpan(bStart,bEnd);return startSort||durB-durA||!!bAllDay-!!aAllDay||+aStart-+bStart||+aEnd-+bEnd},inEventRange:function inEventRange(_ref7){var _ref7$event=_ref7.event,start=_ref7$event.start,end=_ref7$event.end,_ref7$range=_ref7.range,rangeStart=_ref7$range.start,rangeEnd=_ref7$range.end,startOfDay=moment(start).startOf("day"),eEnd=moment(end),rStart=moment(rangeStart),rEnd=moment(rangeEnd),startsBeforeEnd=startOfDay.isSameOrBefore(rEnd,"day"),endsAfterStart=!startOfDay.isSame(eEnd,"minutes")?eEnd.isAfter(rStart,"minutes"):eEnd.isSameOrAfter(rStart,"minutes");return startsBeforeEnd&&endsAfterStart},isSameDate:function isSameDate(date1,date2){var dt=moment(date1),dt2=moment(date2);return dt.isSame(dt2,"day")},daySpan:daySpan,browserTZOffset:function browserTZOffset(){var dt=new Date,neg=/-/.test(dt.toString())?"-":"",dtOffset=dt.getTimezoneOffset(),comparator=Number("".concat(neg).concat(Math.abs(dtOffset)));return moment().utcOffset()>comparator?1:0}})}__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js");var luxon_timeRangeFormat=function timeRangeFormat(_ref3,culture,local){var start=_ref3.start,end=_ref3.end;return local.format(start,"t",culture)+" – "+local.format(end,"t",culture)},luxon_formats={dateFormat:"dd",dayFormat:"dd EEE",weekdayFormat:"EEE",selectRangeFormat:luxon_timeRangeFormat,eventTimeRangeFormat:luxon_timeRangeFormat,eventTimeRangeStartFormat:function timeRangeStartFormat(_ref4,culture,local){var start=_ref4.start;return local.format(start,"t",culture)+" – "},eventTimeRangeEndFormat:function timeRangeEndFormat(_ref5,culture,local){var end=_ref5.end;return" – "+local.format(end,"t",culture)},timeGutterFormat:"t",monthHeaderFormat:"MMMM yyyy",dayHeaderFormat:"EEEE MMM dd",dayRangeHeaderFormat:function weekRangeFormat(_ref,culture,local){var start=_ref.start,end=_ref.end;return local.format(start,"MMMM dd",culture)+" – "+local.format(end,local.eq(start,end,"month")?"dd":"MMMM dd",culture)},agendaHeaderFormat:function dateRangeFormat(_ref2,culture,local){var start=_ref2.start,end=_ref2.end;return local.format(start,"D",culture)+" – "+local.format(end,"D",culture)},agendaDateFormat:"EEE MMM dd",agendaTimeFormat:"t",agendaTimeRangeFormat:luxon_timeRangeFormat};function luxon_fixUnit(unit){var datePart=unit?function pluralizeUnit(unit){return/s$/.test(unit)?unit:unit+"s"}(unit.toLowerCase()):unit;return"FullYear"===datePart?datePart="year":datePart||(datePart=void 0),datePart}function luxon(DateTime){var _ref6$firstDayOfWeek=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).firstDayOfWeek,firstDayOfWeek=void 0===_ref6$firstDayOfWeek?7:_ref6$firstDayOfWeek;function defineComparators(a,b,unit){var datePart=luxon_fixUnit(unit);return[datePart?DateTime.fromJSDate(a).startOf(datePart):DateTime.fromJSDate(a),datePart?DateTime.fromJSDate(b).startOf(datePart):DateTime.fromJSDate(b),datePart]}function startOfDTWeek(dtObj){var weekday=dtObj.weekday;if(weekday===firstDayOfWeek)return dtObj.startOf("day");if(1===firstDayOfWeek)return dtObj.startOf("week");var diff=7===firstDayOfWeek?weekday:weekday+(7-firstDayOfWeek);return dtObj.minus({day:diff}).startOf("day")}function endOfDTWeek(dtObj){var weekday=dtObj.weekday,eow=1===firstDayOfWeek?7:firstDayOfWeek-1;return weekday===eow?dtObj.endOf("day"):1===firstDayOfWeek?dtObj.endOf("week"):(firstDayOfWeek>eow?dtObj.plus({day:firstDayOfWeek-eow}):dtObj).set({weekday:eow}).endOf("day")}function startOfDT(){var date=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Date,datePart=luxon_fixUnit(arguments.length>1?arguments[1]:void 0);if(datePart){var dt=DateTime.fromJSDate(date);return datePart.includes("week")?startOfDTWeek(dt):dt.startOf(datePart)}return DateTime.fromJSDate(date)}function startOf(){return startOfDT(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Date,arguments.length>1?arguments[1]:void 0).toJSDate()}function endOfDT(){var date=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Date,datePart=luxon_fixUnit(arguments.length>1?arguments[1]:void 0);if(datePart){var dt=DateTime.fromJSDate(date);return datePart.includes("week")?endOfDTWeek(dt):dt.endOf(datePart)}return DateTime.fromJSDate(date)}function eq(a,b,unit){var _defineComparators=defineComparators(a,b,unit),_defineComparators2=(0,slicedToArray.A)(_defineComparators,2);return+_defineComparators2[0]==+_defineComparators2[1]}function neq(a,b,unit){return!eq(a,b,unit)}function gt(a,b,unit){var _defineComparators3=defineComparators(a,b,unit),_defineComparators4=(0,slicedToArray.A)(_defineComparators3,2);return+_defineComparators4[0]>+_defineComparators4[1]}function lt(a,b,unit){var _defineComparators5=defineComparators(a,b,unit),_defineComparators6=(0,slicedToArray.A)(_defineComparators5,2);return+_defineComparators6[0]<+_defineComparators6[1]}function gte(a,b,unit){var _defineComparators7=defineComparators(a,b,unit),_defineComparators8=(0,slicedToArray.A)(_defineComparators7,2);return+_defineComparators8[0]>=+_defineComparators8[1]}function lte(a,b,unit){var _defineComparators9=defineComparators(a,b,unit),_defineComparators10=(0,slicedToArray.A)(_defineComparators9,2);return+_defineComparators10[0]<=+_defineComparators10[1]}function add(date,adder,unit){var datePart=luxon_fixUnit(unit);return DateTime.fromJSDate(date).plus((0,defineProperty.A)({},datePart,adder)).toJSDate()}function diff(a,b){var datePart=luxon_fixUnit(arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day"),dtA=DateTime.fromJSDate(a),dtB=DateTime.fromJSDate(b);return Math.floor(dtB.diff(dtA,datePart,{conversionAccuracy:"longterm"}).toObject()[datePart])}function firstVisibleDay(date){return startOfDTWeek(startOfDT(date,"month")).toJSDate()}function lastVisibleDay(date){return endOfDTWeek(endOfDT(date,"month")).toJSDate()}function daySpan(start,end){var dtStart=DateTime.fromJSDate(start);return DateTime.fromJSDate(end).diff(dtStart).as("days")}return new localizer_DateLocalizer({format:function format(value,_format,culture){return culture?function formatDateWithCulture(value,culture,format){return DateTime.fromJSDate(value).setLocale(culture).toFormat(format)}(value,culture,_format):function formatDate(value,format){return DateTime.fromJSDate(value).toFormat(format)}(value,_format)},formats:luxon_formats,firstOfWeek:function firstOfWeek(){return firstDayOfWeek},firstVisibleDay:firstVisibleDay,lastVisibleDay:lastVisibleDay,visibleDays:function visibleDays(date){for(var current=firstVisibleDay(date),last=lastVisibleDay(date),days=[];lte(current,last);)days.push(current),current=add(current,1,"day");return days},lt:lt,lte:lte,gt:gt,gte:gte,eq:eq,neq:neq,merge:function merge(date,time){if(!date&&!time)return null;var tm=DateTime.fromJSDate(time);return startOfDT(date,"day").set({hour:tm.hour,minute:tm.minute,second:tm.second,millisecond:tm.millisecond}).toJSDate()},inRange:function inRange(day,min,max){var datePart=luxon_fixUnit(arguments.length>3&&void 0!==arguments[3]?arguments[3]:"day"),mDay=startOfDT(day,datePart),mMin=startOfDT(min,datePart),mMax=startOfDT(max,datePart);return+mDay>=+mMin&&+mDay<=+mMax},startOf:startOf,endOf:function endOf(){return endOfDT(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Date,arguments.length>1?arguments[1]:void 0).toJSDate()},range:function range(start,end){for(var datePart=luxon_fixUnit(arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day"),current=DateTime.fromJSDate(start).toJSDate(),days=[];lte(current,end);)days.push(current),current=add(current,1,datePart);return days},add:add,diff:diff,ceil:function ceil(date,unit){var datePart=luxon_fixUnit(unit),floor=startOf(date,datePart);return eq(floor,date)?floor:add(floor,1,datePart)},min:function min(dateA,dateB){var dtA=DateTime.fromJSDate(dateA),dtB=DateTime.fromJSDate(dateB);return DateTime.min(dtA,dtB).toJSDate()},max:function max(dateA,dateB){var dtA=DateTime.fromJSDate(dateA),dtB=DateTime.fromJSDate(dateB);return DateTime.max(dtA,dtB).toJSDate()},getSlotDate:function getSlotDate(dt,minutesFromMidnight,offset){return startOfDT(dt,"day").set({minutes:minutesFromMidnight+offset}).toJSDate()},getTotalMin:function getTotalMin(start,end){return diff(start,end,"minutes")},getMinutesFromMidnight:function getMinutesFromMidnight(start){var dayStart=startOfDT(start,"day"),day=DateTime.fromJSDate(start);return Math.round(day.diff(dayStart,"minutes",{conversionAccuracy:"longterm"}).toObject().minutes)},continuesPrior:function continuesPrior(start,first){return lt(start,first)},continuesAfter:function continuesAfter(start,end,last){return gte(end,last)},sortEvents:function sortEvents(_ref7){var _ref7$evtA=_ref7.evtA,aStart=_ref7$evtA.start,aEnd=_ref7$evtA.end,aAllDay=_ref7$evtA.allDay,_ref7$evtB=_ref7.evtB,bStart=_ref7$evtB.start,bEnd=_ref7$evtB.end,bAllDay=_ref7$evtB.allDay,startSort=+startOf(aStart,"day")-+startOf(bStart,"day"),durA=daySpan(aStart,aEnd),durB=daySpan(bStart,bEnd);return startSort||durB-durA||!!bAllDay-!!aAllDay||+aStart-+bStart||+aEnd-+bEnd},inEventRange:function inEventRange(_ref8){var _ref8$event=_ref8.event,start=_ref8$event.start,end=_ref8$event.end,_ref8$range=_ref8.range,rangeStart=_ref8$range.start,rangeEnd=_ref8$range.end,eStart=startOf(start,"day"),startsBeforeEnd=lte(eStart,rangeEnd,"day"),endsAfterStart=neq(eStart,end,"minutes")?gt(end,rangeStart,"minutes"):gte(end,rangeStart,"minutes");return startsBeforeEnd&&endsAfterStart},isSameDate:function isSameDate(date1,date2){var dt=DateTime.fromJSDate(date1),dt2=DateTime.fromJSDate(date2);return dt.hasSame(dt2,"day")},daySpan:daySpan,browserTZOffset:function browserTZOffset(){var dt=new Date,neg=/-/.test(dt.toString())?"-":"",dtOffset=dt.getTimezoneOffset(),comparator=Number("".concat(neg).concat(Math.abs(dtOffset)));return DateTime.local().offset>comparator?1:0}})}var oldGlobalize_timeRangeFormat=function timeRangeFormat(_ref2,culture,local){var start=_ref2.start,end=_ref2.end;return local.format(start,"t",culture)+" – "+local.format(end,"t",culture)},oldGlobalize_formats={dateFormat:"dd",dayFormat:"ddd dd/MM",weekdayFormat:"ddd",selectRangeFormat:oldGlobalize_timeRangeFormat,eventTimeRangeFormat:oldGlobalize_timeRangeFormat,eventTimeRangeStartFormat:function timeRangeStartFormat(_ref3,culture,local){var start=_ref3.start;return local.format(start,"t",culture)+" – "},eventTimeRangeEndFormat:function timeRangeEndFormat(_ref4,culture,local){var end=_ref4.end;return" – "+local.format(end,"t",culture)},timeGutterFormat:"t",monthHeaderFormat:"Y",dayHeaderFormat:"dddd MMM dd",dayRangeHeaderFormat:function weekRangeFormat(_ref5,culture,local){var start=_ref5.start,end=_ref5.end;return local.format(start,"MMM dd",culture)+" – "+local.format(end,dates.eq(start,end,"month")?"dd":"MMM dd",culture)},agendaHeaderFormat:function dateRangeFormat(_ref,culture,local){var start=_ref.start,end=_ref.end;return local.format(start,"d",culture)+" – "+local.format(end,"d",culture)},agendaDateFormat:"ddd MMM dd",agendaTimeFormat:"t",agendaTimeRangeFormat:oldGlobalize_timeRangeFormat};function oldGlobalize(globalize){return new localizer_DateLocalizer({firstOfWeek:function firstOfWeek(culture){return(culture=function getCulture(culture){return culture?globalize.findClosestCulture(culture):globalize.culture()}(culture))&&culture.calendar.firstDay||0},formats:oldGlobalize_formats,format:function format(value,_format,culture){return globalize.format(value,_format,culture)}})}var globalize_timeRangeFormat=function timeRangeFormat(_ref2,culture,local){var start=_ref2.start,end=_ref2.end;return local.format(start,{time:"short"},culture)+" – "+local.format(end,{time:"short"},culture)},globalize_formats={dateFormat:"dd",dayFormat:"eee dd/MM",weekdayFormat:"eee",selectRangeFormat:globalize_timeRangeFormat,eventTimeRangeFormat:globalize_timeRangeFormat,eventTimeRangeStartFormat:function timeRangeStartFormat(_ref3,culture,local){var start=_ref3.start;return local.format(start,{time:"short"},culture)+" – "},eventTimeRangeEndFormat:function timeRangeEndFormat(_ref4,culture,local){var end=_ref4.end;return" – "+local.format(end,{time:"short"},culture)},timeGutterFormat:{time:"short"},monthHeaderFormat:"MMMM yyyy",dayHeaderFormat:"eeee MMM dd",dayRangeHeaderFormat:function weekRangeFormat(_ref5,culture,local){var start=_ref5.start,end=_ref5.end;return local.format(start,"MMM dd",culture)+" – "+local.format(end,dates.eq(start,end,"month")?"dd":"MMM dd",culture)},agendaHeaderFormat:function dateRangeFormat(_ref,culture,local){var start=_ref.start,end=_ref.end;return local.format(start,{date:"short"},culture)+" – "+local.format(end,{date:"short"},culture)},agendaDateFormat:"eee MMM dd",agendaTimeFormat:{time:"short"},agendaTimeRangeFormat:globalize_timeRangeFormat};function globalize(globalize){var locale=function locale(culture){return culture?globalize(culture):globalize};return globalize.load?new localizer_DateLocalizer({firstOfWeek:function firstOfWeek(culture){try{var cldr=locale(culture).cldr,territory=cldr.attributes.territory,firstDay=cldr.get("supplemental").weekData.firstDay[territory||"001"];return["sun","mon","tue","wed","thu","fri","sat"].indexOf(firstDay)}catch(e){0;var date=new Date,localeDay=Math.max(parseInt(locale(culture).formatDate(date,{raw:"e"}),10)-1,0);return Math.abs(date.getDay()-localeDay)}},formats:globalize_formats,format:function format(value,_format,culture){return _format="string"==typeof _format?{raw:_format}:_format,locale(culture).formatDate(value,_format)}}):oldGlobalize(globalize)}var isBetween=__webpack_require__("./node_modules/dayjs/plugin/isBetween.js"),isBetween_default=__webpack_require__.n(isBetween),isSameOrAfter=__webpack_require__("./node_modules/dayjs/plugin/isSameOrAfter.js"),isSameOrAfter_default=__webpack_require__.n(isSameOrAfter),isSameOrBefore=__webpack_require__("./node_modules/dayjs/plugin/isSameOrBefore.js"),isSameOrBefore_default=__webpack_require__.n(isSameOrBefore),localeData=__webpack_require__("./node_modules/dayjs/plugin/localeData.js"),localeData_default=__webpack_require__.n(localeData),localizedFormat=__webpack_require__("./node_modules/dayjs/plugin/localizedFormat.js"),localizedFormat_default=__webpack_require__.n(localizedFormat),minMax=__webpack_require__("./node_modules/dayjs/plugin/minMax.js"),minMax_default=__webpack_require__.n(minMax),utc=__webpack_require__("./node_modules/dayjs/plugin/utc.js"),utc_default=__webpack_require__.n(utc),dayjs_timeRangeFormat=function timeRangeFormat(_ref3,culture,local){var start=_ref3.start,end=_ref3.end;return local.format(start,"LT",culture)+" – "+local.format(end,"LT",culture)},dayjs_formats={dateFormat:"DD",dayFormat:"DD ddd",weekdayFormat:"ddd",selectRangeFormat:dayjs_timeRangeFormat,eventTimeRangeFormat:dayjs_timeRangeFormat,eventTimeRangeStartFormat:function timeRangeStartFormat(_ref4,culture,local){var start=_ref4.start;return local.format(start,"LT",culture)+" – "},eventTimeRangeEndFormat:function timeRangeEndFormat(_ref5,culture,local){var end=_ref5.end;return" – "+local.format(end,"LT",culture)},timeGutterFormat:"LT",monthHeaderFormat:"MMMM YYYY",dayHeaderFormat:"dddd MMM DD",dayRangeHeaderFormat:function weekRangeFormat(_ref,culture,local){var start=_ref.start,end=_ref.end;return local.format(start,"MMMM DD",culture)+" – "+local.format(end,local.eq(start,end,"month")?"DD":"MMMM DD",culture)},agendaHeaderFormat:function dateRangeFormat(_ref2,culture,local){var start=_ref2.start,end=_ref2.end;return local.format(start,"L",culture)+" – "+local.format(end,"L",culture)},agendaDateFormat:"ddd MMM DD",agendaTimeFormat:"LT",agendaTimeRangeFormat:dayjs_timeRangeFormat};function dayjs_fixUnit(unit){var datePart=unit?unit.toLowerCase():unit;return"FullYear"===datePart?datePart="year":datePart||(datePart=void 0),datePart}function dayjs(dayjsLib){dayjsLib.extend(isBetween_default()),dayjsLib.extend(isSameOrAfter_default()),dayjsLib.extend(isSameOrBefore_default()),dayjsLib.extend(localeData_default()),dayjsLib.extend(localizedFormat_default()),dayjsLib.extend(minMax_default()),dayjsLib.extend(utc_default());var dayjs=dayjsLib.tz?dayjsLib.tz:dayjsLib;function getDstOffset(start,end){var _st$tz$$x$$timezone,st=dayjs(start),ed=dayjs(end);if(!dayjs.tz)return st.toDate().getTimezoneOffset()-ed.toDate().getTimezoneOffset();var tzName=null!==(_st$tz$$x$$timezone=st.tz().$x.$timezone)&&void 0!==_st$tz$$x$$timezone?_st$tz$$x$$timezone:dayjsLib.tz.guess();return-dayjs.tz(+st,tzName).utcOffset()- -dayjs.tz(+ed,tzName).utcOffset()}function defineComparators(a,b,unit){var datePart=dayjs_fixUnit(unit);return[datePart?dayjs(a).startOf(datePart):dayjs(a),datePart?dayjs(b).startOf(datePart):dayjs(b),datePart]}function startOf(){var date=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,datePart=dayjs_fixUnit(arguments.length>1?arguments[1]:void 0);return datePart?dayjs(date).startOf(datePart).toDate():dayjs(date).toDate()}function eq(a,b,unit){var _defineComparators=defineComparators(a,b,unit),_defineComparators2=(0,slicedToArray.A)(_defineComparators,3),dtA=_defineComparators2[0],dtB=_defineComparators2[1],datePart=_defineComparators2[2];return dtA.isSame(dtB,datePart)}function lte(a,b,unit){var _defineComparators9=defineComparators(a,b,unit),_defineComparators10=(0,slicedToArray.A)(_defineComparators9,3),dtA=_defineComparators10[0],dtB=_defineComparators10[1],datePart=_defineComparators10[2];return dtA.isSameOrBefore(dtB,datePart)}function add(date,adder,unit){var datePart=dayjs_fixUnit(unit);return dayjs(date).add(adder,datePart).toDate()}function diff(a,b){var datePart=dayjs_fixUnit(arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day"),dtA=dayjs(a);return dayjs(b).diff(dtA,datePart)}function firstVisibleDay(date){return dayjs(date).startOf("month").startOf("week").toDate()}function lastVisibleDay(date){return dayjs(date).endOf("month").endOf("week").toDate()}function daySpan(start,end){var startDay=dayjs(start);return dayjs(end).diff(startDay,"day")}return new localizer_DateLocalizer({formats:dayjs_formats,firstOfWeek:function firstOfWeek(culture){var data=culture?dayjsLib.localeData(culture):dayjsLib.localeData();return data?data.firstDayOfWeek():0},firstVisibleDay:firstVisibleDay,lastVisibleDay:lastVisibleDay,visibleDays:function visibleDays(date){for(var current=firstVisibleDay(date),last=lastVisibleDay(date),days=[];lte(current,last);)days.push(current),current=add(current,1,"d");return days},format:function format(value,_format,culture){return function locale(dj,c){return c?dj.locale(c):dj}(dayjs(value),culture).format(_format)},lt:function lt(a,b,unit){var _defineComparators5=defineComparators(a,b,unit),_defineComparators6=(0,slicedToArray.A)(_defineComparators5,3),dtA=_defineComparators6[0],dtB=_defineComparators6[1],datePart=_defineComparators6[2];return dtA.isBefore(dtB,datePart)},lte:lte,gt:function gt(a,b,unit){var _defineComparators3=defineComparators(a,b,unit),_defineComparators4=(0,slicedToArray.A)(_defineComparators3,3),dtA=_defineComparators4[0],dtB=_defineComparators4[1],datePart=_defineComparators4[2];return dtA.isAfter(dtB,datePart)},gte:function gte(a,b,unit){var _defineComparators7=defineComparators(a,b,unit),_defineComparators8=(0,slicedToArray.A)(_defineComparators7,3),dtA=_defineComparators8[0],dtB=_defineComparators8[1],datePart=_defineComparators8[2];return dtA.isSameOrBefore(dtB,datePart)},eq:eq,neq:function neq(a,b,unit){return!eq(a,b,unit)},merge:function merge(date,time){if(!date&&!time)return null;var tm=dayjs(time).format("HH:mm:ss"),dt=dayjs(date).startOf("day").format("MM/DD/YYYY");return dayjsLib("".concat(dt," ").concat(tm),"MM/DD/YYYY HH:mm:ss").toDate()},inRange:function inRange(day,min,max){var datePart=dayjs_fixUnit(arguments.length>3&&void 0!==arguments[3]?arguments[3]:"day"),djDay=dayjs(day),djMin=dayjs(min),djMax=dayjs(max);return djDay.isBetween(djMin,djMax,datePart,"[]")},startOf:startOf,endOf:function endOf(){var date=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,datePart=dayjs_fixUnit(arguments.length>1?arguments[1]:void 0);return datePart?dayjs(date).endOf(datePart).toDate():dayjs(date).toDate()},range:function range(start,end){for(var datePart=dayjs_fixUnit(arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day"),current=dayjs(start).toDate(),days=[];lte(current,end);)days.push(current),current=add(current,1,datePart);return days},add:add,diff:diff,ceil:function ceil(date,unit){var datePart=dayjs_fixUnit(unit),floor=startOf(date,datePart);return eq(floor,date)?floor:add(floor,1,datePart)},min:function min(dateA,dateB){var dtA=dayjs(dateA),dtB=dayjs(dateB);return dayjsLib.min(dtA,dtB).toDate()},max:function max(dateA,dateB){var dtA=dayjs(dateA),dtB=dayjs(dateB);return dayjsLib.max(dtA,dtB).toDate()},minutes:function minutes(date){return dayjs(date).minutes()},getSlotDate:function getSlotDate(dt,minutesFromMidnight,offset){return dayjs(dt).startOf("day").minute(minutesFromMidnight+offset).toDate()},getTimezoneOffset:function getTimezoneOffset(date){return dayjs(date).toDate().getTimezoneOffset()},getDstOffset:getDstOffset,getTotalMin:function getTotalMin(start,end){return diff(start,end,"minutes")},getMinutesFromMidnight:function getMinutesFromMidnight(start){var dayStart=dayjs(start).startOf("day");return dayjs(start).diff(dayStart,"minutes")+function getDayStartDstOffset(start){return getDstOffset(dayjs(start).startOf("day"),start)}(start)},continuesPrior:function continuesPrior(start,first){var djStart=dayjs(start),djFirst=dayjs(first);return djStart.isBefore(djFirst,"day")},continuesAfter:function continuesAfter(start,end,last){var djEnd=dayjs(end),djLast=dayjs(last);return djEnd.isSameOrAfter(djLast,"minutes")},sortEvents:function sortEvents(_ref6){var _ref6$evtA=_ref6.evtA,aStart=_ref6$evtA.start,aEnd=_ref6$evtA.end,aAllDay=_ref6$evtA.allDay,_ref6$evtB=_ref6.evtB,bStart=_ref6$evtB.start,bEnd=_ref6$evtB.end,bAllDay=_ref6$evtB.allDay,startSort=+startOf(aStart,"day")-+startOf(bStart,"day"),durA=daySpan(aStart,aEnd),durB=daySpan(bStart,bEnd);return startSort||durB-durA||!!bAllDay-!!aAllDay||+aStart-+bStart||+aEnd-+bEnd},inEventRange:function inEventRange(_ref7){var _ref7$event=_ref7.event,start=_ref7$event.start,end=_ref7$event.end,_ref7$range=_ref7.range,rangeStart=_ref7$range.start,rangeEnd=_ref7$range.end,startOfDay=dayjs(start).startOf("day"),eEnd=dayjs(end),rStart=dayjs(rangeStart),rEnd=dayjs(rangeEnd),startsBeforeEnd=startOfDay.isSameOrBefore(rEnd,"day"),endsAfterStart=!startOfDay.isSame(eEnd,"minutes")?eEnd.isAfter(rStart,"minutes"):eEnd.isSameOrAfter(rStart,"minutes");return startsBeforeEnd&&endsAfterStart},isSameDate:function isSameDate(date1,date2){var dt=dayjs(date1),dt2=dayjs(date2);return dt.isSame(dt2,"day")},browserTZOffset:function browserTZOffset(){var dt=new Date,neg=/-/.test(dt.toString())?"-":"",dtOffset=dt.getTimezoneOffset(),comparator=Number("".concat(neg).concat(Math.abs(dtOffset)));return dayjs().utcOffset()>comparator?1:0}})}BackgroundWrapper.A,BackgroundWrapper.A},"./src/utils/accessors.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function accessor(data,field){var value=null;return"function"==typeof field?value=field(data):"string"==typeof field&&"object"==typeof data&&null!=data&&field in data&&(value=data[field]),value}__webpack_require__.d(__webpack_exports__,{C:function(){return wrapAccessor},s:function(){return accessor}});var wrapAccessor=function wrapAccessor(acc){return function(data){return accessor(data,acc)}}},"./src/utils/constants.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{l:function(){return views},o:function(){return navigate}});var navigate={PREVIOUS:"PREV",NEXT:"NEXT",TODAY:"TODAY",DATE:"DATE"},views={MONTH:"month",WEEK:"week",WORK_WEEK:"work_week",DAY:"day",AGENDA:"agenda"}},"./src/utils/dates.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{GH:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf},Gx:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.minutes},IC:function(){return visibleDays},Jo:function(){return lastVisibleDay},RO:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.gte},T9:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.max},Ui:function(){return diff},WQ:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.add},eq:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.eq},gt:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.gt},h1:function(){return merge},jk:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.min},lt:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.lt},mk:function(){return ceil},p0:function(){return duration},pJ:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.endOf},pR:function(){return isJustDate},r4:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.inRange},t7:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.neq},tk:function(){return firstVisibleDay},wJ:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.lte},y1:function(){return range}});__webpack_require__("./node_modules/core-js/modules/es.array.map.js");var date_arithmetic__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/date-arithmetic/index.js"),MILLI={seconds:1e3,minutes:6e4,hours:36e5,day:864e5};function firstVisibleDay(date,localizer){var firstOfMonth=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf(date,"month");return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf(firstOfMonth,"week",localizer.startOfWeek())}function lastVisibleDay(date,localizer){var endOfMonth=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.endOf(date,"month");return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.endOf(endOfMonth,"week",localizer.startOfWeek())}function visibleDays(date,localizer){for(var current=firstVisibleDay(date,localizer),last=lastVisibleDay(date,localizer),days=[];date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.lte(current,last,"day");)days.push(current),current=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.add(current,1,"day");return days}function ceil(date,unit){var floor=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf(date,unit);return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.eq(floor,date)?floor:date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.add(floor,1,unit)}function range(start,end){for(var unit=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day",current=start,days=[];date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.lte(current,end,unit);)days.push(current),current=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.add(current,1,unit);return days}function merge(date,time){return null==time&&null==date?null:(null==time&&(time=new Date),null==date&&(date=new Date),date=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf(date,"day"),date=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.hours(date,date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.hours(time)),date=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.minutes(date,date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.minutes(time)),date=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.seconds(date,date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.seconds(time)),date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.milliseconds(date,date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.milliseconds(time)))}function isJustDate(date){return 0===date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.hours(date)&&0===date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.minutes(date)&&0===date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.seconds(date)&&0===date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.milliseconds(date)}function duration(start,end,unit,firstOfWeek){return"day"===unit&&(unit="date"),Math.abs(date_arithmetic__WEBPACK_IMPORTED_MODULE_1__[unit](start,void 0,firstOfWeek)-date_arithmetic__WEBPACK_IMPORTED_MODULE_1__[unit](end,void 0,firstOfWeek))}function diff(dateA,dateB,unit){return unit&&"milliseconds"!==unit?Math.round(Math.abs(+date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf(dateA,unit)/MILLI[unit]-+date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf(dateB,unit)/MILLI[unit])):Math.abs(+dateA-+dateB)}},"./src/utils/eventLevels.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{FA:function(){return eventSegments},O_:function(){return eventLevels},SY:function(){return sortWeekEvents},kD:function(){return sortEvents},qO:function(){return endOfRange},r4:function(){return inRange}});var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),lodash_findIndex__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__("./node_modules/core-js/modules/es.array.sort.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/lodash/findIndex.js")),lodash_findIndex__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(lodash_findIndex__WEBPACK_IMPORTED_MODULE_3__);function endOfRange(_ref){var dateRange=_ref.dateRange,_ref$unit=_ref.unit,unit=void 0===_ref$unit?"day":_ref$unit,localizer=_ref.localizer;return{first:dateRange[0],last:localizer.add(dateRange[dateRange.length-1],1,unit)}}function eventSegments(event,range,accessors,localizer){var _endOfRange=endOfRange({dateRange:range,localizer:localizer}),first=_endOfRange.first,last=_endOfRange.last,slots=localizer.diff(first,last,"day"),start=localizer.max(localizer.startOf(accessors.start(event),"day"),first),end=localizer.min(localizer.ceil(accessors.end(event),"day"),last),padding=lodash_findIndex__WEBPACK_IMPORTED_MODULE_3___default()(range,(function(x){return localizer.isSameDate(x,start)})),span=localizer.diff(start,end,"day");return span=Math.min(span,slots),{event:event,span:span=Math.max(span-localizer.segmentOffset,1),left:padding+1,right:Math.max(padding+span,1)}}function eventLevels(rowSegments){var i,j,seg,limit=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0,levels=[],extra=[];for(i=0;i<rowSegments.length;i++){for(seg=rowSegments[i],j=0;j<levels.length&&segsOverlap(seg,levels[j]);j++);j>=limit?extra.push(seg):(levels[j]||(levels[j]=[])).push(seg)}for(i=0;i<levels.length;i++)levels[i].sort((function(a,b){return a.left-b.left}));return{levels:levels,extra:extra}}function inRange(e,start,end,accessors,localizer){var event={start:accessors.start(e),end:accessors.end(e)},range={start:start,end:end};return localizer.inEventRange({event:event,range:range})}function segsOverlap(seg,otherSegs){return otherSegs.some((function(otherSeg){return otherSeg.left<=seg.right&&otherSeg.right>=seg.left}))}function sortWeekEvents(events,accessors,localizer){var base=(0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__.A)(events),multiDayEvents=[],standardEvents=[];base.forEach((function(event){var startCheck=accessors.start(event),endCheck=accessors.end(event);localizer.daySpan(startCheck,endCheck)>1?multiDayEvents.push(event):standardEvents.push(event)}));var multiSorted=multiDayEvents.sort((function(a,b){return sortEvents(a,b,accessors,localizer)})),standardSorted=standardEvents.sort((function(a,b){return sortEvents(a,b,accessors,localizer)}));return[].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__.A)(multiSorted),(0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__.A)(standardSorted))}function sortEvents(eventA,eventB,accessors,localizer){var evtA={start:accessors.start(eventA),end:accessors.end(eventA),allDay:accessors.allDay(eventA)},evtB={start:accessors.start(eventB),end:accessors.end(eventB),allDay:accessors.allDay(eventB)};return localizer.sortEvents({evtA:evtA,evtB:evtB})}},"./src/utils/helpers.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{me:function(){return notify}});__webpack_require__("./node_modules/core-js/modules/es.array.concat.js");function notify(handler,args){handler&&handler.apply(null,[].concat(args))}},"./src/utils/propTypes.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js");var prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),_constants__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/constants.js"),viewNames=Object.keys(_constants__WEBPACK_IMPORTED_MODULE_3__.l).map((function(k){return _constants__WEBPACK_IMPORTED_MODULE_3__.l[k]}));prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,prop_types__WEBPACK_IMPORTED_MODULE_4___default().func]),prop_types__WEBPACK_IMPORTED_MODULE_4___default().any,prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_4___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf(viewNames)),prop_types__WEBPACK_IMPORTED_MODULE_4___default().objectOf((function(prop,key){if(-1!==viewNames.indexOf(key)&&"boolean"==typeof prop[key])return null;for(var _len=arguments.length,args=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++)args[_key-2]=arguments[_key];return prop_types__WEBPACK_IMPORTED_MODULE_4___default().elementType.apply(prop_types__WEBPACK_IMPORTED_MODULE_4___default(),[prop,key].concat(args))}))]),prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf(["overlap","no-overlap"]),prop_types__WEBPACK_IMPORTED_MODULE_4___default().func])},"./src/utils/selection.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{bY:function(){return pointInBox},bx:function(){return dateCellSelection},sU:function(){return getSlotAtX},sp:function(){return isSelected}});var lodash_isEqual__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash/isEqual.js"),lodash_isEqual__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_0__);function isSelected(event,selected){return!(!event||null==selected)&&lodash_isEqual__WEBPACK_IMPORTED_MODULE_0___default()(event,selected)}function slotWidth(rowBox,slots){return(rowBox.right-rowBox.left)/slots}function getSlotAtX(rowBox,x,rtl,slots){var cellWidth=slotWidth(rowBox,slots);return rtl?slots-1-Math.floor((x-rowBox.left)/cellWidth):Math.floor((x-rowBox.left)/cellWidth)}function pointInBox(box,_ref){var x=_ref.x,y=_ref.y;return y>=box.top&&y<=box.bottom&&x>=box.left&&x<=box.right}function dateCellSelection(start,rowBox,box,slots,rtl){var startIdx=-1,endIdx=-1,lastSlotIdx=slots-1,cellWidth=slotWidth(rowBox,slots),currentSlot=getSlotAtX(rowBox,box.x,rtl,slots),isCurrentRow=rowBox.top<box.y&&rowBox.bottom>box.y,isStartRow=rowBox.top<start.y&&rowBox.bottom>start.y,isAboveStart=start.y>rowBox.bottom,isBelowStart=rowBox.top>start.y;return box.top<rowBox.top&&box.bottom>rowBox.bottom&&(startIdx=0,endIdx=lastSlotIdx),isCurrentRow&&(isBelowStart?(startIdx=0,endIdx=currentSlot):isAboveStart&&(startIdx=currentSlot,endIdx=lastSlotIdx)),isStartRow&&(startIdx=endIdx=rtl?lastSlotIdx-Math.floor((start.x-rowBox.left)/cellWidth):Math.floor((start.x-rowBox.left)/cellWidth),isCurrentRow?currentSlot<startIdx?startIdx=currentSlot:endIdx=currentSlot:start.y<box.y?endIdx=lastSlotIdx:startIdx=0),{startIdx:startIdx,endIdx:endIdx}}},"./stories/DemoLink.component.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return DemoLink}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),linkBase="https://github.com/jquense/react-big-calendar/blob/master/stories/demos/exampleCode/";function DemoLink(_ref){var fileName=_ref.fileName,children=_ref.children;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{marginBottom:10},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("a",{target:"_blank",href:"".concat(linkBase).concat(fileName,".js"),children:"<\\> View Example Source Code"})}),children?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{marginBottom:10},children:children}):null]})}DemoLink.displayName="DemoLink",DemoLink.__docgenInfo={description:"",methods:[],displayName:"DemoLink"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/DemoLink.component.js"]={name:"DemoLink",docgenInfo:DemoLink.__docgenInfo,path:"stories/DemoLink.component.js"})},"./stories/demos/TimezoneSelect.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return TimezoneSelect}});__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/react/index.js");var react_tackle_box_Layout__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-tackle-box/Layout.js"),react_tackle_box_Layout__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react_tackle_box_Layout__WEBPACK_IMPORTED_MODULE_2__),moment__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=(__webpack_require__("./node_modules/moment-timezone/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js")),allZones=moment__WEBPACK_IMPORTED_MODULE_3___default().tz.names();function TimezoneSelect(_ref){var title=_ref.title,_ref$defaultTZ=_ref.defaultTZ,defaultTZ=void 0===_ref$defaultTZ?moment__WEBPACK_IMPORTED_MODULE_3___default().tz.guess():_ref$defaultTZ,timezone=_ref.timezone,setTimezone=_ref.setTimezone;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_tackle_box_Layout__WEBPACK_IMPORTED_MODULE_2___default(),{direction:"column",align:"center",children:[title?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("strong",{style:{marginBottom:10},children:title}):null,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("label",{children:"Select a Timezone"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("select",{className:"form-control",style:{width:200,display:"inline-block"},value:timezone,onChange:function onChange(_ref2){var value=_ref2.target.value;return setTimezone(value||defaultTZ)},children:allZones.map((function(c,idx){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("option",{value:"clear"!==c?c:"",children:c},idx)}))})]})})}allZones.unshift("clear"),TimezoneSelect.displayName="TimezoneSelect",TimezoneSelect.__docgenInfo={description:"",methods:[],displayName:"TimezoneSelect",props:{defaultTZ:{defaultValue:{value:"moment.tz.guess()",computed:!0},description:"",type:{name:"string"},required:!1},title:{description:"",type:{name:"string"},required:!1},timezone:{description:"",type:{name:"string"},required:!1},setTimezone:{description:"",type:{name:"func"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/TimezoneSelect.js"]={name:"TimezoneSelect",docgenInfo:TimezoneSelect.__docgenInfo,path:"stories/demos/TimezoneSelect.js"})},"./stories/demos/exampleCode/basic.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return Basic}});var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__),react_big_calendar__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/index.js"),_DemoLink_component__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./stories/DemoLink.component.js"),_resources_events__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./stories/resources/events.js"),_src_utils_dates__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/utils/dates.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["localizer","showDemoLink"],mLocalizer=(0,react_big_calendar__WEBPACK_IMPORTED_MODULE_5__.ye)(moment__WEBPACK_IMPORTED_MODULE_4___default()),ColoredDateCellWrapper=function ColoredDateCellWrapper(_ref){var children=_ref.children;return react__WEBPACK_IMPORTED_MODULE_3__.cloneElement(react__WEBPACK_IMPORTED_MODULE_3__.Children.only(children),{style:{backgroundColor:"lightblue"}})};function Basic(_ref2){var _ref2$localizer=_ref2.localizer,localizer=void 0===_ref2$localizer?mLocalizer:_ref2$localizer,_ref2$showDemoLink=_ref2.showDemoLink,showDemoLink=void 0===_ref2$showDemoLink||_ref2$showDemoLink,props=(0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_10__.A)(_ref2,_excluded),_useMemo=(0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)((function(){return{components:{timeSlotWrapper:ColoredDateCellWrapper},defaultDate:new Date(2015,3,1),max:_src_utils_dates__WEBPACK_IMPORTED_MODULE_8__.WQ(_src_utils_dates__WEBPACK_IMPORTED_MODULE_8__.pJ(new Date(2015,17,1),"day"),-1,"hours"),views:Object.keys(react_big_calendar__WEBPACK_IMPORTED_MODULE_5__.Pp).map((function(k){return react_big_calendar__WEBPACK_IMPORTED_MODULE_5__.Pp[k]}))}}),[]),components=_useMemo.components,defaultDate=_useMemo.defaultDate,max=_useMemo.max,views=_useMemo.views;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(react__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[showDemoLink?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_DemoLink_component__WEBPACK_IMPORTED_MODULE_6__.A,{fileName:"basic"}):null,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",Object.assign({className:"height600"},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(react_big_calendar__WEBPACK_IMPORTED_MODULE_5__.Vv,{components:components,defaultDate:defaultDate,events:_resources_events__WEBPACK_IMPORTED_MODULE_7__.A,localizer:localizer,max:max,showMultiDayTimes:!0,step:60,views:views})}))]})}Basic.displayName="Basic",Basic.__docgenInfo={description:"We are defaulting the localizer here because we are using this same\nexample on the main 'About' page in Storybook",methods:[],displayName:"Basic",props:{localizer:{defaultValue:{value:"momentLocalizer(moment)",computed:!0},description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1},showDemoLink:{defaultValue:{value:"true",computed:!1},description:"",type:{name:"bool"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/basic.js"]={name:"Basic",docgenInfo:Basic.__docgenInfo,path:"stories/demos/exampleCode/basic.js"})},"./stories/demos/exampleCode/dndOutsideSource.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return DnDOutsideResource}});var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react__WEBPACK_IMPORTED_MODULE_7__=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.entries.js"),__webpack_require__("./node_modules/react/index.js")),_resources_events__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./stories/resources/events.js"),react_big_calendar__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/index.js"),_resources_Card__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./stories/resources/Card.js"),_DemoLink_component__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./stories/DemoLink.component.js"),_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./src/addons/dragAndDrop/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__=(__webpack_require__("./src/addons/dragAndDrop/styles.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js")),DragAndDropCalendar=(0,_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_12__.A)(react_big_calendar__WEBPACK_IMPORTED_MODULE_9__.Vv),adjEvents=_resources_events__WEBPACK_IMPORTED_MODULE_8__.A.map((function(it,ind){return Object.assign({},it,{isDraggable:ind%2==0})})),formatName=function formatName(name,count){return"".concat(name," ID ").concat(count)};function DnDOutsideResource(_ref){var localizer=_ref.localizer,_useState=(0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(adjEvents),_useState2=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_15__.A)(_useState,2),myEvents=_useState2[0],setMyEvents=_useState2[1],_useState3=(0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(),_useState4=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_15__.A)(_useState3,2),draggedEvent=_useState4[0],setDraggedEvent=_useState4[1],_useState5=(0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(!0),_useState6=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_15__.A)(_useState5,2),displayDragItemInCell=_useState6[0],setDisplayDragItemInCell=_useState6[1],_useState7=(0,react__WEBPACK_IMPORTED_MODULE_7__.useState)({item1:0,item2:0}),_useState8=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_15__.A)(_useState7,2),counters=_useState8[0],setCounters=_useState8[1],eventPropGetter=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(event){return Object.assign({},event.isDraggable?{className:"isDraggable"}:{className:"nonDraggable"})}),[]),handleDragStart=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(event){return setDraggedEvent(event)}),[]),dragFromOutsideItem=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(){return"undroppable"===draggedEvent?null:draggedEvent}),[draggedEvent]),customOnDragOverFromOutside=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(dragEvent){"undroppable"!==draggedEvent&&(console.log("preventDefault"),dragEvent.preventDefault())}),[draggedEvent]),handleDisplayDragItemInCell=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(){return setDisplayDragItemInCell((function(prev){return!prev}))}),[]),moveEvent=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(_ref2){var event=_ref2.event,start=_ref2.start,end=_ref2.end,_ref2$isAllDay=_ref2.isAllDay,droppedOnAllDaySlot=void 0!==_ref2$isAllDay&&_ref2$isAllDay,allDay=event.allDay;!allDay&&droppedOnAllDaySlot&&(event.allDay=!0),setMyEvents((function(prev){var _prev$find,existing=null!==(_prev$find=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find?_prev$find:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__.A)(filtered),[Object.assign({},existing,{start:start,end:end,allDay:allDay})])}))}),[setMyEvents]),newEvent=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(event){setMyEvents((function(prev){var idList=prev.map((function(item){return item.id})),newId=Math.max.apply(Math,(0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__.A)(idList))+1;return[].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__.A)(prev),[Object.assign({},event,{id:newId})])}))}),[setMyEvents]),onDropFromOutside=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(_ref3){var start=_ref3.start,end=_ref3.end,isAllDay=_ref3.allDay;if("undroppable"!==draggedEvent){var name=draggedEvent.name,event={title:formatName(name,counters[name]),start:start,end:end,isAllDay:isAllDay};setDraggedEvent(null),setCounters((function(prev){var count=prev[name];return Object.assign({},prev,(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_17__.A)({},name,count+1))})),newEvent(event)}else setDraggedEvent(null)}),[draggedEvent,counters,setDraggedEvent,setCounters,newEvent]),resizeEvent=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(_ref4){var event=_ref4.event,start=_ref4.start,end=_ref4.end;setMyEvents((function(prev){var _prev$find2,existing=null!==(_prev$find2=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find2?_prev$find2:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__.A)(filtered),[Object.assign({},existing,{start:start,end:end})])}))}),[setMyEvents]),defaultDate=(0,react__WEBPACK_IMPORTED_MODULE_7__.useMemo)((function(){return new Date(2015,3,12)}),[]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsxs)(react__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(_DemoLink_component__WEBPACK_IMPORTED_MODULE_11__.A,{fileName:"dndOutsideSource",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsxs)(_resources_Card__WEBPACK_IMPORTED_MODULE_10__.A,{className:"dndOutsideSourceExample",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsxs)("div",{className:"inner",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("h4",{children:"Outside Drag Sources"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("p",{children:"Lighter colored events, in the Calendar, have an `isDraggable` key of `false`."}),Object.entries(counters).map((function(_ref5){var _ref6=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_15__.A)(_ref5,2),name=_ref6[0],count=_ref6[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("div",{draggable:"true",onDragStart:function onDragStart(){return handleDragStart({title:formatName(name,count),name:name})},children:formatName(name,count)},name)})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("div",{draggable:"true",onDragStart:function onDragStart(){return handleDragStart("undroppable")},children:"Draggable but not for calendar."})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsxs)("label",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("input",{type:"checkbox",checked:displayDragItemInCell,onChange:handleDisplayDragItemInCell}),"Display dragged item in cell while dragging over"]})})]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(DragAndDropCalendar,{defaultDate:defaultDate,defaultView:react_big_calendar__WEBPACK_IMPORTED_MODULE_9__.Pp.MONTH,dragFromOutsideItem:displayDragItemInCell?dragFromOutsideItem:null,draggableAccessor:"isDraggable",eventPropGetter:eventPropGetter,events:myEvents,localizer:localizer,onDropFromOutside:onDropFromOutside,onDragOverFromOutside:customOnDragOverFromOutside,onEventDrop:moveEvent,onEventResize:resizeEvent,onSelectSlot:newEvent,resizable:!0,selectable:!0})})]})}DnDOutsideResource.displayName="DnDOutsideResource",DnDOutsideResource.__docgenInfo={description:"",methods:[],displayName:"DnDOutsideResource",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/dndOutsideSource.js"]={name:"DnDOutsideResource",docgenInfo:DnDOutsideResource.__docgenInfo,path:"stories/demos/exampleCode/dndOutsideSource.js"})},"./stories/demos/exampleCode/resizable.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return Resizable}});var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react__WEBPACK_IMPORTED_MODULE_5__=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/react/index.js")),_resources_events__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./stories/resources/events.js"),react_big_calendar__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/index.js"),_resources_Card__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./stories/resources/Card.js"),_DemoLink_component__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./stories/DemoLink.component.js"),_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/addons/dragAndDrop/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__=(__webpack_require__("./src/addons/dragAndDrop/styles.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js")),DragAndDropCalendar=(0,_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_10__.A)(react_big_calendar__WEBPACK_IMPORTED_MODULE_7__.Vv),adjEvents=_resources_events__WEBPACK_IMPORTED_MODULE_6__.A.map((function(it,ind){return Object.assign({},it,{isResizable:ind%2==0,isDraggable:ind%2==0})}));function Resizable(_ref){var localizer=_ref.localizer,_useState=(0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(adjEvents),_useState2=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_13__.A)(_useState,2),myEvents=_useState2[0],setMyEvents=_useState2[1],_useState3=(0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(!0),_useState4=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_13__.A)(_useState3,2),resizable=_useState4[0],setResizable=_useState4[1],eventPropGetter=(0,react__WEBPACK_IMPORTED_MODULE_5__.useCallback)((function(event){return Object.assign({},(!resizable||!event.isResizable)&&{className:"nonResizable"})}),[resizable]),toggleResizing=(0,react__WEBPACK_IMPORTED_MODULE_5__.useCallback)((function(){return setResizable((function(prev){return!prev}))}),[]),resizeEvent=(0,react__WEBPACK_IMPORTED_MODULE_5__.useCallback)((function(_ref2){var event=_ref2.event,start=_ref2.start,end=_ref2.end;setMyEvents((function(prev){var _prev$find,existing=null!==(_prev$find=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find?_prev$find:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_14__.A)(filtered),[Object.assign({},existing,{start:start,end:end})])}))}),[setMyEvents]),defaultDate=(0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)((function(){return new Date(2015,3,12)}),[]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(react__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_DemoLink_component__WEBPACK_IMPORTED_MODULE_9__.A,{fileName:"dndOutsideSource",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_resources_Card__WEBPACK_IMPORTED_MODULE_8__.A,{className:"dndOutsideSourceExample",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)("div",{className:"inner",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("h4",{children:"Resizing"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)("p",{children:["Events allowing resizing will show drag handles when you mouse over them.",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),"In this example, lighter colored events are not resizable.",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),"Toggling the checkbox to the right will turn off/on resizing all together."]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)("label",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("input",{type:"checkbox",checked:resizable,onChange:toggleResizing}),"Allow Event Resizing"]})})]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(DragAndDropCalendar,{defaultDate:defaultDate,defaultView:react_big_calendar__WEBPACK_IMPORTED_MODULE_7__.Pp.MONTH,draggableAccessor:"isDraggable",eventPropGetter:eventPropGetter,events:myEvents,localizer:localizer,onEventResize:resizeEvent,resizable:resizable,resizableAccessor:resizable?"isResizable":"fakeKey"})})]})}Resizable.displayName="Resizable",Resizable.__docgenInfo={description:"",methods:[],displayName:"Resizable",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/resizable.js"]={name:"Resizable",docgenInfo:Resizable.__docgenInfo,path:"stories/demos/exampleCode/resizable.js"})},"./stories/helpers/createEvents.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function createEvents(){var idx=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,date=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Date,y=date.getFullYear(),m=date.getMonth(),d=date.getDate();return[[{title:"Event 1",start:new Date(y,m,d,10,30,0,0),end:new Date(y,m,d,13,30,0,0)},{title:"Event 2",start:new Date(y,m,d,10,30,0,0),end:new Date(y,m,d,13,30,0,0)},{title:"Event 3",start:new Date(y,m,d,10,30,0,0),end:new Date(y,m,d,12,30,0,0)},{title:"Event 4",start:new Date(y,m,d,8,30,0,0),end:new Date(y,m,d,18,0,0,0)},{title:"Event 5",start:new Date(y,m,d,15,30,0,0),end:new Date(y,m,d,16,0,0,0)},{title:"Event 6",start:new Date(y,m,d,11,0,0,0),end:new Date(y,m,d,12,0,0,0)},{title:"Event 7",start:new Date(y,m,d,1,0,0,0),end:new Date(y,m,d,2,0,0,0)}],[{title:"Event 1",start:new Date(y,m,d,9,30,0,0),end:new Date(y,m,d,15,30,0,0)},{title:"Event 2",start:new Date(y,m,d,11,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 3",start:new Date(y,m,d,9,30,0,0),end:new Date(y,m,d,11,30,0,0)},{title:"Event 4",start:new Date(y,m,d,9,30,0,0),end:new Date(y,m,d,10,30,0,0)},{title:"Event 5",start:new Date(y,m,d,10,0,0,0),end:new Date(y,m,d,11,0,0,0)},{title:"Event 6",start:new Date(y,m,d,10,0,0,0),end:new Date(y,m,d,11,0,0,0)},{title:"Event 7",start:new Date(y,m,d,9,30,0,0),end:new Date(y,m,d,10,30,0,0)},{title:"Event 8",start:new Date(y,m,d,9,30,0,0),end:new Date(y,m,d,10,30,0,0)},{title:"Event 9",start:new Date(y,m,d,9,30,0,0),end:new Date(y,m,d,10,30,0,0)},{title:"Event 10",start:new Date(y,m,d,10,30,0,0),end:new Date(y,m,d,12,30,0,0)},{title:"Event 11",start:new Date(y,m,d,12,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 12",start:new Date(y,m,d,12,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 13",start:new Date(y,m,d,12,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 14",start:new Date(y,m,d,12,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 15",start:new Date(y,m,d,6,30,0,0),end:new Date(y,m,d,8,0,0,0)},{title:"Event 16",start:new Date(y,m,d,16,0,0,0),end:new Date(y,m,d,17,30,0,0)}],[{title:"Event 1",start:new Date(y,m,d,2,30,0,0),end:new Date(y,m,d,4,30,0,0)},{title:"Event 2",start:new Date(y,m,d,2,30,0,0),end:new Date(y,m,d,3,30,0,0)},{title:"Event 3",start:new Date(y,m,d,3,0,0,0),end:new Date(y,m,d,4,0,0,0)}],[{title:"Event 1",start:new Date(y,m,d,6,30,0,0),end:new Date(y,m,d,7,0,0,0)},{title:"Event 2",start:new Date(y,m,d,8,0,0,0),end:new Date(y,m,d,17,0,0,0)},{title:"Event 3",start:new Date(y,m,d,8,0,0,0),end:new Date(y,m,d,11,0,0,0)},{title:"Event 4",start:new Date(y,m,d,8,0,0,0),end:new Date(y,m,d,12,0,0,0)},{title:"Event 5",start:new Date(y,m,d,10,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 6",start:new Date(y,m,d,10,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 7",start:new Date(y,m,d,10,0,0,0),end:new Date(y,m,d,13,0,0,0)}],[{title:"Event 1",start:new Date(y,m,d,19,0,0,0),end:new Date(y,m,d,20,55,0,0)},{title:"Event 2",start:new Date(y,m,d,19,15,0,0),end:new Date(y,m,d,20,15,0,0)},{title:"Event 3",start:new Date(y,m,d,19,45,0,0),end:new Date(y,m,d,22,30,0,0)},{title:"Event 4",start:new Date(y,m,d,20,45,0,0),end:new Date(y,m,d,22,5,0,0)},{title:"Event 5",start:new Date(y,m,d,10,0,0,0),end:new Date(y,m,d,11,0,0,0)},{title:"Event 6",start:new Date(y,m,d,10,30,0,0),end:new Date(y,m,d,11,30,0,0)}]][idx]}__webpack_require__.d(__webpack_exports__,{A:function(){return createEvents}})},"./stories/helpers/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{AZ:function(){return events},ES:function(){return resources},GI:function(){return resourceEvents},Mf:function(){return backgroundEvents},Pp:function(){return _src__WEBPACK_IMPORTED_MODULE_5__.Pp},Vv:function(){return Calendar},zm:function(){return DragAndDropCalendar}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),moment__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__),_src__WEBPACK_IMPORTED_MODULE_5__=(__webpack_require__("./node_modules/moment-timezone/index.js"),__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./src/index.js")),_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./src/sass/styles.scss"),__webpack_require__("./src/addons/dragAndDrop/styles.scss"),__webpack_require__("./src/addons/dragAndDrop/index.js")),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/react/jsx-runtime.js"),localizer=(0,_src__WEBPACK_IMPORTED_MODULE_5__.ye)(moment__WEBPACK_IMPORTED_MODULE_2___default()),Calendar=function Calendar(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",{style:{height:650},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_src__WEBPACK_IMPORTED_MODULE_5__.Vv,Object.assign({localizer:localizer},props))})};Calendar.displayName="Calendar";var DragAndDropCalendar=(0,_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_8__.A)(Calendar),DragableCalendar=function DragableCalendar(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(DragAndDropCalendar,Object.assign({popup:!0,selectable:!0,localizer:localizer,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("event dropped"),onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("event selected"),onSelectSlot:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("slot selected")},props))};DragableCalendar.displayName="DragableCalendar";var events=[{title:"example 1",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(2,"hours").toDate(),allDay:!1},{title:"example 2",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(2,"hours").toDate(),allDay:!1},{title:"example 3",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(2,"hours").toDate(),allDay:!1},{title:"example 4",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(2,"hours").toDate(),allDay:!1},{title:"example 5",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(2,"hours").toDate(),allDay:!1},{title:"test",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().add(1,"days").subtract(5,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().add(1,"days").subtract(4,"hours").toDate(),allDay:!1},{title:"test larger",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(5,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(10,"hours").toDate(),allDay:!1},{title:"test larger",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(15,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(23,"hours").toDate(),allDay:!1},{title:"test all day",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(1,"day").toDate(),allDay:!0},{title:"test 2 days",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(2,"days").toDate(),allDay:!0},{title:"test multi-day",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().add(3,"days").toDate(),allDay:!1}],backgroundEvents=[{title:"test background event",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(2,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(12,"hours").toDate(),allDay:!1}],resourceEvents=[{title:"event 1",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(2,"hours").toDate(),allDay:!1,resourceId:1},{title:"event 2",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(3,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(4,"hours").toDate(),allDay:!1,resourceId:[1,2]},{title:"event 3",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(3,"hours").toDate(),allDay:!1,resourceId:3}],resources=[{id:1,name:"Resource One"},{id:2,name:"Resource Two"},{id:3,name:"Resource Three"}];Calendar.__docgenInfo={description:"",methods:[],displayName:"Calendar"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/helpers/index.js"]={name:"Calendar",docgenInfo:Calendar.__docgenInfo,path:"stories/helpers/index.js"}),DragableCalendar.__docgenInfo={description:"",methods:[],displayName:"DragableCalendar"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/helpers/index.js"]={name:"DragableCalendar",docgenInfo:DragableCalendar.__docgenInfo,path:"stories/helpers/index.js"})},"./stories/props/storyDefaults.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{_:function(){return resourceAccessorStoryArgs},o:function(){return accessorStoryArgs}});var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),moment__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/moment/moment.js")),moment__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__),_src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/index.js"),_resources_events__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./stories/resources/events.js"),_resources_resourceEvents__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./stories/resources/resourceEvents.js"),_excluded=["start","end","title","allDay"],resourceEvents=_resources_resourceEvents__WEBPACK_IMPORTED_MODULE_5__.A.events,resources=_resources_resourceEvents__WEBPACK_IMPORTED_MODULE_5__.A.list,mLocalizer=(0,_src__WEBPACK_IMPORTED_MODULE_3__.ye)(moment__WEBPACK_IMPORTED_MODULE_2___default()),adjusted=_resources_events__WEBPACK_IMPORTED_MODULE_4__.A.map((function(event){var startDate=event.start,endDate=event.end,label=event.title,allDayEvent=event.allDay,other=(0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_6__.A)(event,_excluded);return Object.assign({},other,{startDate:startDate,endDate:endDate,label:label,allDayEvent:allDayEvent})})),accessorStoryArgs={allDayAccessor:"allDayEvent",defaultDate:new Date(2015,3,13),endAccessor:"endDate",events:adjusted,localizer:mLocalizer,titleAccessor:"label",tooltipAccessor:"label",startAccessor:"startDate"},adjustedResources=resources.map((function(_ref){return{Id:_ref.id,Title:_ref.title}})),resourceAccessorStoryArgs={defaultDate:new Date(2015,3,4),defaultView:_src__WEBPACK_IMPORTED_MODULE_3__.Pp.DAY,events:resourceEvents,localizer:mLocalizer,resourceIdAccessor:"Id",resources:adjustedResources,resourceTitleAccessor:"Title"}},"./stories/resources/Card.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function Card(_ref){var children=_ref.children,className=_ref.className,style=_ref.style;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:"".concat(className||""," card"),style:style,children:children})}Card.displayName="Card",Card.__docgenInfo={description:"",methods:[],displayName:"Card"},__webpack_exports__.A=Card,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/resources/Card.js"]={name:"Card",docgenInfo:Card.__docgenInfo,path:"stories/resources/Card.js"})},"./stories/resources/customComponents.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return resources_customComponents}});var defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/react/index.js")),esm=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),jsx_runtime=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/jsx-runtime.js")),DayColumnWrapper=function DayColumnWrapper(_ref){var children=_ref.children,className=_ref.className,style=_ref.style,innerRef=_ref.innerRef;return(0,jsx_runtime.jsx)("div",{className:className,style:style,ref:innerRef,children:children})};DayColumnWrapper.displayName="DayColumnWrapper";var CustomDayColumnWrapper=react.forwardRef((function(dayColumnWrapperProps,ref){var style={borderColor:dayColumnWrapperProps.resource%2==0?"red":"#fff",borderStyle:"solid",borderWidth:"1px"};return(0,jsx_runtime.jsx)(DayColumnWrapper,Object.assign({},dayColumnWrapperProps,{style:style,innerRef:ref}))})),resources_customComponents=(0,defineProperty.A)((0,defineProperty.A)((0,defineProperty.A)({dateCellWrapper:function dateCellWrapper(dateCellWrapperProps){var hasAlert=!!dateCellWrapperProps.range&&dateCellWrapperProps.range.some((function(date){return date.getDate()%12==0})),style={display:"flex",flex:1,borderLeft:"1px solid #DDD",backgroundColor:hasAlert?"#f5f5dc":"#fff"};return(0,jsx_runtime.jsxs)("div",{style:style,children:[hasAlert&&(0,jsx_runtime.jsx)("a",{onClick:(0,esm.action)("custom dateCellWrapper component clicked"),children:"Click me"}),dateCellWrapperProps.children]})},dayColumnWrapper:CustomDayColumnWrapper,timeSlotWrapper:function timeSlotWrapper(timeSlotWrapperProps){var hasCustomInfo=!!timeSlotWrapperProps.value&&4===timeSlotWrapperProps.value.getHours(),style={display:"flex",flex:1,backgroundColor:hasCustomInfo?"#f5f5dc":"#fff"};return(0,jsx_runtime.jsxs)("div",{style:style,children:[hasCustomInfo&&"Custom Day Wrapper",timeSlotWrapperProps.children]})},eventWrapper:function eventWrapper(eventWrapperProps){var style={border:"4px solid",borderColor:eventWrapperProps.event.start.getHours()%2==0?"green":"red",padding:"5px"};return(0,jsx_runtime.jsx)("div",{style:style,children:eventWrapperProps.children})}},"timeSlotWrapper",(function timeSlotWrapper(timeSlotWrapperProps){var style=null===timeSlotWrapperProps.resource||0!==timeSlotWrapperProps.value.getMinutes()?{}:{border:"4px solid",backgroundColor:timeSlotWrapperProps.value.getHours()>=8&&timeSlotWrapperProps.value.getHours()<=17?"green":"red",padding:"5px"};return(0,jsx_runtime.jsx)("div",{style:style,children:timeSlotWrapperProps.children})})),"timeGutterWrapper",(function timeGutterWrapper(timeGutterWrapperProps){return(0,jsx_runtime.jsx)("div",{id:"my-custom-time-gutter-wrapper",style:{backgroundColor:"gray"},children:timeGutterWrapperProps.children})})),"showMore",(function showMore(showMoreProps){return(0,jsx_runtime.jsxs)("button",{id:"my-custom-show-more",style:{border:"4px solid red",cursor:"pointer"},onClick:function onClick(){console.log("showMoreProps",showMoreProps),window.alert("\n            Clicked ".concat(showMoreProps.slotDate.toISOString().substr(0,10)," with ").concat(showMoreProps.remainingEvents.length," remaining events.\n            Open the console for the full set of props.\n          "))},children:[showMoreProps.count," more!"]})}))},"./stories/resources/events.js":function(__unused_webpack_module,__webpack_exports__){"use strict";var now=new Date;__webpack_exports__.A=[{id:1,title:"Long Event",start:new Date(2015,3,7),end:new Date(2015,3,10)},{id:2,title:"DTS STARTS",start:new Date(2016,2,13,0,0,0),end:new Date(2016,2,20,0,0,0)},{id:3,title:"DTS ENDS",start:new Date(2016,10,6,0,0,0),end:new Date(2016,10,13,0,0,0)},{id:4,title:"Some Event",start:new Date(2015,3,9,0,0,0),end:new Date(2015,3,9,0,0,0),allDay:!0},{id:92,title:"Some Other Event",start:new Date(2015,3,9,8,0,0),end:new Date(2015,3,10,11,30,0)},{id:5,title:"Conference",start:new Date(2015,3,11),end:new Date(2015,3,13),desc:"Big conference for important people"},{id:6,title:"Meeting",start:new Date(2015,3,12,10,30,0,0),end:new Date(2015,3,12,12,30,0,0),desc:"Pre-meeting meeting, to prepare for the meeting"},{id:7,title:"Lunch",start:new Date(2015,3,12,12,0,0,0),end:new Date(2015,3,12,13,0,0,0),desc:"Power lunch"},{id:8,title:"Meeting",start:new Date(2015,3,12,14,0,0,0),end:new Date(2015,3,12,15,0,0,0)},{id:9,title:"Happy Hour",start:new Date(2015,3,12,17,0,0,0),end:new Date(2015,3,12,17,30,0,0),desc:"Most important meal of the day"},{id:10,title:"Dinner",start:new Date(2015,3,12,20,0,0,0),end:new Date(2015,3,12,21,0,0,0)},{id:11,title:"Planning Meeting with Paige",start:new Date(2015,3,13,8,0,0),end:new Date(2015,3,13,10,30,0)},{id:11.1,title:"Inconvenient Conference Call",start:new Date(2015,3,13,9,30,0),end:new Date(2015,3,13,12,0,0)},{id:11.2,title:"Project Kickoff - Lou's Shoes",start:new Date(2015,3,13,11,30,0),end:new Date(2015,3,13,14,0,0)},{id:11.3,title:"Quote Follow-up - Tea by Tina",start:new Date(2015,3,13,15,30,0),end:new Date(2015,3,13,16,0,0)},{id:12,title:"Late Night Event",start:new Date(2015,3,17,19,30,0),end:new Date(2015,3,18,2,0,0)},{id:12.5,title:"Late Same Night Event",start:new Date(2015,3,17,19,30,0),end:new Date(2015,3,17,23,30,0)},{id:13,title:"Multi-day Event",start:new Date(2015,3,20,19,30,0),end:new Date(2015,3,22,2,0,0)},{id:14,title:"Today",start:new Date((new Date).setHours((new Date).getHours()-3)),end:new Date((new Date).setHours((new Date).getHours()+3))},{id:15,title:"Point in Time Event",start:now,end:now},{id:16,title:"Video Record",start:new Date(2015,3,14,15,30,0),end:new Date(2015,3,14,19,0,0)},{id:17,title:"Dutch Song Producing",start:new Date(2015,3,14,16,30,0),end:new Date(2015,3,14,20,0,0)},{id:18,title:"Itaewon Meeting",start:new Date(2015,3,14,16,30,0),end:new Date(2015,3,14,17,30,0)},{id:19,title:"Online Coding Test",start:new Date(2015,3,14,17,30,0),end:new Date(2015,3,14,20,30,0)},{id:20,title:"An overlapped Event",start:new Date(2015,3,14,17,0,0),end:new Date(2015,3,14,18,30,0)},{id:21,title:"Phone Interview",start:new Date(2015,3,14,17,0,0),end:new Date(2015,3,14,18,30,0)},{id:22,title:"Cooking Class",start:new Date(2015,3,14,17,30,0),end:new Date(2015,3,14,19,0,0)},{id:23,title:"Go to the gym",start:new Date(2015,3,14,18,30,0),end:new Date(2015,3,14,20,0,0)},{id:24,title:"DST ends on this day (Europe)",start:new Date(2022,9,30,0,0,0),end:new Date(2022,9,30,4,30,0)},{id:25,title:"DST ends on this day (America)",start:new Date(2022,10,6,0,0,0),end:new Date(2022,10,6,4,30,0)},{id:26,title:"DST starts on this day (America)",start:new Date(2023,2,12,0,0,0),end:new Date(2023,2,12,4,30,0)},{id:27,title:"DST starts on this day (Europe)",start:new Date(2023,2,26,0,0,0),end:new Date(2023,2,26,4,30,0)}]},"./stories/resources/resourceEvents.js":function(__unused_webpack_module,__webpack_exports__){"use strict";__webpack_exports__.A={events:[{title:"Rencontre",resourceId:"a",start:new Date(2015,3,2,5,30,0,0),end:new Date(2015,3,2,10,30,0,0)},{title:"Another Meeting",resourceId:"b",start:new Date(2015,3,1,2,30,0,0),end:new Date(2015,3,1,4,30,0,0)},{title:"A",resourceId:"a",start:new Date(2015,3,4,5,30,0,0),end:new Date(2015,3,4,10,30,0,0)},{title:"B",resourceId:"b",start:new Date(2015,3,4,5,30,0,0),end:new Date(2015,3,4,10,30,0,0)},{title:"C",resourceId:"c",start:new Date(2015,3,4,5,30,0,0),end:new Date(2015,3,4,10,30,0,0)}],list:[{id:"a",title:"Room A"},{id:"b",title:"Room B"},{id:"c",title:"Room C"}]}},"./storybook-init-framework-entry.js":function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},"./stories/AboutBigCalendar.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_demos_exampleCode_basic_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./stories/demos/exampleCode/basic.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"About Big Calendar",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"big-calendar"},"Big Calendar"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_demos_exampleCode_basic_js__WEBPACK_IMPORTED_MODULE_6__.A,{showDemoLink:!1,style:{marginBottom:15},mdxType:"Basic"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h2",{id:"introduction"},"Introduction"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Big Calendar is a full featured Calendar component for managing events and dates. It uses modern ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"flexbox")," for layout, making it super responsive and performant. Leaving most of the layout heavy lifting to the browser."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Here you will find all of the documentation you need for implementing Big Calendar. We explain the basics of implementation, give you clear details and examples of the various props needed, and try to answer your questions on how you can use Big Calendar to implement custom scheduling solutions."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h2",{id:"getting-started"},"Getting Started"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"You can install Big Calendar via ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://yarnpkg.com/en/",target:"_blank",rel:"nofollow noopener noreferrer"},"yarn")," or ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://www.npmjs.com/",target:"_blank",rel:"nofollow noopener noreferrer"},"npm"),":"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"yarn:")," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"yarn add react-big-calendar")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"npm:")," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"npm install --save react-big-calendar")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"Note"),": Requires Node >= 18"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"When you include Big Calendar in your interface, you will need the core styles. We provide a precompiled style sheet (",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"react-big-calendar/lib/css/react-big-calendar.css"),") for you, or you can directly import the SASS into your implementation. For more information on this, see the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"guides-custom-styling",mdxType:"LinkTo"},"Custom Styling")," guide for more details."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Also make sure that your calendar's container element has a height, or the calendar won't be visible (see why below)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Date internationalization and localization is ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"hard")," and Big Calendar doesn't even attempt to\nsolve that problem. Instead you can use one of the many excellent solutions already\nout there, via adapters called ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"localizers"),". Big Calendar comes with three localizers for use\nwith ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://github.com/jquery/globalize",target:"_blank",rel:"nofollow noopener noreferrer"},"Globalize.js"),", ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"http://momentjs.com/",target:"_blank",rel:"nofollow noopener noreferrer"},"Moment.js")," or ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://moment.github.io/luxon",target:"_blank",rel:"nofollow noopener noreferrer"},"Luxon"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Choose the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"localizer")," that best suits your needs, or write your own. Whatever you do, you'll need to set it up before you can use the calendar (you only need to set it up once)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-jsx"},'import { Calendar, momentLocalizer } from \'react-big-calendar\'\nimport moment from \'moment\'\n\n// Setup the localizer by providing the moment (or globalize, or Luxon) Object\n// to the correct localizer.\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\n\nconst MyCalendar = (props) => (\n  <div className="myCustomHeight">\n    <Calendar\n      localizer={localizer}\n      events={myEventsList}\n      startAccessor="start"\n      endAccessor="end"\n    />\n  </div>\n)\n')),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Once you've configured a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"localizer"),", the Calendar is ready to accept ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"dateFormat")," props. These props determine how dates will be displayed throughout the component and are specific to the localizer of your choice. For instance if you are using the Moment localizer, then any ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"http://momentjs.com/docs/#/displaying/format/",target:"_blank",rel:"nofollow noopener noreferrer"},"Moment format pattern")," is valid!"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"One thing to note is that, Big Calendar treats event start/end dates as an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"exclusive")," range which means that the event spans up to, but not including, the end date. In the case of displaying events on whole days, end dates are rounded ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"up")," to the next day. So an event ending on ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Apr 8th 12:00:00 am")," will not appear on the 8th, whereas one ending\non ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Apr 8th 12:01:00 am")," will. If you want ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"inclusive")," ranges consider providing a function ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"end-accessor",mdxType:"LinkTo"},"endAccessor")," that returns the end date + 1 day for those events that end at midnight."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h2",{id:"next-steps"},"Next Steps"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"We have provided a number of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"about-our-examples",mdxType:"LinkTo"},"Examples")," within this documentation, including individual examples of each and every ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props-full-prop-list",mdxType:"LinkTo"},"prop"),", as well as the Drag and Drop ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-introduction",mdxType:"LinkTo"},"Addon"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The documentation 'Canvas' tab, at the top of the page, will show you the component example for that specific piece of documentation. While in the 'Canvas' you may also have interactive controls in the 'Controls' panel, allowing you to play with a prop's different values."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The 'Docs' tab will contain additional information, special case scenarios, and the rendered example. Most of these examples contain a 'Show code' button (bottom right), or even a special link at the top to 'View Example Source Code'."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h2",{id:"join-the-community"},"Join the Community"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Help us improve Big Calendar! Join us on ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://join.slack.com/t/bigcalendar/shared_invite/zt-1ml1j99af-qIvqOfosMog1W7WxM0~j2Q",target:"_blank",rel:"nofollow noopener noreferrer"},"Slack"),"."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"About Big Calendar",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/AboutExamples.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"About Our Examples",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"about-our-examples"},"About Our Examples"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"We have attempted to provide best practice code examples for using Big Calendar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Big Calendar is... well, "big". It has dozens of props, and can be configured in a lot of different ways to meet a wide number of use cases. It also has quite a number of subcomponents, and provides the ability to override most all of them.'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Because of this, it's important to think about how you initialize your properties as you pass them to Big Calendar. Let's look at a small example:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// don't do this\n<Calendar defaultDate={new Date(2015, 3, 13)} {...otherProps} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// do this\nconst {defaultDate} = useMemo(() => ({\n  defaultDate: new Date(2015, 3, 13)\n}), [])\n//...\n<Calendar defaultDate={defaultDate} {...otherProps} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Instantiating a new JS ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Date")," creates a new object. React will see this 'new' prop and re-render every subcomponent that relies upon ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"defaultDate"),", even if (technically) it did not change."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// don't do this\n<Calendar onView={(newView) => setView(newView)} {...otherProps} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// and don't do this\nconst onView = (newView) => setView(newView)\n<Calendar onView={onView} {...otherProps} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// do this\nconst onView = useCallback((newView) => setView(newView), [setView])\n<Calendar onView={onView} {...otherProps} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"If a prop takes an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Object"),", an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Array"),", a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Date"),", a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Function"),", or any other non-simple variable type, it is always a good idea to memoize those values prior to passing them as props. Chances are that some prop or state change will trigger a re-render of your Calendar. How well you manage your props will affect overall render performance."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"About Our Examples",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/addons/addOns.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Addons/Introduction",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"addons"},"Addons"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'An "Addon" is some bit of code to enhance and expand the functionality of Big Calendar. These are typically provided by someone within the Big Calendar developer community.'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"In this section we document those Addons that we have included directly in the Big Calendar codebase. If you have additional Add-ons that you have created for Big Calendar please let us know and we may link it here in the documentation."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-introduction",mdxType:"LinkTo"},"Drag and Drop"))))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Addons/Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/addons/dragAndDrop/Introduction.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Addons/Drag and Drop/Introduction",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"drag-and-drop"},"Drag and Drop"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Creates a higher-order component (HOC) supporting drag & drop for moving and/or resizing of events:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"import { Calendar } from 'react-big-calendar'\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css'\n\nconst DnDCalendar = withDragAndDrop(Calendar)\n\n/* ... */\n\nreturn (\n  <DnDCalendar\n    localizer={myLocalizer}\n    events={events}\n    draggableAccessor={(event) => true}\n  />\n)\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Set ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"resizable",mdxType:"LinkTo"},"resizable")," to false in your calendar if you don't want events to be resizable.\n",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"resizable")," is set to true by default."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The HOC adds ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-event-drop",mdxType:"LinkTo"},"onEventDrop"),", ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-event-resize",mdxType:"LinkTo"},"onEventResize"),", and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drag-start",mdxType:"LinkTo"},"onDragStart")," callback properties if the events are\nmoved or resized. These callbacks are called with these signatures:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"function onEventDrop({event, start, end, allDay}) {...}\nfunction onEventResize({event, start, end, allDay}) {...}\nfunction onDragStart({event}) {...}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Moving and resizing of events has some subtlety which one should be aware of:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",{parentName:"li"},'In some situations, non-allDay events are displayed in "row" format where they\nare rendered horizontally. This is the case for ALL events in a month view. It\nis also occurs with multi-day events in a day or week view (unless ',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"show-multi-day-times",mdxType:"LinkTo"},"showMultiDayTimes"),"\nis set).")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",{parentName:"li"},"When dropping or resizing non-allDay events into a the header area or when\nresizing them horizontally because they are displayed in row format, their\ntimes are preserved, only their date is changed.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",{parentName:"li"},"If you care about these corner cases, you can examine the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"allDay")," param supplied\nin the callback to determine how the user dropped or resized the event."))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Additionally, this HOC adds the callback props ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drop-from-outside",mdxType:"LinkTo"},"onDropFromOutside")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drag-over",mdxType:"LinkTo"},"onDragOver"),":"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",{parentName:"li"},"By default, the calendar will not respond to outside draggable items being dropped\nonto it. However, if ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drop-from-outside",mdxType:"LinkTo"},"onDropFromOutside")," callback is passed, then when draggable\nDOM elements are dropped on the calendar, the callback will fire, receiving an\nobject with start and end times, and an allDay boolean.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",{parentName:"li"},"If ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drop-from-outside",mdxType:"LinkTo"},"onDropFromOutside")," is passed, but ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drag-over",mdxType:"LinkTo"},"onDragOver")," is not, any draggable event will be\ndroppable onto the calendar by default. On the other hand, if an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDragOver")," callback\n",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"is")," passed, then it can discriminate as to whether a draggable item is droppable on the\ncalendar. To designate a draggable item as droppable, call ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"event.preventDefault"),"\ninside ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDragOver"),". If ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"event.preventDefault")," is not called in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDragOver"),"\ncallback, then the draggable item will not be droppable on the calendar."))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"function onDropFromOutside({ start, end, allDay }) {...}\nfunction onDragOver(DragEvent: SyntheticEvent) {...}\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Addons/Drag and Drop/Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/addons/dragAndDrop/props/API.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Addons/Drag and Drop/props/Full Prop List",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"all-drag-and-drops-props"},"All Drag and Drops Props"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"oneventdrop"},"onEventDrop"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function ({ event, start, end, allDay }) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-event-drop",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A callback fired when user drops an item from one slot to another from within the Calendar. Developers will typically use this method to update an item's ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"start")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"end")," in ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"ondragstart"},"onDragStart"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function ({ event, action, direction }) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drag-start",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A callback fired when user begins to drag an event."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"ondropfromoutside"},"onDropFromOutside"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function ({ start, end, allDay }) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drop-from-outside",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A callback fired when user drops an item onto the Calendar from outside of the Calendar. Developers will typically use this method to add new items to the Calendar's ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Important:")," The callback does ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"not")," receive the element being dropped. It only receives the details of the slot an element was dropped on."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"dragfromoutsideitem"},"dragFromOutsideItem"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function () => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"drag-from-outside-item",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A callback to get a temporary ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"event")," to display in a slot in the process of dragging from outside. This is not required for Drag and Drop to function, but provides a nice visual cue to the user when dragging in an item from outside of the Calendar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Tip: Toggle the checkbox, in the example, and drag an outside item in. Do this from both checkbox states to see the difference in effect."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"ondragover"},"onDragOver"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (dragEvent: SyntheticEvent) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drag-over",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"If an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDragOver")," callback ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"is")," passed, then it can discriminate as to whether a draggable item is droppable on the calendar. To designate a draggable item as droppable, call ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"event.preventDefault")," inside ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDragOver"),". If ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"event.preventDefault")," is not called in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDragOver")," callback, then the draggable item will not be droppable on the calendar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"draggableaccessor"},"draggableAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string|function (event) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"() => true")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"When used, can determine whether an 'event' is draggable"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"resizable"},"resizable"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"true")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"resizable",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines if events may be resized on the Calendar. Used in conjunction with ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-event-resize",mdxType:"LinkTo"},"onEventResize"),". When used with the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"resizable-accessor",mdxType:"LinkTo"},"resizableAccessor")," the developer has even greater control."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"resizable")," events must also be draggable. You cannot resize an event with a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"draggableAccessor")," prop of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"false"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"oneventresize"},"onEventResize"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function ({ event, start, end }) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-event-resize",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A callback fired when user resizes an event. Developers will typically use this method to update an item's ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"start")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"end")," in ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"resizable",mdxType:"LinkTo"},"resizable")," prop must be ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"true")," (the default) to use the method."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"resizable")," events must also be draggable. You cannot resize an event with a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"draggableAccessor")," prop of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"false"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"resizableaccessor"},"resizableAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string|function (event) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"() => true")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"resizable-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines if an event is resizable."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"resizable")," events must also be draggable. You cannot resize an event with a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"draggableAccessor")," prop of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"false"),"."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Addons/Drag and Drop/props/Full Prop List",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/demos/dragAndDrop.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Examples/Drag and Drop",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"drag-and-drop"},"Drag and Drop"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-introduction",mdxType:"LinkTo"},"Drag and Drop Examples")," have been moved into the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-introduction",mdxType:"LinkTo"},"AddOns")," section of the documentation"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Examples/Drag and Drop",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/guides/CustomStyling.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Guides/Custom Styling",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"custom-styling"},"Custom Styling"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Out of the box, you can include the compiled CSS files and be up and running. But, sometimes, you may want to style Big Calendar to match your application styling. For this reason, SASS files are included with Big Calendar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-sass"},"@import 'react-big-calendar/lib/sass/styles';\n@import 'react-big-calendar/lib/addons/dragAndDrop/styles'; // if using DnD\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"SASS implementation provides a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"variables")," file containing color and sizing variables that you can update to fit your application. Note: Changing and/or overriding styles can cause rendering issues with your Big Calendar. Carefully test each change accordingly."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Guides/Custom Styling",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/guides/CustomView.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Guides/Creating Custom Views",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"creating-a-custom-view"},"Creating A Custom View"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"It is possible to override an existing Calendar ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view"),", or even create a new ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")," all together, by adhering to a specific interface."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"examples",story:"example-9",mdxType:"LinkTo"},"View An Example"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"First build your custom ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")," component. This could be based off an existing component, or something completely custom."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"import React, {useMemo} from 'react'\nimport PropTypes from 'prop-types'\nimport { Navigate } from 'react-big-calendar'\nimport TimeGrid from 'react-big-calendar/lib/TimeGrid'\n\nexport default function CustomWeekView({\n  date,\n  localizer,\n  max = localizer.endOf(new Date(), 'day'),\n  min = localizer.startOf(new Date(), 'day'),\n  scrollToTime = localizer.startOf(new Date(), 'day'),\n  ...props\n}) {\n  const currRange = useMemo(\n    () => CustomWeekView.range(date, { localizer }),\n    [date, localizer]\n  )\n\n  return (\n    <TimeGrid\n      date={date}\n      eventOffset={15}\n      localizer={localizer}\n      max={max}\n      min={min}\n      range={currRange}\n      scrollToTime={scrollToTime}\n      {...props}\n    />\n  )\n}\n\nCustomWeekView.propTypes = {\n  date: PropTypes.instanceOf(Date).isRequired,\n  localizer: PropTypes.object,\n  max: PropTypes.instanceOf(Date),\n  min: PropTypes.instanceOf(Date),\n  scrollToTime: PropTypes.instanceOf(Date),\n}\n\nCustomWeekView.range = (date, { localizer }) => {\n  const start = date\n  const end = localizer.add(start, 2, 'day')\n\n  let current = start\n  const range = []\n\n  while (localizer.lte(current, end, 'day')) {\n    range.push(current)\n    current = localizer.add(current, 1, 'day')\n  }\n\n  return range\n}\n\nCustomWeekView.navigate = (date, action, { localizer }) => {\n  switch (action) {\n    case Navigate.PREVIOUS:\n      return localizer.add(date, -3, 'day')\n\n    case Navigate.NEXT:\n      return localizer.add(date, 3, 'day')\n\n    default:\n      return date\n  }\n}\n\nCustomWeekView.title = (date, { localizer }) => {\n  const [start, ...rest] = CustomWeekView.range(date, { localizer })\n  return localizer.format({ start, end: rest.pop() }, 'dayRangeHeaderFormat')\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Pay special attention to the additional static methods attached to your component. As static methods, they have no concept of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"this"),", and have specific arguments that will be passed into them."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"interface View {\n  static title(date: Date, { formats: DateFormat[], culture: string?, ...props }): string\n  static navigate(date: Date, action: 'PREV' | 'NEXT' | 'DATE'): Date\n  static range?(date: Date, { localizer: DateLocalizer, ...props }): array\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"To implement your custom ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view"),", include it in your ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"views",mdxType:"LinkTo"},"views")," prop."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"import CustomWeekView from './CustomWeekView'\n//...\nconst {views, ...otherProps} = useMemo(() => ({\n  views: {\n    month: true,\n    week: CustomWeekView,\n    day: true\n  },\n  // ... other props\n}), [])\n//...\n<Calendar views={views} {...otherProps} />\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Guides/Creating Custom Views",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/guides/Dates.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Guides/Understanding Dates",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"understanding-dates"},"Understanding Dates"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Big Calendar is all about dates and times. Probably one of the easiest things that beginners miss, when first implementing Big Calendar, is that we ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"require")," true JS ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",target:"_blank",rel:"nofollow noopener noreferrer"},"Date")," objects in our ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"Full Prop List",mdxType:"LinkTo"},"props")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"event")," definitions."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"It is ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"up to the developer")," to handle translating date/time values ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"to and from JS ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"strong"},"Date")," format"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"What does this mean?"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// will cause errors\nconst defaultDate = useMemo(() => '2015-04-12T13:45:00-05:00', [])\n\n// will work as expected\nconst defaultDate = useMemo(() => new Date('2015-04-12T13:45:00-05:00'), [])\n\n// will never display in the Calendar\nconst events = [\n  {\n    title: 'My Event'\n    start: '2015-04-12T13:45:00-05:00',\n    end: '2015-04-12T14:00:00-05:00'\n  }\n]\n\n// what you must have is this\nconst events = [\n  {\n    title: 'My Event'\n    start: new Date('2015-04-12T13:45:00-05:00'),\n    end: new Date('2015-04-12T14:00:00-05:00')\n  }\n]\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The other thing to remember is that the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Date"),"s you provide to the Calendar will, by default, be displayed in the browser's native local timezone and culture, regardless of any offsets. This is how JS ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Date"),"s work in browsers today. If you need to display dates and times in a specific timezone, other than the browser native, then you should review our ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"guides-timezones",mdxType:"LinkTo"},"Timezones Guide")," on using a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localiizer",mdxType:"LinkTo"},"localizer")," that supports timezone conversions."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Side Note:")," Storing your date/time values in UTC (Zulu) date format (YYYY-MM-DDTHH:mm:ssZ) will make these types of transformations much easier to work with."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Guides/Understanding Dates",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/guides/Timezones.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Guides/Timezones",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"dealing-with-time-zones"},"Dealing With Time Zones"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Time Zones are... ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"hard"),", and while changing the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"culture")," will help with internationalization and localization, it does not adjust the dates for a specific time zone. Javascript Date objects don't really support time zone switching natively, and date math gets ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"very")," complicated. Thankfully Big Calendar does support ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"moment")," as a localizer, so if you use ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://momentjs.com/timezone/",target:"_blank",rel:"nofollow noopener noreferrer"},"moment-timezone")," you can get your events to display relevant to a time zone other than the browser native."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"To change your events to display as a specific time zone, you must ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://momentjs.com/timezone/docs/#/using-timezones/default-timezone/",target:"_blank",rel:"nofollow noopener noreferrer"},"change moment's default timezone")," for all dates, ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"using an IANA time zone"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-jsx"},"import { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'moment-timezone' // or 'moment-timezone/builds/moment-timezone-with-data[-datarange].js'. See their docs\n\n// Set the IANA time zone you want to use\nmoment.tz.setDefault('Europe/Paris')\n\n// Setup the localizer by providing the moment Object\n// to the correct localizer.\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\n\nconst MyCalendar = (props) => (\n  <div className=\"myCustomHeight\">\n    <Calendar\n      localizer={localizer}\n      events={myEventsList}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n    />\n  </div>\n)\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"momentLocalizer")," will now handle all dates and date math as if the date is in the timezone you specified. It is important to note that ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://momentjs.com/timezone/docs/#/using-timezones/default-timezone/",target:"_blank",rel:"nofollow noopener noreferrer"},"changing moment's default timezone")," affects all dates, created by moment, from that point forward, so you may want to reset the default when your component unmounts. And, if switching timezones 'on-the-fly', you want to update your ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer")," and any Date based props (min, max, getNow, etc) at the same time."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"luxonLocalizer")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"dayjsLocalizer")," operate in a similar fashion. View their respective demos and source for examples of their usage."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Guides/Timezones",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/guides/localizer.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Guides/Localizers",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"what-is-a-localizer"},"What is a Localizer?"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"You have probably noticed that your Big Calendar implementations require a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"localizer")," prop. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer")," is needed for applying formatting and culture (i18n) to your date displays throughout the Calendar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Now the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer")," also handles all internal date math, utilizing the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer")," you provide. This is how the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://momentjs.com/",target:"_blank",rel:"nofollow noopener noreferrer"},"moment")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://moment.github.io/luxon/#/",target:"_blank",rel:"nofollow noopener noreferrer"},"Luxon")," localizers handle timezones, and how all of them handle things like Daylight Savings Time. Most components receive the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer")," as a prop, meaning that your override components can also take advantage of these features.\nEach ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer"),", when created, creates an instance of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"DateLocalizer")," class, and each one has a normalized group of functions and props available for manipulating dates."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"add(date:Date, adder:number, unit:string) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"ceil(date:Date, unit:string) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"continuesAfter(start:Date, end:Date, last:Date) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"continuesPrior(start:Date, first:Date) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"diff(a:Date, b:Date, unit:string) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"endOf(date:Date, unit:string) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"eq(a:Date, b:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"firstVisibleDay(date:Date) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"format(value:Date, format:string) => string"),","),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"formats:object")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"getDstOffset(start:Date, end:Date) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"getMinutesFromMidnight(start:Date) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"getSlotDate(dt:Date, minutesFromMidnight:number, offset:number) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"getTimezoneOffset(date:Date) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"getTotalMin(start:Date, end:Date) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"gt(a:Date, b:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"gte(a:Date, b:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"inEventRange({event: {start:Date, end:Date}, range: {start:Date, end:Date}}) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"inRange(day:Date, start:Date, end:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"isSameDate(date1:Date, date2:Date) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"lastVisibleDay(date:Date) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"lt(a:Date, b:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"lte(a:Date, b:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"max(dateA:Date, dateB:Date) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"merge(date:Date, time:Date) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"min(dateA:Date, dateB:Date) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"minutes(date:Date) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"neq(a:Date, b:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"range(start:Date, end:Date, unit:string) => Array[Date]")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"sortEvents({evtA: {start:Date, end:Date, allDay:boolean}, evtB: {start:Date, end:Date, allDay:boolean}}) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"startAndEndAreDateOnly(start:Date, end:Date) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"startOf(date:Date, unit:string) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"startOfWeek(culture) => number")," (alias of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"firstOfWeek()"),")"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"visibleDays(date:Date) => Array[Date]"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Many of these methods are used by Big Calendar in the background for determining layout. You can create your own custom ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer"),", to utilize some other library, as long as they implement these methods. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"DateLocalizer")," class defaults these methods to methods from the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://www.npmjs.com/package/date-arithmetic",target:"_blank",rel:"nofollow noopener noreferrer"},"date-arithmetic")," package."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"For examples of building your own custom ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer")," take a look at the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://github.com/jquense/react-big-calendar/blob/master/src/localizers",target:"_blank",rel:"nofollow noopener noreferrer"},"currently implemented localizers"),". If you do build your own ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer"),", please consider publishing it to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://npmjs.org",target:"_blank",rel:"nofollow noopener noreferrer"},"npm"),". We suggest a common naming convention like ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"rbc-addon-mylocalizername"),"."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Guides/Localizers",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/props/API.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"props/Full Prop List",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"all-props"},"All Props"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"localizer"},"localizer"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"instanceOf(DateLocalizer)")," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"li"},"required")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The localizer used for formatting dates and times according to the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"format")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"culture")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// When using `Globalize`\nimport { globalizeLocalizer } from 'react-big-calendar'\nimport globalize from 'globalize'\n\nconst localizer = globalizeLocalizer(globalize)\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// When using `moment`\nimport { momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n// and, for optional time zone support\nimport 'moment-timezone'\n\nmoment.tz.setDefault('America/Los_Angeles')\n// end optional time zone support\n\nconst localizer = momentLocalizer(moment)\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// When using `Luxon`\nimport { luxonLocalizer } from 'react-big-calendar'\nimport { DateTime, Settings } from 'luxon'\n// only use `Settings` if you require optional time zone support\nSettings.defaultZone = 'America/Los_Angeles'\n// end optional time zone support\n\n// Luxon uses the Intl API, which currently does not contain `weekInfo`\n// to determine which weekday is the start of the week by `culture`.\n// The `luxonLocalizer` defaults this to Sunday, which differs from\n// the Luxon default of Monday. The localizer requires this option\n// to change the display, and the date math for determining the\n// start of a week. Luxon uses non-zero based values for `weekday`.\nconst localizer = luxonLocalizer(DateTime, { firstDayOfWeek: 7 })\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"elementprops"},"elementProps"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"object")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"element-props",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Props passed to main calendar ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"<div>"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," Will not pass down ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"className"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"getnow"},"getNow"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function () => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"() => new Date()")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"get-now",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines the current date/time which is highlighted in the views."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The value affects which day is shaded and which time is shown as the current time. It also affects the date used by the Today button in the toolbar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Providing a value here can be useful when you are implementing time zones using the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"start-accessor",mdxType:"LinkTo"},"startAccessor")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"end-accessor",mdxType:"LinkTo"},"endAccessor")," properties."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"defaultdate"},"defaultDate"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"new Date()")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"default-date",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Sets the initial ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"date")," value in your calendar when you don't want it to be 'today', when not using ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"get-now",mdxType:"LinkTo"},"getNow"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"date"},"date"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"new Date()")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"controlled by: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-navigate",mdxType:"LinkTo"},"onNavigate")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"date",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The current date value of the calendar. Determines the visible view range.\nIf ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"date")," is omitted then the result of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"get-now",mdxType:"LinkTo"},"getNow")," is used; otherwise the\ncurrent date is used."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"This is a controllable prop, when using ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-navigate",mdxType:"LinkTo"},"onNavigate")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onnavigate"},"onNavigate"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"controls: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"date",mdxType:"LinkTo"},"date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"example: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"(newDate) => setDate(newDate)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-navigate",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"date")," value changes. When included it is used to 'control' the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"date",mdxType:"LinkTo"},"date")," prop value."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"defaultview"},"defaultView"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Views.MONTH (month|week|work_week|day|agenda)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"default-view",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The initial ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")," set for your calendar when you don't want it to be the default ('month')."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"view"},"view"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Views.MONTH (month|week|work_week|day|agenda)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"controlled by: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-view",mdxType:"LinkTo"},"onView")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"view",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The current view value of the calendar. Determines the visible 'view'.\nIf ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")," is omitted then it is defaulted to 'month'."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"This is a controllable prop, when using ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-view",mdxType:"LinkTo"},"onView")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onview"},"onView"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: 'function'"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"controls: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"view",mdxType:"LinkTo"},"view")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"example: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"(newView) => setView(newView)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-view",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")," value changes. When included it is used to 'control' the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"view",mdxType:"LinkTo"},"view")," prop value."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"events"},"events"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"arrayOf(Event)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"[]")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"events",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"An array of event objects to display on the calendar. Event objects can be any shape, as long as the Calendar knows how to retrieve the following details of the event:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"start time"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"end time"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"title"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},'whether its an "all day" event or not'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"any resource the event may be related to")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Each of these properties can be customized or generated dynamically by setting the various "accessor" props. Without any configuration the default event should look like:'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"Event {\n  title: string,\n  start: Date,\n  end: Date,\n  allDay?: boolean\n  resource?: any,\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"backgroundevents"},"backgroundEvents"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"arrayOf(BackgroundEvent)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"[]")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"background-events",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"An array of background event objects to display on the calendar. Background Events behave similarly to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events")," but are not factored into Event overlap logic, allowing them to sit behind any Events that may occur during the same period. Background Events objects can be any shape, as long as the Calendar knows how to retrieve the following details of the event:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"start time"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"end time")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Each of these properties can be customized or generated dynamically by setting the various "accessor" props. Without any configuration the default event should look like:'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"BackgroundEvent {\n  start: Date,\n  end: Date,\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"titleaccessor"},"titleAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: 'title'"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"title-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Accessor for the event title, used to display event information. Should resolve to a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"renderable")," value."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"tooltipaccessor"},"tooltipAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: 'title'"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"tooltip-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Accessor for the event tooltip, used to display event information. Should resolve to a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"renderable")," value. Removes the tooltip if null."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"startaccessor"},"startAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: 'start'"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"start-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The start date/time of the event. Must resolve to a JavaScript ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Date")," object."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"endaccessor"},"endAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: 'end'"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"end-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The end date/time of the event. Must resolve to a JavaScript ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Date")," object."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"alldayaccessor"},"allDayAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: 'allDay'"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"all-day-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Determines whether the event should be considered an "all day" event and ignore time. Must resolve to a ',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"boolean")," value."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"alldaymaxrows"},"allDayMaxRows"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Infinity")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"all-day-max-rows",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines a maximum amount of rows of events to display in the all day section for Week and Day views, will display ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"showMore")," button if events excede this number."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"resources"},"resources"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"arrayOf(Resource)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"resources",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"An array of resource objects that map events to a specific resource. Resource objects, like events, can be any shape or have any properties, but should be uniquly identifiable via the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"resource-id-accessor",mdxType:"LinkTo"},"resourceIdAccessor"),', as well as a "title" or name as provided by the ',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"resource-title-accessor",mdxType:"LinkTo"},"resourceTitleAccessor")," prop."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"Resource {\n  id: string | number, // must be unique\n  title: string\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"resourceidaccessor"},"resourceIdAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (resource: Object) => string | number // must be unique")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"resource-id-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Provides a unique identifier, or an array of unique identifiers, for each resource in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"resources",mdxType:"LinkTo"},"resources")," array"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"resourcetitleaccessor"},"resourceTitleAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (resource: Object) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"resource-title-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Provides a human readable name for the resource object, used in headers."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"ondrilldown"},"onDrillDown"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date) => // do something")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-drill-down",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when date header, or the truncated events links are clicked. When included, it will override the default drilldown behavior."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onrangechange"},"onRangeChange"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (range: Array [1|7] | Object {start: Date, end: Date}) => // do something")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-range-change",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when the visible date range changes. Returns an Array of dates or an object with start and end dates for BUILTIN views."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Custom views may return something different."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"Note:")," This method is not fired on initial render. Only as the user navigates through Big Calendar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"selectable"},"selectable"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean | 'ignoreEvents'")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Allows mouse selection of ranges of dates/times."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The 'ignoreEvents' option prevents selection code from running when a drag begins over an event. Useful when you want custom event click or drag logic."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"Things To Know:")," When you 'doubleClick', both 'click' and 'doubleClick' will fire. Click on the 'showCode' button, at the bottom of the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-select-slot",mdxType:"LinkTo"},"example"),", to see how you can get around this issue."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h2",{id:"onselectslot"},"onSelectSlot"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (Object: slotInfo) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"requires: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-select-slot",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A callback fired when a date selection is made. Only fires when ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," is true."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"Things To Know:")," When you 'doubleClick', both 'click' and 'doubleClick' will fire. Click on the 'showCode' button, at the bottom of the example below, to see how you can get around this issue."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},";(slotInfo: {\n  start: Date,\n  end: Date,\n  slots: Array<Date>,\n  action: 'select' | 'click' | 'doubleClick',\n  bounds: ?{\n    // For \"select\" action\n    x: number,\n    y: number,\n    top: number,\n    right: number,\n    left: number,\n    bottom: number,\n  },\n  box: ?{\n    // For \"click\" or \"doubleClick\" actions\n    clientX: number,\n    clientY: number,\n    x: number,\n    y: number,\n  },\n}) => any\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h4",{id:"whats-the-difference-from-onselecting"},"What's The Difference from onSelecting?"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"How is this different from ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-selecting",mdxType:"LinkTo"},"onSelecting"),"? That is a very good question. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelecting")," method is only available in the Time views (",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"week"),", ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"work week"),", ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"day"),"), whereas ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," is also available in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"month")," view. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelecting")," method allows you to 'cancel' your selection by returning ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"false"),". The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," method returns a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"slotInfo")," object, containing a lot of additional information about your selection."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onselectevent"},"onSelectEvent"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (event: Object) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-select-event",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when a calendar event is selected (i.e.: an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onClick")," handler)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," prop is ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"not")," required for this prop to function."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Important:")," The event passed into the function is the Calendar Event, not the SyntheticEvent expected by most click handlers."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"ondoubleclickevent"},"onDoubleClickEvent"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (event: Object) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-double-click-event",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when a calendar event is clicked twice. (i.e.: an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDoubleClick")," handler)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," prop is ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"not")," required for this prop to function."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Important:")," The event passed into the function is the Calendar Event, not the SyntheticEvent expected by most click handlers."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onselecting"},"onSelecting"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"(range: Object { start: Date, end: Date, resourceId: null|string|number }) => ?boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"requires: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-selecting",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when dragging a selection in the Time views. Only fires when ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," is true."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Returning ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"false")," from the handler will prevent a selection."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h4",{id:"whats-the-difference-from-onselectslot"},"What's The Difference from onSelectSlot?"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"How is this different from ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-select-slot",mdxType:"LinkTo"},"onSelectSlot"),"? That is a very good question. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelecting")," method is only available in the Time views (",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"week"),", ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"work week"),", ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"day"),"), whereas ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," is also available in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"month")," view. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelecting")," method allows you to 'cancel' your selection by returning ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"false"),". The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," method returns a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"slotInfo")," object, containing a lot of additional information about your selection."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onshowmore"},"onShowMore"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (events: Array[event: Object], date: Date) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-show-more",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when a +{count} more is clicked. Receives ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"all")," of the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"events")," for the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"date")," on which it was selected."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onkeypressevent"},"onKeyPressEvent"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (event: Object, e: SyntheticEvent) => void")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-key-press-event",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when a focused calendar event receives a key press."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"showallevents"},"showAllEvents"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"false")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"show-all-events",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Displays all events on the month view instead of having some hidden behind +{count} more. This will cause the rows in the month view to be scrollable if the number of events exceed the height of the row."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h4",{id:"selected"},"selected"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Event: Object")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selected",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The selected event, if any. By default, Big Calendar 'controls' the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"selected")," (highlighted) event in the display. You can use this prop to control which event is highlighted. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"selected")," event must be a object reference to the event within the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events")," array."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Often used in conjunction with ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-select-event",mdxType:"LinkTo"},"OnSelectEvent")," and/or ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-double-click-event",mdxType:"LinkTo"},"onDoubleClickEvent"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"views"},"views"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Views ('month'|'week'|'work_week'|'day'|'agenda')")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"[views.MONTH, views.WEEK, views.DAY, views.AGENDA]")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"cal-views",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"An array of built-in view names to allow the calendar to display. accepts either an array of builtin view names,"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"views={['month', 'day', 'agenda']}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"or an object hash of the view name and the component (or boolean for builtin)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"views={{\n  month: true,\n  week: false,\n  myweek: WorkWeekViewComponent,\n}}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Custom views can be any React component, that implements the following interface:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"interface View {\n  static title(date: Date, { formats: DateFormat[], culture: string?, ...props }): string\n  static navigate(date: Date, action: 'PREV' | 'NEXT' | 'DATE'): Date\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"drilldownview"},"drilldownView"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Views.DAY")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"drilldown-view",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The string name of the destination ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")," for drill-down actions, such as clicking a date header, or the truncated events links. If ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"getDrilldownView")," is also specified it will be used instead."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Set to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"null")," to disable drill-down actions."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"getdrilldownview"},"getDrilldownView"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (targetDate: Date, currentViewName: string, configuredViewNames: Views[]) => string|null")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"get-drilldown-view",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Functionally equivalent to drilldownView, but accepts a function that can return a view name. It's useful for customizing the drill-down actions depending on the target date and triggering view."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Return null to disable drill-down actions."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"length"},"length"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"30")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"length",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines the end date from date prop in the agenda view date prop + length (in number of days) = end date."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"toolbar"},"toolbar"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"true")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"toolbar",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines whether the toolbar is displayed"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"popup"},"popup"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"true")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"popup",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Show truncated events in an overlay when you click the "+',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"x"),' more" link.'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"popupoffset"},"popupOffset"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"number|shape {x: number, y: number}")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"popup-offset",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Distance in pixels, from the edges of the viewport, the "show more" overlay should be positioned.'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"longpressthreshold"},"longPressThreshold"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"250")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"long-press-threshold",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Specifies the number of miliseconds the user must press and hold on the screen for a touch to be considered a "long press." Long presses are used for time slot selection on touch devices.'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"step"},"step"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"30")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"step",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines the selectable time increments in week and day views"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"timeslots"},"timeslots"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"timeslots",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'The number of slots per "section" in the time grid views. Adjust with ',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"step",mdxType:"LinkTo"},"step")," to change the default of 1 hour long groups, with 30 minute slots."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"rtl"},"rtl"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"false")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"right-to-left",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Switch the calendar to a right-to-left read direction."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"eventpropgetter"},"eventPropGetter"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (event: Object, start: Date, end: Date, isSelected: boolean) => {className?: string, style?: Object}")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"event-prop-getter",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the the event node."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"slotpropgetter"},"slotPropGetter"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date) => {className?: string, style?: Object}")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-slot-prop-getter",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the the time-slot node."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Caution!")," Styles that change layout or position may break the calendar in unexpected ways."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"slotgrouppropgetter"},"slotGroupPropGetter"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (group: Date[]) => { style?: Object }")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"slot-group-prop-getter",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the time-slot node."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Caution! Styles that change layout or position may break the calendar in unexpected ways.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"daypropgetter"},"dayPropGetter"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date) => {className?: string, style?: Object}")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"day-prop-getter",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the the day background."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Caution!")," Styles that change layout or position may break the calendar in unexpected ways."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"showmultidaytimes"},"showMultiDayTimes"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"false")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"show-multi-day-times",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Support to show multi-day events with specific start and end times in the main time grid (rather than in the all day header)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note: This may cause calendars with several events to look very busy in the week and day views.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"min"},"min"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"new Date(1972, 0, 1, 0, 0, 0)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"min",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Constrains the minimum time of the Day and Week views."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"max"},"max"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"new Date(1972, 0, 1, 23, 59, 59)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"max",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Constrains the maximum time of the Day and Week views."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"scrolltotime"},"scrollToTime"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"new Date()")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"scroll-to-time",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines how far down the scroll pane is initially scrolled down."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"culture"},"culture"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"none (browser default)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"culture",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Specify a specific culture code for the Calendar. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"culture")," is used by ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"formats")," with your ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"localizer")," to 'format' date/time information on the Calendar. To localize messaging, use the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"messages")," prop."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note: it's generally better to handle this globally via your i18n library.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formats"},"formats"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Object")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"Localizer")," specific formats, tell the Calendar how to format and display dates and times.",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"format")," types are dependent on the configured localizer; both Moment and Globalize accept strings of tokens according to their own specification, such as: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"'DD mm yyyy'"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"const formats = useMemo(() => ({\n  dateFormat: 'dd',\n\n  dayFormat: (date, , localizer) =>\n    localizer.format(date, 'DDD', culture),\n\n  dayRangeHeaderFormat: ({ start, end }, culture, localizer) =>\n    localizer.format(start, { date: 'short' }, culture) + ' — ' +\n    localizer.format(end, { date: 'short' }, culture)\n}), [])\n\n<Calendar formats={formats} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsdateformat"},"formats.dateFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-date-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Format for the day of the month heading in the Month view. e.g. "01", "02", "03", etc'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsdayformat"},"formats.dayFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-day-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'A day of the week format for Week and Day headings, e.g. "Wed 01/04"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsweekdayformat"},"formats.weekdayFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-weekday-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Week day name format for the Month week day headings, e.g: "Sun", "Mon", "Tue", etc'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatstimegutterformat"},"formats.timeGutterFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-time-gutter-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'The timestamp cell formats in Week and Time views, e.g. "4:00 AM"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsmonthheaderformat"},"formats.monthHeaderFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-month-header-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Toolbar header format for the Month view, e.g "2015 April"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsdayrangeheaderformat"},"formats.dayRangeHeaderFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-day-range-header-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Toolbar header format for the Week views, e.g. "Mar 29 - Apr 04"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsdayheaderformat"},"formats.dayHeaderFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-day-header-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Toolbar header format for the Day view, e.g. "Wednesday Apr 01"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsagendaheaderformat"},"formats.agendaHeaderFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-agenda-header-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Toolbar header format for the Agenda view, e.g. "4/1/2015 — 5/1/2015"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsselectrangeformat"},"formats.selectRangeFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-select-range-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'A time range format shown in the highlighted area when selecting time slots, e.g "08:00 am — 12:00 pm"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsagendadateformat"},"formats.agendaDateFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-agenda-date-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Dates displayed in the gutter of the Agenda ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsagendatimeformat"},"formats.agendaTimeFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-agenda-time-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Time only (not range) displayed in the gutter of the Agenda ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsagendatimerangeformat"},"formats.agendaTimeRangeFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-agenda-time-range-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Time range displayed in the gutter of the Agenda ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatseventtimerangeformat"},"formats.eventTimeRangeFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-event-time-range-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Time range displayed on events in Time Grid views."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatseventtimerangestartformat"},"formats.eventTimeRangeStartFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-event-time-range-start-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"An optional event time range for events that continue onto another day. Used with ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"show-multi-day-times",mdxType:"LinkTo"},"showMultiDayTimes"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatseventtimerangeendformat"},"formats.eventTimeRangeEndFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-event-time-range-end-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"An optional event time range for events that continue onto another day. Used with ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"show-multi-day-times",mdxType:"LinkTo"},"showMultiDayTimes"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"components"},"components"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"object")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"components",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Customize how different sections of the calendar render by providing custom Components. In particular the Event component can be specified for the entire calendar, or you can provide an individual component for each view type."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"let components = useMemo({\n  event: MyEvent, // used by each view (Month, Day, Week)\n  toolbar: MyToolbar,\n  agenda: {\n       event: MyAgendaEvent // with the agenda view use a different component to render events\n  }\n}, [])\n<Calendar components={components} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"messages"},"messages"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Object")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"messages",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"String messages used throughout the component, override to provide localizations for button text, ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"title")," attributes and more."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"defaults"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"{\n  date: 'Date',\n  time: 'Time',\n  event: 'Event',\n  allDay: 'All Day',\n  week: 'Week',\n  work_week: 'Work Week',\n  day: 'Day',\n  month: 'Month',\n  previous: 'Back',\n  next: 'Next',\n  yesterday: 'Yesterday',\n  tomorrow: 'Tomorrow',\n  today: 'Today',\n  agenda: 'Agenda',\n\n  noEventsInRange: 'There are no events in this range.',\n\n  showMore: total => `+${total} more`,\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"daylayoutalgorithm"},"dayLayoutAlgorithm"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | Function(events, minimumStartDifference, slotMetrics, accessors)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"overlap")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"day-layout-algorithm",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A day event layout(arrangement) algorithm."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"overlap")," allows events to be overlapped."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"no-overlap")," resizes events to avoid overlap."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"or custom ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Function(events, minimumStartDifference, slotMetrics, accessors)")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"props/Full Prop List",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/addons/dragAndDrop/styles.scss":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.id,".rbc-addons-dnd .rbc-addons-dnd-row-body{position:relative}.rbc-addons-dnd .rbc-addons-dnd-drag-row{position:absolute;top:0;left:0;right:0}.rbc-addons-dnd .rbc-addons-dnd-over{background-color:rgba(0,0,0,.3)}.rbc-addons-dnd .rbc-event{transition:opacity 150ms}.rbc-addons-dnd .rbc-event:hover .rbc-addons-dnd-resize-ns-icon,.rbc-addons-dnd .rbc-event:hover .rbc-addons-dnd-resize-ew-icon{display:block}.rbc-addons-dnd .rbc-addons-dnd-dragged-event{opacity:0}.rbc-addons-dnd.rbc-addons-dnd-is-dragging .rbc-event:not(.rbc-addons-dnd-dragged-event):not(.rbc-addons-dnd-drag-preview){opacity:.5}.rbc-addons-dnd .rbc-addons-dnd-resizable{position:relative;width:100%;height:100%}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor{width:100%;text-align:center;position:absolute}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor:first-child{top:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor:last-child{bottom:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor .rbc-addons-dnd-resize-ns-icon{display:none;border-top:3px double;margin:0 auto;width:10px;cursor:ns-resize}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor{position:absolute;top:4px;bottom:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor:first-child{left:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor:last-child{right:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor .rbc-addons-dnd-resize-ew-icon{display:none;border-left:3px double;margin-top:auto;margin-bottom:auto;height:10px;cursor:ew-resize}",""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sass/styles.scss":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.id,'.rbc-btn{color:inherit;font:inherit;margin:0}button.rbc-btn{overflow:visible;text-transform:none;-webkit-appearance:button;cursor:pointer}button[disabled].rbc-btn{cursor:not-allowed}button.rbc-input::-moz-focus-inner{border:0;padding:0}.rbc-calendar{box-sizing:border-box;height:100%;display:flex;flex-direction:column;align-items:stretch}.rbc-m-b-negative-3{margin-bottom:-3px}.rbc-h-full{height:100%}.rbc-calendar *,.rbc-calendar *:before,.rbc-calendar *:after{box-sizing:inherit}.rbc-abs-full,.rbc-row-bg{overflow:hidden;position:absolute;top:0;left:0;right:0;bottom:0}.rbc-ellipsis,.rbc-show-more,.rbc-row-segment .rbc-event-content,.rbc-event-label{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.rbc-rtl{direction:rtl}.rbc-off-range{color:#999}.rbc-off-range-bg{background:#e6e6e6}.rbc-header{overflow:hidden;flex:1 0 0%;text-overflow:ellipsis;white-space:nowrap;padding:0 3px;text-align:center;vertical-align:middle;font-weight:bold;font-size:90%;min-height:0;border-bottom:1px solid #ddd}.rbc-header+.rbc-header{border-left:1px solid #ddd}.rbc-rtl .rbc-header+.rbc-header{border-left-width:0;border-right:1px solid #ddd}.rbc-header>a,.rbc-header>a:active,.rbc-header>a:visited{color:inherit;text-decoration:none}.rbc-button-link{color:inherit;background:none;margin:0;padding:0;border:none;cursor:pointer;user-select:text}.rbc-row-content{position:relative;user-select:none;-webkit-user-select:none;z-index:4}.rbc-row-content-scrollable{display:flex;flex-direction:column;height:100%}.rbc-row-content-scrollable .rbc-row-content-scroll-container{height:100%;overflow-y:scroll;-ms-overflow-style:none;scrollbar-width:none;-ms-overflow-style:none;scrollbar-width:none}.rbc-row-content-scrollable .rbc-row-content-scroll-container::-webkit-scrollbar{display:none}.rbc-today{background-color:#eaf6ff}.rbc-toolbar{display:flex;flex-wrap:wrap;justify-content:center;align-items:center;margin-bottom:10px;font-size:16px}.rbc-toolbar .rbc-toolbar-label{flex-grow:1;padding:0 10px;text-align:center}.rbc-toolbar button{color:#373a3c;display:inline-block;margin:0;text-align:center;vertical-align:middle;background:none;background-image:none;border:1px solid #ccc;padding:.375rem 1rem;border-radius:4px;line-height:normal;white-space:nowrap}.rbc-toolbar button:active,.rbc-toolbar button.rbc-active{background-image:none;box-shadow:inset 0 3px 5px rgba(0,0,0,.125);background-color:#e6e6e6;border-color:#adadad}.rbc-toolbar button:active:hover,.rbc-toolbar button:active:focus,.rbc-toolbar button.rbc-active:hover,.rbc-toolbar button.rbc-active:focus{color:#373a3c;background-color:#d4d4d4;border-color:#8c8c8c}.rbc-toolbar button:focus{color:#373a3c;background-color:#e6e6e6;border-color:#adadad}.rbc-toolbar button:hover{color:#373a3c;background-color:#e6e6e6;border-color:#adadad}.rbc-btn-group{display:inline-block;white-space:nowrap}.rbc-btn-group>button:first-child:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.rbc-btn-group>button:last-child:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.rbc-rtl .rbc-btn-group>button:first-child:not(:last-child){border-radius:4px;border-top-left-radius:0;border-bottom-left-radius:0}.rbc-rtl .rbc-btn-group>button:last-child:not(:first-child){border-radius:4px;border-top-right-radius:0;border-bottom-right-radius:0}.rbc-btn-group>button:not(:first-child):not(:last-child){border-radius:0}.rbc-btn-group button+button{margin-left:-1px}.rbc-rtl .rbc-btn-group button+button{margin-left:0;margin-right:-1px}.rbc-btn-group+.rbc-btn-group,.rbc-btn-group+button{margin-left:10px}@media(max-width: 767px){.rbc-toolbar{flex-direction:column}}.rbc-event,.rbc-day-slot .rbc-background-event{border:none;box-sizing:border-box;box-shadow:none;margin:0;padding:2px 5px;background-color:#3174ad;border-radius:5px;color:#fff;cursor:pointer;width:100%;text-align:left}.rbc-slot-selecting .rbc-event,.rbc-slot-selecting .rbc-day-slot .rbc-background-event,.rbc-day-slot .rbc-slot-selecting .rbc-background-event{cursor:inherit;pointer-events:none}.rbc-event.rbc-selected,.rbc-day-slot .rbc-selected.rbc-background-event{background-color:#265985}.rbc-event:focus,.rbc-day-slot .rbc-background-event:focus{outline:5px auto #3b99fc}.rbc-event-label{font-size:80%}.rbc-event-overlaps{box-shadow:-1px 1px 5px 0px rgba(51,51,51,.5)}.rbc-event-continues-prior{border-top-left-radius:0;border-bottom-left-radius:0}.rbc-event-continues-after{border-top-right-radius:0;border-bottom-right-radius:0}.rbc-event-continues-earlier{border-top-left-radius:0;border-top-right-radius:0}.rbc-event-continues-later{border-bottom-left-radius:0;border-bottom-right-radius:0}.rbc-row{display:flex;flex-direction:row}.rbc-row-segment{padding:0 1px 1px 1px}.rbc-selected-cell{background-color:rgba(0,0,0,.1)}.rbc-show-more{background-color:rgba(255,255,255,.3);z-index:4;font-weight:bold;font-size:85%;height:auto;line-height:normal;color:#3174ad}.rbc-show-more:hover,.rbc-show-more:focus{color:#265985}.rbc-month-view{position:relative;border:1px solid #ddd;display:flex;flex-direction:column;flex:1 0 0;width:100%;user-select:none;-webkit-user-select:none;height:100%}.rbc-month-header{display:flex;flex-direction:row}.rbc-month-row{display:flex;position:relative;flex-direction:column;flex:1 0 0;flex-basis:0px;overflow:hidden;height:100%}.rbc-month-row+.rbc-month-row{border-top:1px solid #ddd}.rbc-date-cell{flex:1 1 0;min-width:0;padding-right:5px;text-align:right}.rbc-date-cell.rbc-now{font-weight:bold}.rbc-date-cell>a,.rbc-date-cell>a:active,.rbc-date-cell>a:visited{color:inherit;text-decoration:none}.rbc-row-bg{display:flex;flex-direction:row;flex:1 0 0;overflow:hidden;right:1px}.rbc-day-bg{flex:1 0 0%}.rbc-day-bg+.rbc-day-bg{border-left:1px solid #ddd}.rbc-rtl .rbc-day-bg+.rbc-day-bg{border-left-width:0;border-right:1px solid #ddd}.rbc-overlay{position:absolute;z-index:5;border:1px solid #e5e5e5;background-color:#fff;box-shadow:0 5px 15px rgba(0,0,0,.25);padding:10px}.rbc-overlay>*+*{margin-top:1px}.rbc-overlay-header{border-bottom:1px solid #e5e5e5;margin:-10px -10px 5px -10px;padding:2px 10px}.rbc-agenda-view{display:flex;flex-direction:column;flex:1 0 0;overflow:auto}.rbc-agenda-view table.rbc-agenda-table{width:100%;border:1px solid #ddd;border-spacing:0;border-collapse:collapse}.rbc-agenda-view table.rbc-agenda-table tbody>tr>td{padding:5px 10px;vertical-align:top}.rbc-agenda-view table.rbc-agenda-table .rbc-agenda-time-cell{padding-left:15px;padding-right:15px;text-transform:lowercase}.rbc-agenda-view table.rbc-agenda-table tbody>tr>td+td{border-left:1px solid #ddd}.rbc-rtl .rbc-agenda-view table.rbc-agenda-table tbody>tr>td+td{border-left-width:0;border-right:1px solid #ddd}.rbc-agenda-view table.rbc-agenda-table tbody>tr+tr{border-top:1px solid #ddd}.rbc-agenda-view table.rbc-agenda-table thead>tr>th{padding:3px 5px;text-align:left;border-bottom:1px solid #ddd}.rbc-rtl .rbc-agenda-view table.rbc-agenda-table thead>tr>th{text-align:right}.rbc-agenda-time-cell{text-transform:lowercase}.rbc-agenda-time-cell .rbc-continues-after:after{content:" »"}.rbc-agenda-time-cell .rbc-continues-prior:before{content:"« "}.rbc-agenda-date-cell,.rbc-agenda-time-cell{white-space:nowrap}.rbc-agenda-event-cell{width:100%}.rbc-time-column{display:flex;flex-direction:column;min-height:100%}.rbc-time-column .rbc-timeslot-group{flex:1}.rbc-timeslot-group{border-bottom:1px solid #ddd;min-height:40px;display:flex;flex-flow:column nowrap}.rbc-time-gutter,.rbc-header-gutter{flex:none}.rbc-label{padding:0 5px}.rbc-day-slot{position:relative}.rbc-day-slot .rbc-events-container{bottom:0;left:0;position:absolute;right:0;margin-right:10px;top:0}.rbc-day-slot .rbc-events-container.rbc-rtl{left:10px;right:0}.rbc-day-slot .rbc-event,.rbc-day-slot .rbc-background-event{border:1px solid #265985;display:flex;max-height:100%;min-height:20px;flex-flow:column wrap;align-items:flex-start;overflow:hidden;position:absolute}.rbc-day-slot .rbc-background-event{opacity:.75}.rbc-day-slot .rbc-event-label{flex:none;padding-right:5px;width:auto}.rbc-day-slot .rbc-event-content{width:100%;flex:1 1 0;word-wrap:break-word;line-height:1;height:100%;min-height:1em}.rbc-day-slot .rbc-time-slot{border-top:1px solid #f7f7f7}.rbc-time-view-resources .rbc-time-gutter,.rbc-time-view-resources .rbc-time-header-gutter{position:sticky;left:0;background-color:#fff;border-right:1px solid #ddd;z-index:10;margin-right:-1px}.rbc-time-view-resources .rbc-time-header{overflow:hidden}.rbc-time-view-resources .rbc-time-header-content{min-width:auto;flex:1 0 0;flex-basis:0px}.rbc-time-view-resources .rbc-time-header-cell-single-day{display:none}.rbc-time-view-resources .rbc-day-slot{min-width:140px}.rbc-time-view-resources .rbc-header,.rbc-time-view-resources .rbc-day-bg{width:140px;flex:1 1 0;flex-basis:0 px}.rbc-time-header-content+.rbc-time-header-content{margin-left:-1px}.rbc-time-slot{flex:1 0 0}.rbc-time-slot.rbc-now{font-weight:bold}.rbc-day-header{text-align:center}.rbc-slot-selection{z-index:10;position:absolute;background-color:rgba(0,0,0,.5);color:#fff;font-size:75%;width:100%;padding:3px}.rbc-slot-selecting{cursor:move}.rbc-time-view{display:flex;flex-direction:column;flex:1;width:100%;border:1px solid #ddd;min-height:0}.rbc-time-view .rbc-time-gutter{white-space:nowrap;text-align:right}.rbc-time-view .rbc-allday-cell{box-sizing:content-box;width:100%;height:100%;position:relative}.rbc-time-view .rbc-allday-cell+.rbc-allday-cell{border-left:1px solid #ddd}.rbc-time-view .rbc-allday-events{position:relative;z-index:4}.rbc-time-view .rbc-row{box-sizing:border-box;min-height:20px}.rbc-time-header{display:flex;flex:0 0 auto;flex-direction:row}.rbc-time-header.rbc-overflowing{border-right:1px solid #ddd}.rbc-rtl .rbc-time-header.rbc-overflowing{border-right-width:0;border-left:1px solid #ddd}.rbc-time-header>.rbc-row:first-child{border-bottom:1px solid #ddd}.rbc-time-header>.rbc-row.rbc-row-resource{border-bottom:1px solid #ddd}.rbc-time-header-cell-single-day{display:none}.rbc-time-header-content{flex:1;display:flex;min-width:0;flex-direction:column;border-left:1px solid #ddd}.rbc-rtl .rbc-time-header-content{border-left-width:0;border-right:1px solid #ddd}.rbc-time-header-content>.rbc-row.rbc-row-resource{border-bottom:1px solid #ddd;flex-shrink:0}.rbc-time-content{display:flex;flex:1 0 0%;align-items:flex-start;width:100%;border-top:2px solid #ddd;overflow-y:auto;position:relative}.rbc-time-content>.rbc-time-gutter{flex:none}.rbc-time-content>*+*>*{border-left:1px solid #ddd}.rbc-rtl .rbc-time-content>*+*>*{border-left-width:0;border-right:1px solid #ddd}.rbc-time-content>.rbc-day-slot{width:100%;user-select:none;-webkit-user-select:none}.rbc-current-time-indicator{position:absolute;z-index:3;left:0;right:0;height:1px;background-color:#74ad31;pointer-events:none}.rbc-resource-grouping.rbc-time-header-content{display:flex;flex-direction:column}.rbc-resource-grouping .rbc-row .rbc-header{width:141px}',""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/resources/customToolbar.scss":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.id,".examples--custom-toolbar button{font-weight:600;font-size:1rem}",""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/resources/main.scss":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.id,'.rbc-btn{color:inherit;font:inherit;margin:0}button.rbc-btn{overflow:visible;text-transform:none;-webkit-appearance:button;cursor:pointer}button[disabled].rbc-btn{cursor:not-allowed}button.rbc-input::-moz-focus-inner{border:0;padding:0}.rbc-calendar{box-sizing:border-box;height:100%;display:flex;flex-direction:column;align-items:stretch}.rbc-m-b-negative-3{margin-bottom:-3px}.rbc-h-full{height:100%}.rbc-calendar *,.rbc-calendar *:before,.rbc-calendar *:after{box-sizing:inherit}.rbc-abs-full,.rbc-row-bg{overflow:hidden;position:absolute;top:0;left:0;right:0;bottom:0}.rbc-ellipsis,.rbc-show-more,.rbc-row-segment .rbc-event-content,.rbc-event-label{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.rbc-rtl{direction:rtl}.rbc-off-range{color:#999}.rbc-off-range-bg{background:#e6e6e6}.rbc-header{overflow:hidden;flex:1 0 0%;text-overflow:ellipsis;white-space:nowrap;padding:0 3px;text-align:center;vertical-align:middle;font-weight:bold;font-size:90%;min-height:0;border-bottom:1px solid #ddd}.rbc-header+.rbc-header{border-left:1px solid #ddd}.rbc-rtl .rbc-header+.rbc-header{border-left-width:0;border-right:1px solid #ddd}.rbc-header>a,.rbc-header>a:active,.rbc-header>a:visited{color:inherit;text-decoration:none}.rbc-button-link{color:inherit;background:none;margin:0;padding:0;border:none;cursor:pointer;user-select:text}.rbc-row-content{position:relative;user-select:none;-webkit-user-select:none;z-index:4}.rbc-row-content-scrollable{display:flex;flex-direction:column;height:100%}.rbc-row-content-scrollable .rbc-row-content-scroll-container{height:100%;overflow-y:scroll;-ms-overflow-style:none;scrollbar-width:none;-ms-overflow-style:none;scrollbar-width:none}.rbc-row-content-scrollable .rbc-row-content-scroll-container::-webkit-scrollbar{display:none}.rbc-today{background-color:#eaf6ff}.rbc-toolbar{display:flex;flex-wrap:wrap;justify-content:center;align-items:center;margin-bottom:10px;font-size:16px}.rbc-toolbar .rbc-toolbar-label{flex-grow:1;padding:0 10px;text-align:center}.rbc-toolbar button{color:#373a3c;display:inline-block;margin:0;text-align:center;vertical-align:middle;background:none;background-image:none;border:1px solid #ccc;padding:.375rem 1rem;border-radius:4px;line-height:normal;white-space:nowrap}.rbc-toolbar button:active,.rbc-toolbar button.rbc-active{background-image:none;box-shadow:inset 0 3px 5px rgba(0,0,0,.125);background-color:#e6e6e6;border-color:#adadad}.rbc-toolbar button:active:hover,.rbc-toolbar button:active:focus,.rbc-toolbar button.rbc-active:hover,.rbc-toolbar button.rbc-active:focus{color:#373a3c;background-color:#d4d4d4;border-color:#8c8c8c}.rbc-toolbar button:focus{color:#373a3c;background-color:#e6e6e6;border-color:#adadad}.rbc-toolbar button:hover{color:#373a3c;background-color:#e6e6e6;border-color:#adadad}.rbc-btn-group{display:inline-block;white-space:nowrap}.rbc-btn-group>button:first-child:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.rbc-btn-group>button:last-child:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.rbc-rtl .rbc-btn-group>button:first-child:not(:last-child){border-radius:4px;border-top-left-radius:0;border-bottom-left-radius:0}.rbc-rtl .rbc-btn-group>button:last-child:not(:first-child){border-radius:4px;border-top-right-radius:0;border-bottom-right-radius:0}.rbc-btn-group>button:not(:first-child):not(:last-child){border-radius:0}.rbc-btn-group button+button{margin-left:-1px}.rbc-rtl .rbc-btn-group button+button{margin-left:0;margin-right:-1px}.rbc-btn-group+.rbc-btn-group,.rbc-btn-group+button{margin-left:10px}@media(max-width: 767px){.rbc-toolbar{flex-direction:column}}.rbc-event,.rbc-day-slot .rbc-background-event{border:none;box-sizing:border-box;box-shadow:none;margin:0;padding:2px 5px;background-color:#3174ad;border-radius:5px;color:#fff;cursor:pointer;width:100%;text-align:left}.rbc-slot-selecting .rbc-event,.rbc-slot-selecting .rbc-day-slot .rbc-background-event,.rbc-day-slot .rbc-slot-selecting .rbc-background-event{cursor:inherit;pointer-events:none}.rbc-event.rbc-selected,.rbc-day-slot .rbc-selected.rbc-background-event{background-color:#265985}.rbc-event:focus,.rbc-day-slot .rbc-background-event:focus{outline:5px auto #3b99fc}.rbc-event-label{font-size:80%}.rbc-event-overlaps{box-shadow:-1px 1px 5px 0px rgba(51,51,51,.5)}.rbc-event-continues-prior{border-top-left-radius:0;border-bottom-left-radius:0}.rbc-event-continues-after{border-top-right-radius:0;border-bottom-right-radius:0}.rbc-event-continues-earlier{border-top-left-radius:0;border-top-right-radius:0}.rbc-event-continues-later{border-bottom-left-radius:0;border-bottom-right-radius:0}.rbc-row{display:flex;flex-direction:row}.rbc-row-segment{padding:0 1px 1px 1px}.rbc-selected-cell{background-color:rgba(0,0,0,.1)}.rbc-show-more{background-color:rgba(255,255,255,.3);z-index:4;font-weight:bold;font-size:85%;height:auto;line-height:normal;color:#3174ad}.rbc-show-more:hover,.rbc-show-more:focus{color:#265985}.rbc-month-view{position:relative;border:1px solid #ddd;display:flex;flex-direction:column;flex:1 0 0;width:100%;user-select:none;-webkit-user-select:none;height:100%}.rbc-month-header{display:flex;flex-direction:row}.rbc-month-row{display:flex;position:relative;flex-direction:column;flex:1 0 0;flex-basis:0px;overflow:hidden;height:100%}.rbc-month-row+.rbc-month-row{border-top:1px solid #ddd}.rbc-date-cell{flex:1 1 0;min-width:0;padding-right:5px;text-align:right}.rbc-date-cell.rbc-now{font-weight:bold}.rbc-date-cell>a,.rbc-date-cell>a:active,.rbc-date-cell>a:visited{color:inherit;text-decoration:none}.rbc-row-bg{display:flex;flex-direction:row;flex:1 0 0;overflow:hidden;right:1px}.rbc-day-bg{flex:1 0 0%}.rbc-day-bg+.rbc-day-bg{border-left:1px solid #ddd}.rbc-rtl .rbc-day-bg+.rbc-day-bg{border-left-width:0;border-right:1px solid #ddd}.rbc-overlay{position:absolute;z-index:5;border:1px solid #e5e5e5;background-color:#fff;box-shadow:0 5px 15px rgba(0,0,0,.25);padding:10px}.rbc-overlay>*+*{margin-top:1px}.rbc-overlay-header{border-bottom:1px solid #e5e5e5;margin:-10px -10px 5px -10px;padding:2px 10px}.rbc-agenda-view{display:flex;flex-direction:column;flex:1 0 0;overflow:auto}.rbc-agenda-view table.rbc-agenda-table{width:100%;border:1px solid #ddd;border-spacing:0;border-collapse:collapse}.rbc-agenda-view table.rbc-agenda-table tbody>tr>td{padding:5px 10px;vertical-align:top}.rbc-agenda-view table.rbc-agenda-table .rbc-agenda-time-cell{padding-left:15px;padding-right:15px;text-transform:lowercase}.rbc-agenda-view table.rbc-agenda-table tbody>tr>td+td{border-left:1px solid #ddd}.rbc-rtl .rbc-agenda-view table.rbc-agenda-table tbody>tr>td+td{border-left-width:0;border-right:1px solid #ddd}.rbc-agenda-view table.rbc-agenda-table tbody>tr+tr{border-top:1px solid #ddd}.rbc-agenda-view table.rbc-agenda-table thead>tr>th{padding:3px 5px;text-align:left;border-bottom:1px solid #ddd}.rbc-rtl .rbc-agenda-view table.rbc-agenda-table thead>tr>th{text-align:right}.rbc-agenda-time-cell{text-transform:lowercase}.rbc-agenda-time-cell .rbc-continues-after:after{content:" »"}.rbc-agenda-time-cell .rbc-continues-prior:before{content:"« "}.rbc-agenda-date-cell,.rbc-agenda-time-cell{white-space:nowrap}.rbc-agenda-event-cell{width:100%}.rbc-time-column{display:flex;flex-direction:column;min-height:100%}.rbc-time-column .rbc-timeslot-group{flex:1}.rbc-timeslot-group{border-bottom:1px solid #ddd;min-height:40px;display:flex;flex-flow:column nowrap}.rbc-time-gutter,.rbc-header-gutter{flex:none}.rbc-label{padding:0 5px}.rbc-day-slot{position:relative}.rbc-day-slot .rbc-events-container{bottom:0;left:0;position:absolute;right:0;margin-right:10px;top:0}.rbc-day-slot .rbc-events-container.rbc-rtl{left:10px;right:0}.rbc-day-slot .rbc-event,.rbc-day-slot .rbc-background-event{border:1px solid #265985;display:flex;max-height:100%;min-height:20px;flex-flow:column wrap;align-items:flex-start;overflow:hidden;position:absolute}.rbc-day-slot .rbc-background-event{opacity:.75}.rbc-day-slot .rbc-event-label{flex:none;padding-right:5px;width:auto}.rbc-day-slot .rbc-event-content{width:100%;flex:1 1 0;word-wrap:break-word;line-height:1;height:100%;min-height:1em}.rbc-day-slot .rbc-time-slot{border-top:1px solid #f7f7f7}.rbc-time-view-resources .rbc-time-gutter,.rbc-time-view-resources .rbc-time-header-gutter{position:sticky;left:0;background-color:#fff;border-right:1px solid #ddd;z-index:10;margin-right:-1px}.rbc-time-view-resources .rbc-time-header{overflow:hidden}.rbc-time-view-resources .rbc-time-header-content{min-width:auto;flex:1 0 0;flex-basis:0px}.rbc-time-view-resources .rbc-time-header-cell-single-day{display:none}.rbc-time-view-resources .rbc-day-slot{min-width:140px}.rbc-time-view-resources .rbc-header,.rbc-time-view-resources .rbc-day-bg{width:140px;flex:1 1 0;flex-basis:0 px}.rbc-time-header-content+.rbc-time-header-content{margin-left:-1px}.rbc-time-slot{flex:1 0 0}.rbc-time-slot.rbc-now{font-weight:bold}.rbc-day-header{text-align:center}.rbc-slot-selection{z-index:10;position:absolute;background-color:rgba(0,0,0,.5);color:#fff;font-size:75%;width:100%;padding:3px}.rbc-slot-selecting{cursor:move}.rbc-time-view{display:flex;flex-direction:column;flex:1;width:100%;border:1px solid #ddd;min-height:0}.rbc-time-view .rbc-time-gutter{white-space:nowrap;text-align:right}.rbc-time-view .rbc-allday-cell{box-sizing:content-box;width:100%;height:100%;position:relative}.rbc-time-view .rbc-allday-cell+.rbc-allday-cell{border-left:1px solid #ddd}.rbc-time-view .rbc-allday-events{position:relative;z-index:4}.rbc-time-view .rbc-row{box-sizing:border-box;min-height:20px}.rbc-time-header{display:flex;flex:0 0 auto;flex-direction:row}.rbc-time-header.rbc-overflowing{border-right:1px solid #ddd}.rbc-rtl .rbc-time-header.rbc-overflowing{border-right-width:0;border-left:1px solid #ddd}.rbc-time-header>.rbc-row:first-child{border-bottom:1px solid #ddd}.rbc-time-header>.rbc-row.rbc-row-resource{border-bottom:1px solid #ddd}.rbc-time-header-cell-single-day{display:none}.rbc-time-header-content{flex:1;display:flex;min-width:0;flex-direction:column;border-left:1px solid #ddd}.rbc-rtl .rbc-time-header-content{border-left-width:0;border-right:1px solid #ddd}.rbc-time-header-content>.rbc-row.rbc-row-resource{border-bottom:1px solid #ddd;flex-shrink:0}.rbc-time-content{display:flex;flex:1 0 0%;align-items:flex-start;width:100%;border-top:2px solid #ddd;overflow-y:auto;position:relative}.rbc-time-content>.rbc-time-gutter{flex:none}.rbc-time-content>*+*>*{border-left:1px solid #ddd}.rbc-rtl .rbc-time-content>*+*>*{border-left-width:0;border-right:1px solid #ddd}.rbc-time-content>.rbc-day-slot{width:100%;user-select:none;-webkit-user-select:none}.rbc-current-time-indicator{position:absolute;z-index:3;left:0;right:0;height:1px;background-color:#74ad31;pointer-events:none}.rbc-resource-grouping.rbc-time-header-content{display:flex;flex-direction:column}.rbc-resource-grouping .rbc-row .rbc-header{width:141px}.rbc-addons-dnd .rbc-addons-dnd-row-body{position:relative}.rbc-addons-dnd .rbc-addons-dnd-drag-row{position:absolute;top:0;left:0;right:0}.rbc-addons-dnd .rbc-addons-dnd-over{background-color:rgba(0,0,0,.3)}.rbc-addons-dnd .rbc-event,.rbc-addons-dnd .rbc-day-slot .rbc-background-event,.rbc-day-slot .rbc-addons-dnd .rbc-background-event{transition:opacity 150ms}.rbc-addons-dnd .rbc-event:hover .rbc-addons-dnd-resize-ns-icon,.rbc-addons-dnd .rbc-day-slot .rbc-background-event:hover .rbc-addons-dnd-resize-ns-icon,.rbc-day-slot .rbc-addons-dnd .rbc-background-event:hover .rbc-addons-dnd-resize-ns-icon,.rbc-addons-dnd .rbc-event:hover .rbc-addons-dnd-resize-ew-icon,.rbc-addons-dnd .rbc-day-slot .rbc-background-event:hover .rbc-addons-dnd-resize-ew-icon,.rbc-day-slot .rbc-addons-dnd .rbc-background-event:hover .rbc-addons-dnd-resize-ew-icon{display:block}.rbc-addons-dnd .rbc-addons-dnd-dragged-event{opacity:0}.rbc-addons-dnd.rbc-addons-dnd-is-dragging .rbc-event:not(.rbc-addons-dnd-dragged-event):not(.rbc-addons-dnd-drag-preview),.rbc-addons-dnd.rbc-addons-dnd-is-dragging .rbc-day-slot .rbc-background-event:not(.rbc-addons-dnd-dragged-event):not(.rbc-addons-dnd-drag-preview),.rbc-day-slot .rbc-addons-dnd.rbc-addons-dnd-is-dragging .rbc-background-event:not(.rbc-addons-dnd-dragged-event):not(.rbc-addons-dnd-drag-preview){opacity:.5}.rbc-addons-dnd .rbc-addons-dnd-resizable{position:relative;width:100%;height:100%}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor{width:100%;text-align:center;position:absolute}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor:first-child{top:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor:last-child{bottom:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor .rbc-addons-dnd-resize-ns-icon{display:none;border-top:3px double;margin:0 auto;width:10px;cursor:ns-resize}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor{position:absolute;top:4px;bottom:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor:first-child{left:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor:last-child{right:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor .rbc-addons-dnd-resize-ew-icon{display:none;border-left:3px double;margin-top:auto;margin-bottom:auto;height:10px;cursor:ew-resize}.height600{position:relative;height:600px}.examples--header,.dndOutsideSourceExample{margin:0 40px;text-align:center}.dndOutsideSourceExample{display:flex}.dndOutsideSourceExample>.inner{display:flex;flex:1;justify-content:center;flex-wrap:wrap}.dndOutsideSourceExample>.inner h4{color:gray;width:100%}.dndOutsideSourceExample>.inner div[draggable]{display:flex;align-items:center;justify-content:center;border:2px solid gray;border-radius:4px;width:100px;margin:10px;cursor:grab}.dndOutsideSourceExample>.inner input[type=checkbox]{margin-right:5px}.card{background-color:#fff;border:0;padding:24px;border-radius:2px;margin-bottom:20px;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12)}.isDraggable{cursor:grab !important}.nonDraggable,.nonResizable{background-color:#bed7ec !important;color:#000 !important}',""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/resources/propGetter.scss":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.id,'.powderBlue,#my_scheduler,.tuesday{background-color:#b0e0e6;color:#000}.darkGreen{background-color:#006400;color:#fff}.slotDefault{background-color:"#FAF0E6";color:"black"}#my_scheduler{padding:.5em;border:1px solid blue}',""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./node_modules/sass-loader/dist/cjs.js!./stories/demos/exampleCode/rendering.module.scss":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.id,".rendering-module__specialDay--3nNWi{background-color:#fec}",""]),exports.locals={specialDay:"rendering-module__specialDay--3nNWi"},module.exports=exports},"./node_modules/moment/locale sync recursive ^\\.\\/.*$":function(module,__unused_webpack_exports,__webpack_require__){var map={"./af":"./node_modules/moment/locale/af.js","./af.js":"./node_modules/moment/locale/af.js","./ar":"./node_modules/moment/locale/ar.js","./ar-dz":"./node_modules/moment/locale/ar-dz.js","./ar-dz.js":"./node_modules/moment/locale/ar-dz.js","./ar-kw":"./node_modules/moment/locale/ar-kw.js","./ar-kw.js":"./node_modules/moment/locale/ar-kw.js","./ar-ly":"./node_modules/moment/locale/ar-ly.js","./ar-ly.js":"./node_modules/moment/locale/ar-ly.js","./ar-ma":"./node_modules/moment/locale/ar-ma.js","./ar-ma.js":"./node_modules/moment/locale/ar-ma.js","./ar-ps":"./node_modules/moment/locale/ar-ps.js","./ar-ps.js":"./node_modules/moment/locale/ar-ps.js","./ar-sa":"./node_modules/moment/locale/ar-sa.js","./ar-sa.js":"./node_modules/moment/locale/ar-sa.js","./ar-tn":"./node_modules/moment/locale/ar-tn.js","./ar-tn.js":"./node_modules/moment/locale/ar-tn.js","./ar.js":"./node_modules/moment/locale/ar.js","./az":"./node_modules/moment/locale/az.js","./az.js":"./node_modules/moment/locale/az.js","./be":"./node_modules/moment/locale/be.js","./be.js":"./node_modules/moment/locale/be.js","./bg":"./node_modules/moment/locale/bg.js","./bg.js":"./node_modules/moment/locale/bg.js","./bm":"./node_modules/moment/locale/bm.js","./bm.js":"./node_modules/moment/locale/bm.js","./bn":"./node_modules/moment/locale/bn.js","./bn-bd":"./node_modules/moment/locale/bn-bd.js","./bn-bd.js":"./node_modules/moment/locale/bn-bd.js","./bn.js":"./node_modules/moment/locale/bn.js","./bo":"./node_modules/moment/locale/bo.js","./bo.js":"./node_modules/moment/locale/bo.js","./br":"./node_modules/moment/locale/br.js","./br.js":"./node_modules/moment/locale/br.js","./bs":"./node_modules/moment/locale/bs.js","./bs.js":"./node_modules/moment/locale/bs.js","./ca":"./node_modules/moment/locale/ca.js","./ca.js":"./node_modules/moment/locale/ca.js","./cs":"./node_modules/moment/locale/cs.js","./cs.js":"./node_modules/moment/locale/cs.js","./cv":"./node_modules/moment/locale/cv.js","./cv.js":"./node_modules/moment/locale/cv.js","./cy":"./node_modules/moment/locale/cy.js","./cy.js":"./node_modules/moment/locale/cy.js","./da":"./node_modules/moment/locale/da.js","./da.js":"./node_modules/moment/locale/da.js","./de":"./node_modules/moment/locale/de.js","./de-at":"./node_modules/moment/locale/de-at.js","./de-at.js":"./node_modules/moment/locale/de-at.js","./de-ch":"./node_modules/moment/locale/de-ch.js","./de-ch.js":"./node_modules/moment/locale/de-ch.js","./de.js":"./node_modules/moment/locale/de.js","./dv":"./node_modules/moment/locale/dv.js","./dv.js":"./node_modules/moment/locale/dv.js","./el":"./node_modules/moment/locale/el.js","./el.js":"./node_modules/moment/locale/el.js","./en-au":"./node_modules/moment/locale/en-au.js","./en-au.js":"./node_modules/moment/locale/en-au.js","./en-ca":"./node_modules/moment/locale/en-ca.js","./en-ca.js":"./node_modules/moment/locale/en-ca.js","./en-gb":"./node_modules/moment/locale/en-gb.js","./en-gb.js":"./node_modules/moment/locale/en-gb.js","./en-ie":"./node_modules/moment/locale/en-ie.js","./en-ie.js":"./node_modules/moment/locale/en-ie.js","./en-il":"./node_modules/moment/locale/en-il.js","./en-il.js":"./node_modules/moment/locale/en-il.js","./en-in":"./node_modules/moment/locale/en-in.js","./en-in.js":"./node_modules/moment/locale/en-in.js","./en-nz":"./node_modules/moment/locale/en-nz.js","./en-nz.js":"./node_modules/moment/locale/en-nz.js","./en-sg":"./node_modules/moment/locale/en-sg.js","./en-sg.js":"./node_modules/moment/locale/en-sg.js","./eo":"./node_modules/moment/locale/eo.js","./eo.js":"./node_modules/moment/locale/eo.js","./es":"./node_modules/moment/locale/es.js","./es-do":"./node_modules/moment/locale/es-do.js","./es-do.js":"./node_modules/moment/locale/es-do.js","./es-mx":"./node_modules/moment/locale/es-mx.js","./es-mx.js":"./node_modules/moment/locale/es-mx.js","./es-us":"./node_modules/moment/locale/es-us.js","./es-us.js":"./node_modules/moment/locale/es-us.js","./es.js":"./node_modules/moment/locale/es.js","./et":"./node_modules/moment/locale/et.js","./et.js":"./node_modules/moment/locale/et.js","./eu":"./node_modules/moment/locale/eu.js","./eu.js":"./node_modules/moment/locale/eu.js","./fa":"./node_modules/moment/locale/fa.js","./fa.js":"./node_modules/moment/locale/fa.js","./fi":"./node_modules/moment/locale/fi.js","./fi.js":"./node_modules/moment/locale/fi.js","./fil":"./node_modules/moment/locale/fil.js","./fil.js":"./node_modules/moment/locale/fil.js","./fo":"./node_modules/moment/locale/fo.js","./fo.js":"./node_modules/moment/locale/fo.js","./fr":"./node_modules/moment/locale/fr.js","./fr-ca":"./node_modules/moment/locale/fr-ca.js","./fr-ca.js":"./node_modules/moment/locale/fr-ca.js","./fr-ch":"./node_modules/moment/locale/fr-ch.js","./fr-ch.js":"./node_modules/moment/locale/fr-ch.js","./fr.js":"./node_modules/moment/locale/fr.js","./fy":"./node_modules/moment/locale/fy.js","./fy.js":"./node_modules/moment/locale/fy.js","./ga":"./node_modules/moment/locale/ga.js","./ga.js":"./node_modules/moment/locale/ga.js","./gd":"./node_modules/moment/locale/gd.js","./gd.js":"./node_modules/moment/locale/gd.js","./gl":"./node_modules/moment/locale/gl.js","./gl.js":"./node_modules/moment/locale/gl.js","./gom-deva":"./node_modules/moment/locale/gom-deva.js","./gom-deva.js":"./node_modules/moment/locale/gom-deva.js","./gom-latn":"./node_modules/moment/locale/gom-latn.js","./gom-latn.js":"./node_modules/moment/locale/gom-latn.js","./gu":"./node_modules/moment/locale/gu.js","./gu.js":"./node_modules/moment/locale/gu.js","./he":"./node_modules/moment/locale/he.js","./he.js":"./node_modules/moment/locale/he.js","./hi":"./node_modules/moment/locale/hi.js","./hi.js":"./node_modules/moment/locale/hi.js","./hr":"./node_modules/moment/locale/hr.js","./hr.js":"./node_modules/moment/locale/hr.js","./hu":"./node_modules/moment/locale/hu.js","./hu.js":"./node_modules/moment/locale/hu.js","./hy-am":"./node_modules/moment/locale/hy-am.js","./hy-am.js":"./node_modules/moment/locale/hy-am.js","./id":"./node_modules/moment/locale/id.js","./id.js":"./node_modules/moment/locale/id.js","./is":"./node_modules/moment/locale/is.js","./is.js":"./node_modules/moment/locale/is.js","./it":"./node_modules/moment/locale/it.js","./it-ch":"./node_modules/moment/locale/it-ch.js","./it-ch.js":"./node_modules/moment/locale/it-ch.js","./it.js":"./node_modules/moment/locale/it.js","./ja":"./node_modules/moment/locale/ja.js","./ja.js":"./node_modules/moment/locale/ja.js","./jv":"./node_modules/moment/locale/jv.js","./jv.js":"./node_modules/moment/locale/jv.js","./ka":"./node_modules/moment/locale/ka.js","./ka.js":"./node_modules/moment/locale/ka.js","./kk":"./node_modules/moment/locale/kk.js","./kk.js":"./node_modules/moment/locale/kk.js","./km":"./node_modules/moment/locale/km.js","./km.js":"./node_modules/moment/locale/km.js","./kn":"./node_modules/moment/locale/kn.js","./kn.js":"./node_modules/moment/locale/kn.js","./ko":"./node_modules/moment/locale/ko.js","./ko.js":"./node_modules/moment/locale/ko.js","./ku":"./node_modules/moment/locale/ku.js","./ku-kmr":"./node_modules/moment/locale/ku-kmr.js","./ku-kmr.js":"./node_modules/moment/locale/ku-kmr.js","./ku.js":"./node_modules/moment/locale/ku.js","./ky":"./node_modules/moment/locale/ky.js","./ky.js":"./node_modules/moment/locale/ky.js","./lb":"./node_modules/moment/locale/lb.js","./lb.js":"./node_modules/moment/locale/lb.js","./lo":"./node_modules/moment/locale/lo.js","./lo.js":"./node_modules/moment/locale/lo.js","./lt":"./node_modules/moment/locale/lt.js","./lt.js":"./node_modules/moment/locale/lt.js","./lv":"./node_modules/moment/locale/lv.js","./lv.js":"./node_modules/moment/locale/lv.js","./me":"./node_modules/moment/locale/me.js","./me.js":"./node_modules/moment/locale/me.js","./mi":"./node_modules/moment/locale/mi.js","./mi.js":"./node_modules/moment/locale/mi.js","./mk":"./node_modules/moment/locale/mk.js","./mk.js":"./node_modules/moment/locale/mk.js","./ml":"./node_modules/moment/locale/ml.js","./ml.js":"./node_modules/moment/locale/ml.js","./mn":"./node_modules/moment/locale/mn.js","./mn.js":"./node_modules/moment/locale/mn.js","./mr":"./node_modules/moment/locale/mr.js","./mr.js":"./node_modules/moment/locale/mr.js","./ms":"./node_modules/moment/locale/ms.js","./ms-my":"./node_modules/moment/locale/ms-my.js","./ms-my.js":"./node_modules/moment/locale/ms-my.js","./ms.js":"./node_modules/moment/locale/ms.js","./mt":"./node_modules/moment/locale/mt.js","./mt.js":"./node_modules/moment/locale/mt.js","./my":"./node_modules/moment/locale/my.js","./my.js":"./node_modules/moment/locale/my.js","./nb":"./node_modules/moment/locale/nb.js","./nb.js":"./node_modules/moment/locale/nb.js","./ne":"./node_modules/moment/locale/ne.js","./ne.js":"./node_modules/moment/locale/ne.js","./nl":"./node_modules/moment/locale/nl.js","./nl-be":"./node_modules/moment/locale/nl-be.js","./nl-be.js":"./node_modules/moment/locale/nl-be.js","./nl.js":"./node_modules/moment/locale/nl.js","./nn":"./node_modules/moment/locale/nn.js","./nn.js":"./node_modules/moment/locale/nn.js","./oc-lnc":"./node_modules/moment/locale/oc-lnc.js","./oc-lnc.js":"./node_modules/moment/locale/oc-lnc.js","./pa-in":"./node_modules/moment/locale/pa-in.js","./pa-in.js":"./node_modules/moment/locale/pa-in.js","./pl":"./node_modules/moment/locale/pl.js","./pl.js":"./node_modules/moment/locale/pl.js","./pt":"./node_modules/moment/locale/pt.js","./pt-br":"./node_modules/moment/locale/pt-br.js","./pt-br.js":"./node_modules/moment/locale/pt-br.js","./pt.js":"./node_modules/moment/locale/pt.js","./ro":"./node_modules/moment/locale/ro.js","./ro.js":"./node_modules/moment/locale/ro.js","./ru":"./node_modules/moment/locale/ru.js","./ru.js":"./node_modules/moment/locale/ru.js","./sd":"./node_modules/moment/locale/sd.js","./sd.js":"./node_modules/moment/locale/sd.js","./se":"./node_modules/moment/locale/se.js","./se.js":"./node_modules/moment/locale/se.js","./si":"./node_modules/moment/locale/si.js","./si.js":"./node_modules/moment/locale/si.js","./sk":"./node_modules/moment/locale/sk.js","./sk.js":"./node_modules/moment/locale/sk.js","./sl":"./node_modules/moment/locale/sl.js","./sl.js":"./node_modules/moment/locale/sl.js","./sq":"./node_modules/moment/locale/sq.js","./sq.js":"./node_modules/moment/locale/sq.js","./sr":"./node_modules/moment/locale/sr.js","./sr-cyrl":"./node_modules/moment/locale/sr-cyrl.js","./sr-cyrl.js":"./node_modules/moment/locale/sr-cyrl.js","./sr.js":"./node_modules/moment/locale/sr.js","./ss":"./node_modules/moment/locale/ss.js","./ss.js":"./node_modules/moment/locale/ss.js","./sv":"./node_modules/moment/locale/sv.js","./sv.js":"./node_modules/moment/locale/sv.js","./sw":"./node_modules/moment/locale/sw.js","./sw.js":"./node_modules/moment/locale/sw.js","./ta":"./node_modules/moment/locale/ta.js","./ta.js":"./node_modules/moment/locale/ta.js","./te":"./node_modules/moment/locale/te.js","./te.js":"./node_modules/moment/locale/te.js","./tet":"./node_modules/moment/locale/tet.js","./tet.js":"./node_modules/moment/locale/tet.js","./tg":"./node_modules/moment/locale/tg.js","./tg.js":"./node_modules/moment/locale/tg.js","./th":"./node_modules/moment/locale/th.js","./th.js":"./node_modules/moment/locale/th.js","./tk":"./node_modules/moment/locale/tk.js","./tk.js":"./node_modules/moment/locale/tk.js","./tl-ph":"./node_modules/moment/locale/tl-ph.js","./tl-ph.js":"./node_modules/moment/locale/tl-ph.js","./tlh":"./node_modules/moment/locale/tlh.js","./tlh.js":"./node_modules/moment/locale/tlh.js","./tr":"./node_modules/moment/locale/tr.js","./tr.js":"./node_modules/moment/locale/tr.js","./tzl":"./node_modules/moment/locale/tzl.js","./tzl.js":"./node_modules/moment/locale/tzl.js","./tzm":"./node_modules/moment/locale/tzm.js","./tzm-latn":"./node_modules/moment/locale/tzm-latn.js","./tzm-latn.js":"./node_modules/moment/locale/tzm-latn.js","./tzm.js":"./node_modules/moment/locale/tzm.js","./ug-cn":"./node_modules/moment/locale/ug-cn.js","./ug-cn.js":"./node_modules/moment/locale/ug-cn.js","./uk":"./node_modules/moment/locale/uk.js","./uk.js":"./node_modules/moment/locale/uk.js","./ur":"./node_modules/moment/locale/ur.js","./ur.js":"./node_modules/moment/locale/ur.js","./uz":"./node_modules/moment/locale/uz.js","./uz-latn":"./node_modules/moment/locale/uz-latn.js","./uz-latn.js":"./node_modules/moment/locale/uz-latn.js","./uz.js":"./node_modules/moment/locale/uz.js","./vi":"./node_modules/moment/locale/vi.js","./vi.js":"./node_modules/moment/locale/vi.js","./x-pseudo":"./node_modules/moment/locale/x-pseudo.js","./x-pseudo.js":"./node_modules/moment/locale/x-pseudo.js","./yo":"./node_modules/moment/locale/yo.js","./yo.js":"./node_modules/moment/locale/yo.js","./zh-cn":"./node_modules/moment/locale/zh-cn.js","./zh-cn.js":"./node_modules/moment/locale/zh-cn.js","./zh-hk":"./node_modules/moment/locale/zh-hk.js","./zh-hk.js":"./node_modules/moment/locale/zh-hk.js","./zh-mo":"./node_modules/moment/locale/zh-mo.js","./zh-mo.js":"./node_modules/moment/locale/zh-mo.js","./zh-tw":"./node_modules/moment/locale/zh-tw.js","./zh-tw.js":"./node_modules/moment/locale/zh-tw.js"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./node_modules/moment/locale sync recursive ^\\.\\/.*$"},"./src/addons/dragAndDrop/styles.scss":function(module,__unused_webpack_exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/addons/dragAndDrop/styles.scss");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.id,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./src/sass/styles.scss":function(module,__unused_webpack_exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sass/styles.scss");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.id,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./stories/resources/customToolbar.scss":function(module,__unused_webpack_exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/resources/customToolbar.scss");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.id,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./stories/resources/main.scss":function(module,__unused_webpack_exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/resources/main.scss");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.id,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./stories/resources/propGetter.scss":function(module,__unused_webpack_exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/resources/propGetter.scss");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.id,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./stories/demos/exampleCode/rendering.module.scss":function(module,__unused_webpack_exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./node_modules/sass-loader/dist/cjs.js!./stories/demos/exampleCode/rendering.module.scss");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.id,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":function(module,__unused_webpack_exports,__webpack_require__){var map={"./Calendar.stories.js":"./stories/Calendar.stories.js","./DragAndDrop.stories.js":"./stories/DragAndDrop.stories.js","./Durations.stories.js":"./stories/Durations.stories.js","./Layout.stories.js":"./stories/Layout.stories.js","./Timeslots.stories.js":"./stories/Timeslots.stories.js","./addons/dragAndDrop/basic.stories.js":"./stories/addons/dragAndDrop/basic.stories.js","./addons/dragAndDrop/outside.stories.js":"./stories/addons/dragAndDrop/outside.stories.js","./addons/dragAndDrop/props/dragFromOutsideItem.stories.js":"./stories/addons/dragAndDrop/props/dragFromOutsideItem.stories.js","./addons/dragAndDrop/props/draggableAccessor.stories.js":"./stories/addons/dragAndDrop/props/draggableAccessor.stories.js","./addons/dragAndDrop/props/onDragOver.stories.js":"./stories/addons/dragAndDrop/props/onDragOver.stories.js","./addons/dragAndDrop/props/onDragStart.stories.js":"./stories/addons/dragAndDrop/props/onDragStart.stories.js","./addons/dragAndDrop/props/onDropFromOutside.stories.js":"./stories/addons/dragAndDrop/props/onDropFromOutside.stories.js","./addons/dragAndDrop/props/onEventDrop.stories.js":"./stories/addons/dragAndDrop/props/onEventDrop.stories.js","./addons/dragAndDrop/props/onEventResize.stories.js":"./stories/addons/dragAndDrop/props/onEventResize.stories.js","./addons/dragAndDrop/props/resizable.stories.js":"./stories/addons/dragAndDrop/props/resizable.stories.js","./addons/dragAndDrop/props/resizableAccessor.stories.js":"./stories/addons/dragAndDrop/props/resizableAccessor.stories.js","./addons/dragAndDrop/resource.stories.js":"./stories/addons/dragAndDrop/resource.stories.js","./demos/backgroundEvents.stories.js":"./stories/demos/backgroundEvents.stories.js","./demos/basic.stories.js":"./stories/demos/basic.stories.js","./demos/cultures.stories.js":"./stories/demos/cultures.stories.js","./demos/customView.stories.js":"./stories/demos/customView.stories.js","./demos/dayjs.stories.js":"./stories/demos/dayjs.stories.js","./demos/luxon.stories.js":"./stories/demos/luxon.stories.js","./demos/noOverlap.stories.js":"./stories/demos/noOverlap.stories.js","./demos/popup.stories.js":"./stories/demos/popup.stories.js","./demos/rendering.stories.js":"./stories/demos/rendering.stories.js","./demos/resource.stories.js":"./stories/demos/resource.stories.js","./demos/selectable.stories.js":"./stories/demos/selectable.stories.js","./demos/timeslots.stories.js":"./stories/demos/timeslots.stories.js","./demos/timezones.stories.js":"./stories/demos/timezones.stories.js","./props/allDayAccessor.stories.js":"./stories/props/allDayAccessor.stories.js","./props/allDayMaxRows.stories.js":"./stories/props/allDayMaxRows.stories.js","./props/backgroundEvents.stories.js":"./stories/props/backgroundEvents.stories.js","./props/components.stories.js":"./stories/props/components.stories.js","./props/culture.stories.js":"./stories/props/culture.stories.js","./props/date.stories.js":"./stories/props/date.stories.js","./props/dayLayoutAlgorithm.stories.js":"./stories/props/dayLayoutAlgorithm.stories.js","./props/dayPropGetter.stories.js":"./stories/props/dayPropGetter.stories.js","./props/defaultDate.stories.js":"./stories/props/defaultDate.stories.js","./props/defaultView.stories.js":"./stories/props/defaultView.stories.js","./props/drilldownView.stories.js":"./stories/props/drilldownView.stories.js","./props/elementProps.stories.js":"./stories/props/elementProps.stories.js","./props/endAccessor.stories.js":"./stories/props/endAccessor.stories.js","./props/eventPropGetter.stories.js":"./stories/props/eventPropGetter.stories.js","./props/events.stories.js":"./stories/props/events.stories.js","./props/formats.stories.js":"./stories/props/formats.stories.js","./props/formatsAgendaDateFormat.stories.js":"./stories/props/formatsAgendaDateFormat.stories.js","./props/formatsAgendaHeaderFormat.stories.js":"./stories/props/formatsAgendaHeaderFormat.stories.js","./props/formatsAgendaTimeFormat.stories.js":"./stories/props/formatsAgendaTimeFormat.stories.js","./props/formatsAgendaTimeRangeFormat.stories.js":"./stories/props/formatsAgendaTimeRangeFormat.stories.js","./props/formatsDateFormat.stories.js":"./stories/props/formatsDateFormat.stories.js","./props/formatsDayFormat.stories.js":"./stories/props/formatsDayFormat.stories.js","./props/formatsDayHeaderFormat.stories.js":"./stories/props/formatsDayHeaderFormat.stories.js","./props/formatsDayRangeHeaderFormat.stories.js":"./stories/props/formatsDayRangeHeaderFormat.stories.js","./props/formatsEventTimeRangeEndFormat.stories.js":"./stories/props/formatsEventTimeRangeEndFormat.stories.js","./props/formatsEventTimeRangeFormat.stories.js":"./stories/props/formatsEventTimeRangeFormat.stories.js","./props/formatsEventTimeRangeStartFormat.stories.js":"./stories/props/formatsEventTimeRangeStartFormat.stories.js","./props/formatsMonthHeaderFormat.stories.js":"./stories/props/formatsMonthHeaderFormat.stories.js","./props/formatsSelectRangeFormat.stories.js":"./stories/props/formatsSelectRangeFormat.stories.js","./props/formatsTimeGutterFormat.stories.js":"./stories/props/formatsTimeGutterFormat.stories.js","./props/formatsWeekdayFormat.stories.js":"./stories/props/formatsWeekdayFormat.stories.js","./props/getDrilldownView.stories.js":"./stories/props/getDrilldownView.stories.js","./props/getNow.stories.js":"./stories/props/getNow.stories.js","./props/length.stories.js":"./stories/props/length.stories.js","./props/localizer.stories.js":"./stories/props/localizer.stories.js","./props/longPressThreshold.stories.js":"./stories/props/longPressThreshold.stories.js","./props/max.stories.js":"./stories/props/max.stories.js","./props/messages.stories.js":"./stories/props/messages.stories.js","./props/min.stories.js":"./stories/props/min.stories.js","./props/onDoubleClickEvent.stories.js":"./stories/props/onDoubleClickEvent.stories.js","./props/onDrillDown.stories.js":"./stories/props/onDrillDown.stories.js","./props/onKeyPressEvent.stories.js":"./stories/props/onKeyPressEvent.stories.js","./props/onNavigate.stories.js":"./stories/props/onNavigate.stories.js","./props/onRangeChange.stories.js":"./stories/props/onRangeChange.stories.js","./props/onSelectEvent.stories.js":"./stories/props/onSelectEvent.stories.js","./props/onSelectSlot.stories.js":"./stories/props/onSelectSlot.stories.js","./props/onSelecting.stories.js":"./stories/props/onSelecting.stories.js","./props/onShowMore.stories.js":"./stories/props/onShowMore.stories.js","./props/onView.stories.js":"./stories/props/onView.stories.js","./props/popup.stories.js":"./stories/props/popup.stories.js","./props/popupOffset.stories.js":"./stories/props/popupOffset.stories.js","./props/resourceGroupingLayout.stories.js":"./stories/props/resourceGroupingLayout.stories.js","./props/resourceIdAccessor.stories.js":"./stories/props/resourceIdAccessor.stories.js","./props/resourceTitleAccessor.stories.js":"./stories/props/resourceTitleAccessor.stories.js","./props/resources.stories.js":"./stories/props/resources.stories.js","./props/rtl.stories.js":"./stories/props/rtl.stories.js","./props/scrollToTime.stories.js":"./stories/props/scrollToTime.stories.js","./props/selectable.stories.js":"./stories/props/selectable.stories.js","./props/selected.stories.js":"./stories/props/selected.stories.js","./props/showAllEvents.stories.js":"./stories/props/showAllEvents.stories.js","./props/showMultiDayTimes.stories.js":"./stories/props/showMultiDayTimes.stories.js","./props/slotGroupPropGetter.stories.js":"./stories/props/slotGroupPropGetter.stories.js","./props/slotPropGetter.stories.js":"./stories/props/slotPropGetter.stories.js","./props/startAccessor.stories.js":"./stories/props/startAccessor.stories.js","./props/step.stories.js":"./stories/props/step.stories.js","./props/timeslots.stories.js":"./stories/props/timeslots.stories.js","./props/titleAccessor.stories.js":"./stories/props/titleAccessor.stories.js","./props/toolbar.stories.js":"./stories/props/toolbar.stories.js","./props/tooltipAccessor.stories.js":"./stories/props/tooltipAccessor.stories.js","./props/view.stories.js":"./stories/props/view.stories.js","./props/views.stories.js":"./stories/props/views.stories.js"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$"},"./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":function(module,__unused_webpack_exports,__webpack_require__){var map={"./AboutBigCalendar.stories.mdx":"./stories/AboutBigCalendar.stories.mdx","./AboutExamples.stories.mdx":"./stories/AboutExamples.stories.mdx","./addons/addOns.stories.mdx":"./stories/addons/addOns.stories.mdx","./addons/dragAndDrop/Introduction.stories.mdx":"./stories/addons/dragAndDrop/Introduction.stories.mdx","./addons/dragAndDrop/props/API.stories.mdx":"./stories/addons/dragAndDrop/props/API.stories.mdx","./demos/dragAndDrop.stories.mdx":"./stories/demos/dragAndDrop.stories.mdx","./guides/CustomStyling.stories.mdx":"./stories/guides/CustomStyling.stories.mdx","./guides/CustomView.stories.mdx":"./stories/guides/CustomView.stories.mdx","./guides/Dates.stories.mdx":"./stories/guides/Dates.stories.mdx","./guides/Timezones.stories.mdx":"./stories/guides/Timezones.stories.mdx","./guides/localizer.stories.mdx":"./stories/guides/localizer.stories.mdx","./props/API.stories.mdx":"./stories/props/API.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"?4f7e":function(){},"./generated-stories-entry.cjs":function(module,__unused_webpack_exports,__webpack_require__){"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)}},function(__webpack_require__){var __webpack_exec__=function(moduleId){return __webpack_require__(__webpack_require__.s=moduleId)};__webpack_require__.O(0,[882],(function(){return __webpack_exec__("./stories/resources/main.scss"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/react/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.cjs")}));__webpack_require__.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,